{"version":3,"sources":["globals.js","assets/game/words.js","components/game/input.js","components/game/test-countdown.js","components/game/text.js","components/game/test-time-controls.js","components/game/type-test.js","components/game/score-screen.js","components/game/type-test-handler.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["largestMedium","g","small","medium","largestSmall","atMostMedium","atleastMedium","large","bgcolor","WORDS_PER_ROW","ROW_COUNT","TEST_LENGTH_SHORT","TEST_LENGTH_MEDIUM","TEST_LENGTH_LONG","TEST_LENGTH_DEFAULT","FOCUS_CHECK_INTERVAL","GlobalStyle","createGlobalStyle","words","StyledInput","styled","input","Input","props","textInput","useRef","useEffect","focusTimer","setInterval","current","clearInterval","focus","type","placeholder","focused","playing","value","inputValue","onKeyDown","e","test","key","setPlaying","endTest","handleSpace","handleKeyDown","onInput","text","maxLen","replace","substring","filterInput","target","currentWord","length","setInputValue","handleInput","id","aria-label","ref","onBlur","TimerWrapper","div","Numbers","span","TestTimer","timeLeft","TextWrapper","StyledRow","caretOffset","css","currentRow","StyledWord","isCurrent","isCorrect","StyledLetter","entered","isIncorrect","wordIncorrect","Row","className","ind","children","Word","Letter","Text","useState","rows","rowArr","setRowArr","rowsToHightlight","useMemo","restartCaretAnimation","useCallback","rowElem","document","querySelector","classList","remove","offsetHeight","add","handleKeypress","window","addEventListener","handleKeyup","removeEventListener","map","row","rowInd","word","wordInd","currentWordInd","letter","letterInd","React","memo","StyledButton","button","StyledTimeControls","Button","onClick","setTestLength","testLengthOption","TimeControls","testLengthOptions","option","StyledTypeTest","TypeTest","getWord","Math","floor","random","split","loadRow","wordArr","indexOf","push","loadRows","Array","from","_","testLength","setTimeLeft","setCurrentWordInd","setCurrentRow","rowProgress","setRowProgress","textRows","setTextRows","setWordIncorrect","correctWordsCount","setCorrectWordsCount","checkFullWord","join","updateCurrentWordInd","tempArr","shift","updateTextRows","timerInterval","documentIsFocused","calcTestScore","setTestConcluded","setTimeout","checkWord","updateCurrentWord","StyledScoreScreen","ScoreScreen","testScore","TypeTestWrapper","TypeTestHandler","testConcluded","setTestScore","correctWordCount","Main","main","App","hasFocus","setDocumentIsFocused","body","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6hCAKA,IACMA,EAAgB,KAKhBC,EAAI,CAGRC,MAAM,+BAAD,OATc,IASd,OACLC,OAAO,+BAAD,OAAiCC,IAAjC,+BAAsEJ,EAAtE,OACNK,aAAa,+BAAD,OAAiCL,EAAjC,OACZM,cAAc,+BAAD,OAAiCF,IAAjC,OACbG,MAAM,+BAAD,OAAiCP,KAAjC,OAELQ,QAAS,OAGTC,cAAe,EACfC,UAAW,EAIXC,kBAAmB,GACnBC,mBAAoB,GACpBC,iBAAkB,GAElBC,oBAAqB,GAGrBC,qBAAsB,IAGTd,IAETe,EAAcC,YAAH,IAsCNhB,EAAEM,OC65BEW,EAz+BD,CACZ,UACA,OACA,QACA,QACA,SACA,YACA,UACA,SACA,MACA,SACA,WACA,WACA,MACA,UACA,iBACA,QACA,QACA,SACA,QACA,QACA,UACA,MACA,SACA,QACA,MACA,QACA,YACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,UACA,OACA,WACA,SACA,WACA,QACA,SACA,WACA,MACA,SACA,UACA,SACA,MACA,SACA,WACA,SACA,QACA,WACA,OACA,QACA,MACA,SACA,SACA,MACA,UACA,SACA,KACA,MACA,SACA,KACA,SACA,YACA,WACA,WACA,SACA,YACA,YACA,QACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,KACA,OACA,YACA,UACA,SACA,MACA,SACA,QACA,WACA,SACA,UACA,UACA,OACA,SACA,UACA,SACA,MACA,OACA,UACA,MACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,WACA,MACA,MACA,KACA,OACA,SACA,WACA,MACA,SACA,YACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,MACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,YACA,QACA,YACA,SACA,SACA,YACA,SACA,QACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,aACA,UACA,QACA,OACA,aACA,SACA,YACA,UACA,UACA,WACA,UACA,YACA,aACA,WACA,WACA,WACA,UACA,WACA,UACA,OACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,WACA,UACA,MACA,UACA,WACA,MACA,OACA,OACA,WACA,MACA,OACA,OACA,QACA,SACA,SACA,SACA,WACA,OACA,UACA,SACA,WACA,aACA,WACA,SACA,UACA,SACA,YACA,UACA,cACA,MACA,aACA,YACA,YACA,SACA,YACA,WACA,WACA,UACA,aACA,UACA,KACA,SACA,MACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,MACA,WACA,UACA,OACA,YACA,SACA,SACA,QACA,SACA,WACA,OACA,WACA,MACA,SACA,QACA,SACA,QACA,SACA,cACA,gBACA,aACA,YACA,OACA,UACA,QACA,OACA,QACA,YACA,WACA,aACA,WACA,UACA,UACA,YACA,QACA,SACA,aACA,SACA,UACA,MACA,OACA,OACA,SACA,OACA,OACA,SACA,MACA,OACA,SACA,OACA,UACA,OACA,UACA,MACA,QACA,QACA,SACA,OACA,OACA,QACA,UACA,YACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,QACA,SACA,OACA,OACA,MACA,QACA,UACA,SACA,OACA,SACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,MACA,UACA,aACA,MACA,OACA,OACA,QACA,KACA,OACA,OACA,aACA,QACA,QACA,SACA,QACA,OACA,SACA,QACA,MACA,MACA,OACA,OACA,YACA,OACA,OACA,SACA,QACA,OACA,OACA,KACA,OACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,OACA,UACA,OACA,MACA,UACA,MACA,UACA,MACA,OACA,OACA,OACA,WACA,MACA,QACA,OACA,QACA,MACA,UACA,OACA,QACA,UACA,UACA,OACA,WACA,KACA,QACA,UACA,SACA,YACA,UACA,KACA,UACA,YACA,WACA,SACA,WACA,aACA,WACA,cACA,SACA,UACA,cACA,WACA,cACA,gBACA,YACA,OACA,aACA,UACA,QACA,KACA,OACA,MACA,SACA,MACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,UACA,OACA,YACA,OACA,WACA,QACA,OACA,OACA,QACA,QACA,MACA,SACA,MACA,OACA,SACA,QACA,QACA,QACA,OACA,MACA,QACA,OACA,MACA,SACA,QACA,MACA,OACA,QACA,OACA,SACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,MACA,UACA,WACA,OACA,WACA,QACA,WACA,OACA,MACA,SACA,aACA,UACA,OACA,SACA,WACA,WACA,SACA,MACA,QACA,KACA,OACA,UACA,QACA,UACA,OACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,WACA,UACA,OACA,SACA,OACA,UACA,QACA,SACA,SACA,QACA,QACA,OACA,UACA,OACA,SACA,QACA,OACA,WACA,QACA,KACA,MACA,OACA,QACA,OACA,KACA,SACA,OACA,SACA,WACA,UACA,SACA,OACA,SACA,YACA,OACA,UACA,QACA,MACA,OACA,YACA,OACA,OACA,QACA,KACA,OACA,MACA,QACA,MACA,OACA,UACA,SACA,MACA,SACA,QACA,KACA,MACA,QACA,SACA,UACA,WACA,QACA,KACA,MACA,KACA,MACA,KACA,OACA,MACA,OACA,OACA,OACA,YACA,cACA,SACA,KACA,QACA,eACA,QACA,SACA,MACA,MACA,UACA,OACA,MACA,QACA,OACA,OACA,WACA,QACA,SACA,OACA,cACA,aACA,eACA,UACA,QACA,OACA,OACA,UACA,UACA,MACA,QACA,SACA,MACA,UACA,cACA,UACA,SACA,SACA,WACA,QACA,WACA,OACA,UACA,QACA,QACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,YACA,WACA,OACA,UACA,aACA,WACA,WACA,WACA,QACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,aACA,eACA,YACA,UACA,UACA,WACA,UACA,QACA,UACA,SACA,OACA,UACA,OACA,MACA,UACA,WACA,UACA,QACA,OACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,YACA,SACA,MACA,SACA,UACA,SACA,SACA,eACA,YACA,SACA,WACA,SACA,SACA,YACA,aACA,UACA,WACA,WACA,UACA,WACA,iBACA,OACA,SACA,SACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,QACA,SACA,UACA,YACA,QACA,MACA,SACA,OACA,SACA,UACA,WACA,MACA,OACA,OACA,OACA,OACA,SACA,QACA,SACA,UACA,QACA,UACA,MACA,QACA,UACA,MACA,SACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,WACA,OACA,OACA,OACA,cACA,UACA,SACA,SACA,QACA,OACA,SACA,SACA,MACA,OACA,YACA,MACA,OACA,QACA,OACA,QACA,QACA,KACA,SACA,UACA,UACA,OACA,WACA,UACA,YACA,YACA,MACA,OACA,OACA,OACA,QACA,SACA,QACA,WACA,QACA,QACA,UACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,OACA,QACA,QACA,YACA,UACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,WACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,UACA,aACA,OACA,WACA,SACA,UACA,SACA,UACA,OACA,UACA,SACA,QACA,OACA,OACA,OACA,MACA,QACA,UACA,OACA,aACA,aACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,QACA,OACA,aACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,WACA,SACA,QACA,UACA,aACA,QACA,OACA,OACA,KACA,QACA,WACA,UACA,MACA,MACA,QACA,QACA,SACA,OACA,QACA,cACA,WACA,SACA,QACA,YACA,OACA,QACA,OACA,UACA,OACA,QACA,MACA,OACA,KACA,MACA,OACA,QACA,aACA,OACA,QACA,KACA,OACA,KACA,MACA,UACA,QACA,UACA,OACA,SACA,OACA,WACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,QACA,MACA,KACA,SACA,OACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,QACA,UACA,QACA,QACA,QACA,MACA,QACA,OACA,QACA,MACA,OACA,OACA,OACA,MACA,OACA,SACA,OACA,OACA,SACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,QACA,OACA,Y,6VC/9BF,IAAMC,EAAcC,IAAOC,MAAV,KAoGFC,EAlFD,SAACC,GAGb,IAAIC,EAAYC,iBAAO,MAGvBC,qBAAU,WACR,IAAIC,EAAaC,aAAY,WACD,OAAtBJ,EAAUK,QACZC,cAAcH,GAEdH,EAAUK,QAAQE,UAEnB,KAEH,OAAO,WACLD,cAAcH,MAEf,IAmCH,OACE,cAACR,EAAD,CACEa,KAAK,OAELC,YACEV,EAAMW,QAEHX,EAAMY,QAAU,GAAK,6BAErBZ,EAAMY,QAAU,+BAAiC,0BAEtDC,MAAOb,EAAMc,WACbC,UAAW,SAACC,IAlCM,SAACA,GAGjB,aAAaC,KAAKD,EAAEE,MAAkB,UAAVF,EAAEE,MAAqC,IAAlBlB,EAAMY,SACzDZ,EAAMmB,YAAW,GAIL,WAAVH,EAAEE,KACJlB,EAAMoB,UAGM,MAAVJ,EAAEE,KACJlB,EAAMqB,cAqBaC,CAAcN,IACjCO,QAAS,SAACP,IACc,IAAlBhB,EAAMY,SAnBI,SAACI,GACnB,IAAIQ,EAzBc,SAAC1B,EAAO2B,GAC1B,OAAO3B,EACJ4B,QAAQ,sBAAuB,IAC/BA,QAAQ,OAAQ,IAChBC,UAAU,EAAGF,GAqBLG,CAAYZ,EAAE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","file":"static/js/main.a191b7cc.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components';\n\n/**\n * MEDIA BREAKPOINT VARS TWEAK HERE\n */\nconst largestSmall = 767; // px\nconst largestMedium = 1299; // px\n\n/**\n * GLOBAL VARS\n */\nconst g = {\n\n  // Media breakpoints\n  small: `only screen and (max-width: ${largestSmall}px)`,\n  medium: `only screen and (min-width: ${largestSmall+1}px) and (max-width: ${largestMedium}px)`,\n  atMostMedium: `only screen and (max-width: ${largestMedium}px)`,\n  atleastMedium: `only screen and (min-width: ${largestSmall+1}px)`,\n  large: `only screen and (min-width: ${largestMedium+1}px)`,\n  \n  bgcolor: '#333',\n\n  // TYPE TEST CONFIGURATION VARS\n  WORDS_PER_ROW: 9,\n  ROW_COUNT: 3,\n\n  // TEST DURATION OPTIONS (in seconds)\n  \n  TEST_LENGTH_SHORT: 15,\n  TEST_LENGTH_MEDIUM: 30,\n  TEST_LENGTH_LONG: 60,\n\n  TEST_LENGTH_DEFAULT: 30,\n\n  // Set how often component checks if document is focused\n  FOCUS_CHECK_INTERVAL: 66,\n}\n\nexport default g;\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --default-padding: 1.5rem;\n    \n    --default-timing: cubic-bezier(0.78, 0.2, 0.05, 1.0);\n\n    --caret-opacity: 0.8;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n    box-sizing: border-box;\n  }\n\n  body {\n    \n  }\n  \n  body.no-outline:focus,\n  body.no-outline *:focus ~ * {\n    outline: none !important;\n  }\n\n  *:active,\n  *:active ~ * {\n    outline: none;\n  }\n\n  #root {\n    \n  }\n\n  @media ${g.large} {\n    :root {\n      --default-padding: 2rem;\n    }\n  }\n\n  /* ANIMATIONS */\n  @keyframes caret-blink {\n    from {\n      opacity: var(---caret-opacity);\n    }\n\n    47% {\n      opacity: var(---caret-opacity);\n    }\n\n    53% {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n`\n\nexport {GlobalStyle};","// (Around) 1000 common words in English\n// adapted from https://www.ef.com/wwen/english-resources/english-vocabulary/top-1000-words/\nconst words = [\n  \"ability\",\n  \"able\",\n  \"about\",\n  \"above\",\n  \"accept\",\n  \"according\",\n  \"account\",\n  \"across\",\n  \"act\",\n  \"action\",\n  \"activity\",\n  \"actually\",\n  \"add\",\n  \"address\",\n  \"administration\",\n  \"admit\",\n  \"adult\",\n  \"affect\",\n  \"after\",\n  \"again\",\n  \"against\",\n  \"age\",\n  \"agency\",\n  \"agent\",\n  \"ago\",\n  \"agree\",\n  \"agreement\",\n  \"ahead\",\n  \"air\",\n  \"all\",\n  \"allow\",\n  \"almost\",\n  \"alone\",\n  \"along\",\n  \"already\",\n  \"also\",\n  \"although\",\n  \"always\",\n  \"American\",\n  \"among\",\n  \"amount\",\n  \"analysis\",\n  \"and\",\n  \"animal\",\n  \"another\",\n  \"answer\",\n  \"any\",\n  \"anyone\",\n  \"anything\",\n  \"appear\",\n  \"apply\",\n  \"approach\",\n  \"area\",\n  \"argue\",\n  \"arm\",\n  \"around\",\n  \"arrive\",\n  \"art\",\n  \"article\",\n  \"artist\",\n  \"as\",\n  \"ask\",\n  \"assume\",\n  \"at\",\n  \"attack\",\n  \"attention\",\n  \"attorney\",\n  \"audience\",\n  \"author\",\n  \"authority\",\n  \"available\",\n  \"avoid\",\n  \"away\",\n  \"baby\",\n  \"back\",\n  \"bad\",\n  \"bag\",\n  \"ball\",\n  \"bank\",\n  \"bar\",\n  \"base\",\n  \"be\",\n  \"beat\",\n  \"beautiful\",\n  \"because\",\n  \"become\",\n  \"bed\",\n  \"before\",\n  \"begin\",\n  \"behavior\",\n  \"behind\",\n  \"believe\",\n  \"benefit\",\n  \"best\",\n  \"better\",\n  \"between\",\n  \"beyond\",\n  \"big\",\n  \"bill\",\n  \"billion\",\n  \"bit\",\n  \"black\",\n  \"blood\",\n  \"blue\",\n  \"board\",\n  \"body\",\n  \"book\",\n  \"born\",\n  \"both\",\n  \"box\",\n  \"boy\",\n  \"break\",\n  \"bring\",\n  \"brother\",\n  \"budget\",\n  \"build\",\n  \"building\",\n  \"business\",\n  \"but\",\n  \"buy\",\n  \"by\",\n  \"call\",\n  \"camera\",\n  \"campaign\",\n  \"can\",\n  \"cancer\",\n  \"candidate\",\n  \"capital\",\n  \"car\",\n  \"card\",\n  \"care\",\n  \"career\",\n  \"carry\",\n  \"case\",\n  \"cat\",\n  \"catch\",\n  \"cause\",\n  \"cell\",\n  \"center\",\n  \"central\",\n  \"century\",\n  \"certain\",\n  \"certainly\",\n  \"chair\",\n  \"challenge\",\n  \"chance\",\n  \"change\",\n  \"character\",\n  \"charge\",\n  \"check\",\n  \"child\",\n  \"choice\",\n  \"choose\",\n  \"church\",\n  \"citizen\",\n  \"city\",\n  \"civil\",\n  \"claim\",\n  \"class\",\n  \"clear\",\n  \"clearly\",\n  \"close\",\n  \"coach\",\n  \"cold\",\n  \"collection\",\n  \"college\",\n  \"color\",\n  \"come\",\n  \"commercial\",\n  \"common\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"concern\",\n  \"condition\",\n  \"conference\",\n  \"Congress\",\n  \"consider\",\n  \"consumer\",\n  \"contain\",\n  \"continue\",\n  \"control\",\n  \"cost\",\n  \"could\",\n  \"country\",\n  \"couple\",\n  \"course\",\n  \"court\",\n  \"cover\",\n  \"create\",\n  \"crime\",\n  \"cultural\",\n  \"culture\",\n  \"cup\",\n  \"current\",\n  \"customer\",\n  \"cut\",\n  \"dark\",\n  \"data\",\n  \"daughter\",\n  \"day\",\n  \"dead\",\n  \"deal\",\n  \"death\",\n  \"debate\",\n  \"decade\",\n  \"decide\",\n  \"decision\",\n  \"deep\",\n  \"defense\",\n  \"degree\",\n  \"Democrat\",\n  \"democratic\",\n  \"describe\",\n  \"design\",\n  \"despite\",\n  \"detail\",\n  \"determine\",\n  \"develop\",\n  \"development\",\n  \"die\",\n  \"difference\",\n  \"different\",\n  \"difficult\",\n  \"dinner\",\n  \"direction\",\n  \"director\",\n  \"discover\",\n  \"discuss\",\n  \"discussion\",\n  \"disease\",\n  \"do\",\n  \"doctor\",\n  \"dog\",\n  \"door\",\n  \"down\",\n  \"draw\",\n  \"dream\",\n  \"drive\",\n  \"drop\",\n  \"drug\",\n  \"during\",\n  \"each\",\n  \"early\",\n  \"east\",\n  \"easy\",\n  \"eat\",\n  \"economic\",\n  \"economy\",\n  \"edge\",\n  \"education\",\n  \"effect\",\n  \"effort\",\n  \"eight\",\n  \"either\",\n  \"election\",\n  \"else\",\n  \"employee\",\n  \"end\",\n  \"energy\",\n  \"enjoy\",\n  \"enough\",\n  \"enter\",\n  \"entire\",\n  \"environment\",\n  \"environmental\",\n  \"especially\",\n  \"establish\",\n  \"even\",\n  \"evening\",\n  \"event\",\n  \"ever\",\n  \"every\",\n  \"everybody\",\n  \"everyone\",\n  \"everything\",\n  \"evidence\",\n  \"exactly\",\n  \"example\",\n  \"executive\",\n  \"exist\",\n  \"expect\",\n  \"experience\",\n  \"expert\",\n  \"explain\",\n  \"eye\",\n  \"face\",\n  \"fact\",\n  \"factor\",\n  \"fail\",\n  \"fall\",\n  \"family\",\n  \"far\",\n  \"fast\",\n  \"father\",\n  \"fear\",\n  \"federal\",\n  \"feel\",\n  \"feeling\",\n  \"few\",\n  \"field\",\n  \"fight\",\n  \"figure\",\n  \"fill\",\n  \"film\",\n  \"final\",\n  \"finally\",\n  \"financial\",\n  \"find\",\n  \"fine\",\n  \"finger\",\n  \"finish\",\n  \"fire\",\n  \"firm\",\n  \"first\",\n  \"fish\",\n  \"five\",\n  \"floor\",\n  \"fly\",\n  \"focus\",\n  \"follow\",\n  \"food\",\n  \"foot\",\n  \"for\",\n  \"force\",\n  \"foreign\",\n  \"forget\",\n  \"form\",\n  \"former\",\n  \"forward\",\n  \"four\",\n  \"free\",\n  \"friend\",\n  \"from\",\n  \"front\",\n  \"full\",\n  \"fund\",\n  \"future\",\n  \"game\",\n  \"garden\",\n  \"gas\",\n  \"general\",\n  \"generation\",\n  \"get\",\n  \"girl\",\n  \"give\",\n  \"glass\",\n  \"go\",\n  \"goal\",\n  \"good\",\n  \"government\",\n  \"great\",\n  \"green\",\n  \"ground\",\n  \"group\",\n  \"grow\",\n  \"growth\",\n  \"guess\",\n  \"gun\",\n  \"guy\",\n  \"hair\",\n  \"half\",\n  \"hamburger\",\n  \"hand\",\n  \"hang\",\n  \"happen\",\n  \"happy\",\n  \"hard\",\n  \"have\",\n  \"he\",\n  \"head\",\n  \"health\",\n  \"hear\",\n  \"heart\",\n  \"heat\",\n  \"heavy\",\n  \"help\",\n  \"her\",\n  \"here\",\n  \"herself\",\n  \"high\",\n  \"him\",\n  \"himself\",\n  \"his\",\n  \"history\",\n  \"hit\",\n  \"hold\",\n  \"home\",\n  \"hope\",\n  \"hospital\",\n  \"hot\",\n  \"hotel\",\n  \"hour\",\n  \"house\",\n  \"how\",\n  \"however\",\n  \"huge\",\n  \"human\",\n  \"hundred\",\n  \"husband\",\n  \"idea\",\n  \"identify\",\n  \"if\",\n  \"image\",\n  \"imagine\",\n  \"impact\",\n  \"important\",\n  \"improve\",\n  \"in\",\n  \"include\",\n  \"including\",\n  \"increase\",\n  \"indeed\",\n  \"indicate\",\n  \"individual\",\n  \"industry\",\n  \"information\",\n  \"inside\",\n  \"instead\",\n  \"institution\",\n  \"interest\",\n  \"interesting\",\n  \"international\",\n  \"interview\",\n  \"into\",\n  \"investment\",\n  \"involve\",\n  \"issue\",\n  \"it\",\n  \"item\",\n  \"its\",\n  \"itself\",\n  \"job\",\n  \"join\",\n  \"just\",\n  \"keep\",\n  \"key\",\n  \"kid\",\n  \"kill\",\n  \"kind\",\n  \"kitchen\",\n  \"know\",\n  \"knowledge\",\n  \"land\",\n  \"language\",\n  \"large\",\n  \"last\",\n  \"late\",\n  \"later\",\n  \"laugh\",\n  \"law\",\n  \"lawyer\",\n  \"lay\",\n  \"lead\",\n  \"leader\",\n  \"learn\",\n  \"least\",\n  \"leave\",\n  \"left\",\n  \"leg\",\n  \"legal\",\n  \"less\",\n  \"let\",\n  \"letter\",\n  \"level\",\n  \"lie\",\n  \"life\",\n  \"light\",\n  \"like\",\n  \"likely\",\n  \"line\",\n  \"list\",\n  \"listen\",\n  \"little\",\n  \"live\",\n  \"local\",\n  \"long\",\n  \"look\",\n  \"lose\",\n  \"loss\",\n  \"lot\",\n  \"love\",\n  \"low\",\n  \"machine\",\n  \"magazine\",\n  \"main\",\n  \"maintain\",\n  \"major\",\n  \"majority\",\n  \"make\",\n  \"man\",\n  \"manage\",\n  \"management\",\n  \"manager\",\n  \"many\",\n  \"market\",\n  \"marriage\",\n  \"material\",\n  \"matter\",\n  \"may\",\n  \"maybe\",\n  \"me\",\n  \"mean\",\n  \"measure\",\n  \"media\",\n  \"medical\",\n  \"meet\",\n  \"meeting\",\n  \"member\",\n  \"memory\",\n  \"mention\",\n  \"message\",\n  \"method\",\n  \"middle\",\n  \"might\",\n  \"military\",\n  \"million\",\n  \"mind\",\n  \"minute\",\n  \"miss\",\n  \"mission\",\n  \"model\",\n  \"modern\",\n  \"moment\",\n  \"money\",\n  \"month\",\n  \"more\",\n  \"morning\",\n  \"most\",\n  \"mother\",\n  \"mouth\",\n  \"move\",\n  \"movement\",\n  \"movie\",\n  \"Mr\",\n  \"Mrs\",\n  \"much\",\n  \"music\",\n  \"must\",\n  \"my\",\n  \"myself\",\n  \"name\",\n  \"nation\",\n  \"national\",\n  \"natural\",\n  \"nature\",\n  \"near\",\n  \"nearly\",\n  \"necessary\",\n  \"need\",\n  \"network\",\n  \"never\",\n  \"new\",\n  \"news\",\n  \"newspaper\",\n  \"next\",\n  \"nice\",\n  \"night\",\n  \"no\",\n  \"none\",\n  \"nor\",\n  \"north\",\n  \"not\",\n  \"note\",\n  \"nothing\",\n  \"notice\",\n  \"now\",\n  \"number\",\n  \"occur\",\n  \"of\",\n  \"off\",\n  \"offer\",\n  \"office\",\n  \"officer\",\n  \"official\",\n  \"often\",\n  \"oh\",\n  \"oil\",\n  \"ok\",\n  \"old\",\n  \"on\",\n  \"once\",\n  \"one\",\n  \"only\",\n  \"onto\",\n  \"open\",\n  \"operation\",\n  \"opportunity\",\n  \"option\",\n  \"or\",\n  \"order\",\n  \"organization\",\n  \"other\",\n  \"others\",\n  \"our\",\n  \"out\",\n  \"outside\",\n  \"over\",\n  \"own\",\n  \"owner\",\n  \"page\",\n  \"pain\",\n  \"painting\",\n  \"paper\",\n  \"parent\",\n  \"part\",\n  \"participant\",\n  \"particular\",\n  \"particularly\",\n  \"partner\",\n  \"party\",\n  \"pass\",\n  \"past\",\n  \"patient\",\n  \"pattern\",\n  \"pay\",\n  \"peace\",\n  \"people\",\n  \"per\",\n  \"perform\",\n  \"performance\",\n  \"perhaps\",\n  \"period\",\n  \"person\",\n  \"personal\",\n  \"phone\",\n  \"physical\",\n  \"pick\",\n  \"picture\",\n  \"piece\",\n  \"place\",\n  \"plan\",\n  \"plant\",\n  \"play\",\n  \"player\",\n  \"point\",\n  \"police\",\n  \"policy\",\n  \"political\",\n  \"politics\",\n  \"poor\",\n  \"popular\",\n  \"population\",\n  \"position\",\n  \"positive\",\n  \"possible\",\n  \"power\",\n  \"practice\",\n  \"prepare\",\n  \"present\",\n  \"president\",\n  \"pressure\",\n  \"pretty\",\n  \"prevent\",\n  \"price\",\n  \"private\",\n  \"probably\",\n  \"problem\",\n  \"process\",\n  \"produce\",\n  \"product\",\n  \"production\",\n  \"professional\",\n  \"professor\",\n  \"program\",\n  \"project\",\n  \"property\",\n  \"protect\",\n  \"prove\",\n  \"provide\",\n  \"public\",\n  \"pull\",\n  \"purpose\",\n  \"push\",\n  \"put\",\n  \"quality\",\n  \"question\",\n  \"quickly\",\n  \"quite\",\n  \"race\",\n  \"radio\",\n  \"raise\",\n  \"range\",\n  \"rate\",\n  \"rather\",\n  \"reach\",\n  \"read\",\n  \"ready\",\n  \"real\",\n  \"reality\",\n  \"realize\",\n  \"really\",\n  \"reason\",\n  \"receive\",\n  \"recent\",\n  \"recently\",\n  \"recognize\",\n  \"record\",\n  \"red\",\n  \"reduce\",\n  \"reflect\",\n  \"region\",\n  \"relate\",\n  \"relationship\",\n  \"religious\",\n  \"remain\",\n  \"remember\",\n  \"remove\",\n  \"report\",\n  \"represent\",\n  \"Republican\",\n  \"require\",\n  \"research\",\n  \"resource\",\n  \"respond\",\n  \"response\",\n  \"responsibility\",\n  \"rest\",\n  \"result\",\n  \"return\",\n  \"reveal\",\n  \"rich\",\n  \"right\",\n  \"rise\",\n  \"risk\",\n  \"road\",\n  \"rock\",\n  \"role\",\n  \"room\",\n  \"rule\",\n  \"run\",\n  \"safe\",\n  \"same\",\n  \"save\",\n  \"say\",\n  \"scene\",\n  \"school\",\n  \"science\",\n  \"scientist\",\n  \"score\",\n  \"sea\",\n  \"season\",\n  \"seat\",\n  \"second\",\n  \"section\",\n  \"security\",\n  \"see\",\n  \"seek\",\n  \"seem\",\n  \"sell\",\n  \"send\",\n  \"senior\",\n  \"sense\",\n  \"series\",\n  \"serious\",\n  \"serve\",\n  \"service\",\n  \"set\",\n  \"seven\",\n  \"several\",\n  \"sex\",\n  \"sexual\",\n  \"shake\",\n  \"share\",\n  \"she\",\n  \"shoot\",\n  \"short\",\n  \"shot\",\n  \"should\",\n  \"shoulder\",\n  \"show\",\n  \"side\",\n  \"sign\",\n  \"significant\",\n  \"similar\",\n  \"simple\",\n  \"simply\",\n  \"since\",\n  \"sing\",\n  \"single\",\n  \"sister\",\n  \"sit\",\n  \"site\",\n  \"situation\",\n  \"six\",\n  \"size\",\n  \"skill\",\n  \"skin\",\n  \"small\",\n  \"smile\",\n  \"so\",\n  \"social\",\n  \"society\",\n  \"soldier\",\n  \"some\",\n  \"somebody\",\n  \"someone\",\n  \"something\",\n  \"sometimes\",\n  \"son\",\n  \"song\",\n  \"soon\",\n  \"sort\",\n  \"sound\",\n  \"source\",\n  \"south\",\n  \"southern\",\n  \"space\",\n  \"speak\",\n  \"special\",\n  \"specific\",\n  \"speech\",\n  \"spend\",\n  \"sport\",\n  \"spring\",\n  \"staff\",\n  \"stage\",\n  \"stand\",\n  \"standard\",\n  \"star\",\n  \"start\",\n  \"state\",\n  \"statement\",\n  \"station\",\n  \"stay\",\n  \"step\",\n  \"still\",\n  \"stock\",\n  \"stop\",\n  \"store\",\n  \"story\",\n  \"strategy\",\n  \"street\",\n  \"strong\",\n  \"structure\",\n  \"student\",\n  \"study\",\n  \"stuff\",\n  \"style\",\n  \"subject\",\n  \"success\",\n  \"successful\",\n  \"such\",\n  \"suddenly\",\n  \"suffer\",\n  \"suggest\",\n  \"summer\",\n  \"support\",\n  \"sure\",\n  \"surface\",\n  \"system\",\n  \"table\",\n  \"take\",\n  \"talk\",\n  \"task\",\n  \"tax\",\n  \"teach\",\n  \"teacher\",\n  \"team\",\n  \"technology\",\n  \"television\",\n  \"tell\",\n  \"ten\",\n  \"tend\",\n  \"term\",\n  \"test\",\n  \"than\",\n  \"thank\",\n  \"that\",\n  \"the\",\n  \"their\",\n  \"them\",\n  \"themselves\",\n  \"then\",\n  \"theory\",\n  \"there\",\n  \"these\",\n  \"they\",\n  \"thing\",\n  \"think\",\n  \"third\",\n  \"this\",\n  \"those\",\n  \"though\",\n  \"thought\",\n  \"thousand\",\n  \"threat\",\n  \"three\",\n  \"through\",\n  \"throughout\",\n  \"throw\",\n  \"thus\",\n  \"time\",\n  \"to\",\n  \"today\",\n  \"together\",\n  \"tonight\",\n  \"too\",\n  \"top\",\n  \"total\",\n  \"tough\",\n  \"toward\",\n  \"town\",\n  \"trade\",\n  \"traditional\",\n  \"training\",\n  \"travel\",\n  \"treat\",\n  \"treatment\",\n  \"tree\",\n  \"trial\",\n  \"trip\",\n  \"trouble\",\n  \"true\",\n  \"truth\",\n  \"try\",\n  \"turn\",\n  \"TV\",\n  \"two\",\n  \"type\",\n  \"under\",\n  \"understand\",\n  \"unit\",\n  \"until\",\n  \"up\",\n  \"upon\",\n  \"us\",\n  \"use\",\n  \"usually\",\n  \"value\",\n  \"various\",\n  \"very\",\n  \"victim\",\n  \"view\",\n  \"violence\",\n  \"visit\",\n  \"voice\",\n  \"vote\",\n  \"wait\",\n  \"walk\",\n  \"wall\",\n  \"want\",\n  \"war\",\n  \"watch\",\n  \"water\",\n  \"way\",\n  \"we\",\n  \"weapon\",\n  \"wear\",\n  \"week\",\n  \"weight\",\n  \"well\",\n  \"west\",\n  \"western\",\n  \"what\",\n  \"whatever\",\n  \"when\",\n  \"where\",\n  \"whether\",\n  \"which\",\n  \"while\",\n  \"white\",\n  \"who\",\n  \"whole\",\n  \"whom\",\n  \"whose\",\n  \"why\",\n  \"wide\",\n  \"wife\",\n  \"will\",\n  \"win\",\n  \"wind\",\n  \"window\",\n  \"wish\",\n  \"with\",\n  \"within\",\n  \"without\",\n  \"woman\",\n  \"wonder\",\n  \"word\",\n  \"work\",\n  \"worker\",\n  \"world\",\n  \"worry\",\n  \"would\",\n  \"write\",\n  \"writer\",\n  \"wrong\",\n  \"yard\",\n  \"yeah\",\n  \"year\",\n  \"yes\",\n  \"yet\",\n  \"you\",\n  \"young\",\n  \"your\",\n  \"yourself\",\n];\n\nexport default words;","/**\n * TYPE TEST INPUT FIELD COMPONENT\n * Automatically focused text-input which is visually hidden.\n */\n\nimport React, {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n// import g from '../../globals.js';\n\nconst StyledInput = styled.input`\n/*\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  font-family: 'Roboto Mono', monospace;\n  font-size: 1.2rem;\n  width: 50%;\n  padding: 0.7rem 0.6rem;\n  border-radius: 0.6rem;\n  transition: opacity 0.225s ease;\n*/\n  opacity: 0;  \n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst Input = (props) => {\n\n  // initiate reference to textinput element\n  let textInput = useRef(null);\n\n  // Keep input focused. Good or nah?\n  useEffect(() => {\n    let focusTimer = setInterval(() => {\n      if (textInput.current === null) {\n        clearInterval(focusTimer);\n      } else {\n        textInput.current.focus();\n      }\n    }, 200);\n\n    return () => {\n      clearInterval(focusTimer);\n    }\n  }, []);\n\n  /* Filter text-input. \n  Remove everything except chars inside square brackets.\n  Also remove whitespaces, incl. tabs, newlines.\n  Finally, trim chars which exceed length of 2nd parameter (currentWord). */\n  const filterInput = (input, maxLen) => {\n    return input\n      .replace(/[^a-zA-Z0-9-.,'!?]/g, \"\")\n      .replace(/\\s+/g, \"\")\n      .substring(0, maxLen);\n  }\n\n  const handleKeyDown = (e) => {\n\n    // Start game if key is a letter, i.e. if user started typing\n    if (/[a-z|A-Z]/g.test(e.key) && e.key !== 'Enter' && props.playing === false) {\n      props.setPlaying(true);\n    }\n\n    // Abort test if Escape is pressed\n    if (e.key === 'Escape') {\n      props.endTest();\n    }\n\n    if (e.key === ' ') {\n      props.handleSpace();\n    }\n  }\n\n  const handleInput = (e) => {\n    let text = filterInput(e.target.value, props.currentWord.length);\n    props.setInputValue(text);\n  }\n\n  return(\n    <StyledInput\n      type=\"text\"\n      // MAYBE REMOVE PLACEHOLDER SINCE INPUT IS HIDDEN?\n      placeholder={\n        props.focused ? \n          // focused && playing : focused && not playing\n          (props.playing ? '' : 'Begin typing to start test') :\n          // not focused && playing : not focused && not playing\n          (props.playing ? 'Test paused, focus to resume' : 'Click document to focus')\n      }\n      value={props.inputValue}\n      onKeyDown={(e) => {handleKeyDown(e)}}\n      onInput={(e) => {\n        if (props.playing === true) handleInput(e);\n      }}\n      id=\"text-input\"\n      aria-label=\"Type test input\"\n      ref={textInput}\n      onBlur={() => {\n        if (props.playing === true) {\n          // Try to focus\n          textInput.current.focus();\n        }\n      }}\n    />\n  );\n}\n\nexport default Input;","/**\n * TYPE TEST COUNTDOWN TIME\n * Prints time left on screen.\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst TimerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 2rem;\n`\n\nconst Numbers = styled.span`\n  color: #fff;\n  font-size: 3rem;\n`\n\nconst TestTimer = (props) => {\n  return(\n    <TimerWrapper>\n      <Numbers>\n        {props.timeLeft}\n      </Numbers>      \n    </TimerWrapper>\n  );\n}\n\nexport default TestTimer;","/**\n * TYPE TEST TEXT COMPONENT\n * Displays type test's words on screen.\n * Incorrectly input characters are highlighted in **PROBABLY RED**.\n */\n\nimport React, {useCallback, useMemo, useEffect, useState} from 'react';\nimport styled, {css} from 'styled-components';\n// import g from '../../globals.js';\n\nconst TextWrapper = styled.div`\n  color: ${props => props.focused ? '#fff' : 'transparent'};\n  transition: color 0.2s ease;\n\n  & > span {\n    line-height: 1.6;\n  }\n`\n\nconst StyledRow = styled.span`\n  display: flex;\n  position: relative;\n  align-items: center;\n  font-size: 1.5rem;\n\n  /**\n   * Blinking caret\n   * Absolutely positioned on current row, offset from left edge set by adding length\n   * of completed words on row and current length of input. Offset uses margin-left and the ch unit:\n   * (width of character '0' in current font, works because we're using monospace font).\n   */\n  &.first-row::before,\n  &.second-row::before {\n    position: absolute;\n    left: 0;\n    content: '';\n    height: 75%;\n    width: 3px;\n    background-color: darkorange;\n    opacity: 0.7;\n    visibility: ${props => props.focused ? 'visible' : 'hidden'};\n\n    ${props => props.caretOffset && css`\n      margin-left: ${props.caretOffset}ch;`\n    }\n  }\n\n  &.first-row::before {\n    display: ${props => props.currentRow === 0 ? 'inline-block' : 'none'};\n  }\n\n  &.second-row::before {\n    display: ${props => props.currentRow === 1 ? 'inline-block' : 'none'};\n  }\n\n  &.animate::before {\n    animation: 1.3s cubic-bezier(0.78, 0.2, 0.05, 1.0) 0s infinite forwards caret-blink;\n  }\n\n  &.first-row {\n    ${props => props.currentRow === 1 && css`\n      color: #888;`\n    }\n  }\n`\n\nconst StyledWord = styled.span`\n  ${props => props.isCurrent && css`\n    `\n  }\n\n  ${props => props.isCorrect && css`\n    color: #888; /* Use a variable */`\n  }\n`\n\nconst StyledLetter = styled.span`\n  transition: color 0.03s var(--default-timing), text-shadow 0.2s ease;;\n  text-shadow: ${props => props.focused ? 'none' : '0 0 0.4rem #fff'};\n\n  ${props => props.entered && css`\n    color: #888; /* Use a variable */`\n  }\n\n  ${props => props.isIncorrect && css`\n    color: darkred;`\n  }\n\n  ${props => props.isIncorrect && props.focused === false && css`\n    text-shadow: 0 0 0.4rem darkred;`\n  }\n\n  ${props => props.focused === false && css`\n    color: transparent;`\n  }\n\n  /**\n   * wordIncorrect is triggered quickly when an input word is checked and is incorrect.\n   * This then highlights incorrect characters.\n   */\n  ${props => props.wordIncorrect && props.isIncorrect && css`\n    color: red;`\n  }\n`\n\nconst Row = (props) => {\n  // Row classes necessary for caret positioning and animation.\n  const rowClasses = [\n    'first-row animate',\n    'second-row animate',\n    '',\n  ];\n\n  return (\n    <StyledRow\n      caretOffset={props.caretOffset}\n      className={rowClasses[props.ind]}\n      currentRow={props.currentRow}\n      focused={props.focused}\n    >\n      {props.children}\n    </StyledRow>\n  );\n}\n\nconst Word = (props) => {\n  return (\n    <StyledWord\n      isCurrent={props.isCurrent}\n      isCorrect={props.isCorrect}\n      className=\"word\"\n    >\n      {props.children}\n    </StyledWord>\n  );\n}\n\nconst Letter = (props) => {\n  return (\n    <StyledLetter\n      entered={props.entered}\n      isIncorrect={props.isIncorrect}\n      wordIncorrect={props.wordIncorrect}\n      focused={props.focused}\n      className=\"letter\"\n    >\n      {props.children}\n    </StyledLetter>\n  );\n}\n\n/**\n* Text component displays test's words on screen. Text is blurred when document loses focus.\n* Uses styled component Textwrapper. Uses components Row, Word, Letter.\n* Iterates through prop \"rows\" and prints its contents.\n*/\nconst Text = (props) => {\n\n  const [rowArr, setRowArr] = useState(props.rows);\n\n  const rowsToHightlight = useMemo(() => {\n    return([\n      '.first-row',\n      '.second-row',\n    ])}, []);\n\n  // Restart caret animation when key is pressed.\n  const restartCaretAnimation = useCallback (() => {\n    let rowElem = document.querySelector(rowsToHightlight[props.currentRow]);\n    rowElem.classList.remove('animate');\n    // Trigger reflow to allow animation to restart.\n    void rowElem.offsetHeight;\n    rowElem.classList.add('animate');\n  }, [rowsToHightlight, props.currentRow]);\n\n  useEffect(() => {\n    setRowArr(props.rows);\n  }, [props.rows]);\n\n  useEffect(() => {\n    const handleKeypress = () => {\n      restartCaretAnimation();\n    };\n    window.addEventListener('keypress', handleKeypress);\n\n    // Separate Keyup listener because keypress doesn't detect backspace.\n    const handleKeyup = (e) => {\n      if (e.key === 'Backspace') {\n        restartCaretAnimation();\n      }\n    };\n    window.addEventListener('keyup', handleKeyup);\n\n    return () => {\n      window.removeEventListener('keypress', handleKeypress);\n      window.removeEventListener('keyup', handleKeyup);\n    };\n  }, [props.inputValue, restartCaretAnimation]);\n\n  // Restart caret animation when focus is regained.  \n  useEffect(() => {\n    restartCaretAnimation();\n  },[restartCaretAnimation, props.focused]);\n\n  return (\n    <TextWrapper focused={props.focused}>\n      {rowArr.map((row, rowInd) => {\n        return (\n          <Row\n            key={rowInd}\n            ind={rowInd}\n            caretOffset={props.caretOffset}\n            currentRow={props.currentRow}\n            focused={props.focused}\n          >\n            {row.map((word, wordInd) => {\n              return (\n                <Word\n                  key={wordInd}\n                  isCurrent={rowInd === props.currentRow && wordInd === props.currentWordInd}\n                  isCorrect={rowInd === props.currentRow && props.currentWordInd > wordInd}\n                >\n                  {word.map((letter, letterInd) => {\n                    return (\n                      <Letter\n                        key={letterInd}\n                        // Highlight that letter has been input\n                        entered={\n                          rowInd === props.currentRow &&\n                          props.inputValue.length > letterInd &&\n                          wordInd === props.currentWordInd\n                        }\n                        // Highlights incorrectly input letter\n                        isIncorrect={\n                          props.currentWord[letterInd] !== props.inputValue[letterInd] && // Match letter\n                          rowInd === props.currentRow && // Check only currentRow\n                          wordInd === props.currentWordInd && // Check only currentWord\n                          props.inputValue.length > letterInd // Don't check letters not yet input\n                        }\n                        wordIncorrect={props.wordIncorrect}\n                        focused={props.focused}\n                      >\n                        {letter}\n                      </Letter>\n                    );\n                  })}\n                &nbsp;</Word>\n              );\n            })}\n          </Row>\n        );\n      })}\n    </TextWrapper>        \n  );\n}\n\n// Does this work just like this?\nexport default React.memo(Text);","/**\n * TYPE TEST TIME CONTROLS COMPONENT\n * Control panel for changing the test's duration\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\n\nconst StyledButton = styled.button`\n\n`\n\nconst StyledTimeControls = styled.div`\n  opacity: ${props => props.playing ? '0' : '1'};\n  transition: opacity 0.2s ease;\n  \n  & button + button {\n    margin-left: 0.5rem;\n  }\n`\n\nconst Button = (props) => {\n  return (\n    <StyledButton onClick={() => props.setTestLength(props.testLengthOption)}>\n      {props.children}\n    </StyledButton>\n  );\n}\n\nconst TimeControls = (props) => {\n\n  const testLengthOptions = [\n    g.TEST_LENGTH_SHORT,\n    g.TEST_LENGTH_MEDIUM,\n    g.TEST_LENGTH_LONG,\n  ];\n\n  return (\n    <StyledTimeControls playing={props.playing}>\n      {testLengthOptions.map((option, key) => {\n        return (\n          <Button\n            setTestLength={props.setTestLength}\n            testLengthOption={option}\n            key={key}\n          >\n            {option}\n          </Button>\n        );\n      })}\n    </StyledTimeControls>\n  );\n}\n\nexport default TimeControls;","/**\n * TYPE TEST MAIN COMPONENT\n */\n\nimport React, {useEffect, useState, useCallback} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport words from '../../assets/game/words.js';\nimport Input from './input.js';\nimport TestTimer from './test-countdown.js';\nimport Text from './text.js';\nimport TimeControls from './test-time-controls.js';\n\nconst StyledTypeTest = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  font-size: 1.5rem;\n`\n\nconst TypeTest = (props) => {  \n\n  // Retrieve a random word from array of words, return array of letters\n  const getWord = (words) => {\n    return words[Math.floor(Math.random() * words.length)].split('');\n  }\n\n  // Load a row (array) of words\n  const loadRow = useCallback((wordArr) => {\n    let rowArr = [];\n  \n    while (rowArr.length < g.WORDS_PER_ROW) {\n      let word = getWord(wordArr);\n      // Check that word hasn't already been chosen for current row.\n      // THIS PROBABLY DOES NOT WORK\n      // TODO \"IMPROVE\" (FIX)\n      if (rowArr.indexOf(word) === -1) {\n        rowArr.push(word);\n      }\n    }\n    return rowArr;\n  }, []);\n\n  // Load and return an array of rows of words.\n  const loadRows = useCallback((wordArr) => {\n    return Array.from(Array(g.ROW_COUNT)).map((_) => {\n      return loadRow(wordArr);\n    });\n  }, [loadRow]);\n\n  // Time left printed on screen\n  const [timeLeft, setTimeLeft] = useState((props.testLength));\n\n  /**\n   * Keep track of currentWord.\n   * Input is compared with currentWord to progress in test.\n   * Resets after full row has been matched.\n   */\n  const [currentWordInd, setCurrentWordInd] = useState(0);\n\n  // Test uses first and second row of text for input.\n  const [currentRow, setCurrentRow] = useState(0);\n\n  // Track progress on row for caret positioning.\n  const [rowProgress, setRowProgress] = useState(0);\n\n  /**\n   * Array of rows. Each row consists of arrays of words.\n   * Each word is an array of letters.\n   */ \n  const [textRows, setTextRows] = useState(loadRows(words));\n\n  /**\n   * Update TextRows state.\n   * Remove row from front of array, load a new row and push it onto array.\n   */\n  function updateTextRows() {\n    let tempArr = textRows;\n    tempArr.shift();\n    tempArr.push(loadRow(words));\n    setTextRows(tempArr);\n  }\n\n  const [inputValue, setInputValue] = useState('');\n\n  // Used to flash highlight incorrect letters when word is checked.\n  const [wordIncorrect, setWordIncorrect] = useState(false);\n\n  // Keep track of correctly input words for calculating score.\n  const [correctWordsCount, setCorrectWordsCount] = useState(0);\n\n  // Compare array word with str from text-input\n  const checkFullWord = () => {\n    return textRows[currentRow][currentWordInd].join('') === inputValue;\n  }\n\n  /**\n   * Increases currentWord and resets it if it reaches end of row.\n   * Also triggers text row shifting.\n   */\n  const updateCurrentWordInd = () => {\n    if (currentWordInd === (g.WORDS_PER_ROW - 1)) {\n      if (currentRow < 1) {\n        setCurrentRow(1);\n      } else {\n        updateTextRows();\n      }\n      setRowProgress(0);\n    }\n    setCurrentWordInd((currentWordInd) => (currentWordInd + 1) % g.WORDS_PER_ROW);\n  }\n\n  /**\n   * End test when timer expires or escape is pressed.\n   * Stops test, clears input, resets currentWord and currentRow,\n   * loads a new set of rows of words and rewinds caret.\n   */  \n  const endTest = useCallback(() => {\n    props.setPlaying(false);\n    setInputValue('');\n    setCurrentWordInd(0);\n    setTextRows(loadRows(words));\n    setCurrentRow(0);\n    setRowProgress(0);\n    setTimeLeft(props.testLength);\n  }, [props, loadRows]);\n\n    /*\n    useEffect(() => {\n      if (props.playing === true) {\n        // Do thing when test starts\n      }\n    }, [props.playing])\n    */\n\n  const handleSpace = () => {\n    // Check if input matches currentWord.\n    if (checkFullWord()) {\n      setRowProgress((rowProgress) => (rowProgress + textRows[currentRow][currentWordInd].length) + 1);\n      updateCurrentWordInd();\n      setInputValue('');\n      setCorrectWordsCount((correctWordsCount) => (correctWordsCount + 1));\n    } else {\n      setWordIncorrect(true);\n      // PROBLEM: WILL THROW ERROR IF TEST ENDS DURING TIMEOUT.\n      setTimeout(() => {\n        setWordIncorrect(false);\n      }, 200);\n    }\n  }\n\n  // Timer for test duration countdown.\n  useEffect(() => {\n\n    let timerInterval;\n\n    if (props.playing === true && props.documentIsFocused === true) {\n      /**\n       * Runs a clock which decreases timeLeft by 1 every second.\n       * Timer clears if document loses focus. Restarts when focus is regained.\n       * BAD SOLUTION:\n       * Drifts - These \"seconds\" are slightly longer than normal seconds, about ~1s over 30s\n       * Inaccurate / bad because it gives a < 1s leeway when regaining focus.\n       * FIX A BETTER TIMER AND TIME HANDLING STRATEGY\n       */\n      timerInterval = setInterval(() => {\n        setTimeLeft((timeLeft) => (timeLeft - 1));\n      }, 1000);\n    };\n\n    return () => {\n      clearInterval(timerInterval);\n    }\n  }, [props.playing, props.documentIsFocused, timeLeft]);\n\n  // End test when timer reaches zero.\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      props.calcTestScore(correctWordsCount);\n      endTest();\n      props.setTestConcluded(true);\n    }\n  }, [props.calcTestScore, props.setTestConcluded, endTest, timeLeft, correctWordsCount]);\n\n  // Rerender when test-time-controls button is clicked\n  useEffect(() => {\n    setTimeLeft(props.testLength);\n  }, [props.testLength]);\n\n  return(\n    <StyledTypeTest focused={props.documentIsFocused}>\n      <TestTimer timeLeft={timeLeft} />\n      <Text \n        focused={props.documentIsFocused}\n        currentRow={currentRow}\n        currentWord={textRows[currentRow][currentWordInd]}\n        currentWordInd={currentWordInd}\n        rows={textRows}\n        playing={props.playing}\n        inputValue={inputValue}\n        caretOffset={rowProgress + inputValue.length}\n        wordIncorrect={wordIncorrect}\n        />\n      <Input\n        currentWord={textRows[currentRow][currentWordInd]}\n        playing={props.playing}\n        setPlaying={props.setPlaying}\n        focused={props.documentIsFocused}\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n        handleSpace={handleSpace}\n        checkWord={checkFullWord}\n        updateCurrentWord={updateCurrentWordInd}\n        endTest={endTest}\n      />\n      <div>{props.playing ? 'playing' : 'not playing'}</div>\n      <TimeControls\n        setTestLength={props.setTestLength}\n        playing={props.playing}\n      />\n    </StyledTypeTest>\n  );\n}\n\nexport default TypeTest;\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst StyledScoreScreen = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  font-size: 1.5rem;\n  font-size: 2.5rem;\n  text-align: center;\n  & span {\n    display: inline-block;\n  }\n  & span + span {\n    font-size: 2rem;\n    margin-top: 1.5rem;\n    & > span {\n      color: #888;\n    }\n  }\n  & span + span + span {\n    font-size: 1.5rem;\n    margin-top: 1.5rem;\n  }\n`\n\nconst ScoreScreen = (props) => {\n\n  useEffect(() => {\n\n    const handleKeypress = (e) => {\n      if (e.key === 'Enter') {\n        props.setTestConcluded(false);\n      }\n    }\n    window.addEventListener('keyup', handleKeypress);\n\n    return () => {\n      window.removeEventListener('keyup', handleKeypress);\n    };\n  }, [props]);\n\n  return (\n    <StyledScoreScreen>\n      <span>{props.testScore} WPM!</span>\n      <span>Best result: <span>n/a</span></span>\n      <span>Press ENTER to run test again</span>\n    </StyledScoreScreen>\n  )\n}\n\nexport default ScoreScreen;","/**\n * TYPE TEST SCREEN HANDLER\n * Wrapper component for TYPE TEST. Handles rendering of the test and the score screen.\n */\n\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport TypeTest from './type-test.js';\nimport ScoreScreen from './score-screen.js';\n\nconst TypeTestWrapper = styled.div`\n  width: 100%;\n  margin: 200px auto 0;\n\n  @media ${g.medium} {\n    width: 90vw;\n  }\n\n  @media ${g.large} {\n    width: 70vw;\n  }\n`\n\nconst TypeTestHandler = (props) => {\n\n  const [playing, setPlaying] = useState(false);\n\n  // Determines whether type test or score screen is displayed.\n  const [testConcluded, setTestConcluded] = useState(false);\n\n  // Stores selected test length (in seconds)\n  const [testLength, setTestLength] = useState(g.TEST_LENGTH_DEFAULT);\n\n  const [testScore, setTestScore] = useState(0);    \n\n  function calcTestScore (correctWordCount) {\n    // Calculate words per minute.\n    let wpm = correctWordCount * (60 / testLength);\n    setTestScore(wpm);\n  }\n\n  return (\n    <TypeTestWrapper>\n      {testConcluded ? /* Render score screen if test has concluded. */\n        <ScoreScreen\n        testScore={testScore}\n        setTestConcluded={setTestConcluded}\n        />\n        : /* Otherwise render type test. */\n        <TypeTest\n          playing={playing}\n          setPlaying={setPlaying}\n          calcTestScore={calcTestScore}\n          testLength={testLength}\n          setTestLength={setTestLength}\n          setTestConcluded={setTestConcluded}\n          documentIsFocused={props.documentIsFocused}\n        />\n      }\n    </TypeTestWrapper>\n  ); \n}\n\nexport default TypeTestHandler;","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport TypeTestHandler from '../game/type-test-handler.js';\n\n\nconst Main = styled.main`\n\theight: 100%;\n\twidth: 100%;\n\tposition: fixed;\n\t/* padding: var(--default-padding); */\n\tbackground-color: ${g.bgcolor}; /* ??? */\n\tfont-family: 'Roboto Mono', monospace;\n`\n\nconst App = () => {\n\n  // Keep track of whether document is focused.\n  const [documentIsFocused, setDocumentIsFocused] = useState(document.hasFocus());\n\n  useEffect(() => {\n    document.addEventListener('blur', () => {\n      setDocumentIsFocused(false);\n    });\n    document.addEventListener('focus', () => {\n      setDocumentIsFocused(true);\n    });\n\n    // Only show focus outline when using keyboard.\n\t\tdocument.body.addEventListener('mousedown', function() {\n\t\t\tdocument.body.classList.add('no-outline');\n\t\t});\n\n\t\tdocument.body.addEventListener('keydown', function(event) {\n\t\t\tif (event.key === 'Tab') {\n\t\t\t\tdocument.body.classList.remove('no-outline');\n\t\t\t}\n\t\t});\n  }, []);\n\n\treturn(\n\t\t<>\n\t\t\t<Main>\n\t\t\t\t<TypeTestHandler documentIsFocused={documentIsFocused}/>\n\t\t\t</Main>\n\t\t</>\n\t);\n\n} \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app.js';\nimport {GlobalStyle} from './globals.js';\nimport reportWebVitals from './reportWebVitals';\nimport '../src/assets/fonts/fonts.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}