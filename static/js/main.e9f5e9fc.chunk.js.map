{"version":3,"sources":["globals.js","assets/game/words.js","components/game/input.js","components/game/test-countdown.js","components/game/text.js","utilities.js","components/game/test-time-controls.js","components/game/test-instructions.js","components/game/onscreen-keyboard.js","components/game/type-test.js","components/game/score-screen.js","components/game/type-test-handler.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["LAYOUTS","DVORAK_US","QWERTY_US","QWERTY_SE","QWERTZ_DE","AZERTY_FR","largestMedium","g","small","medium","largestSmall","atMostMedium","atleastMedium","large","bgcolor","TEST_WORD_COUNT","TEST_LENGTH_SHORT","TEST_LENGTH_MEDIUM","TEST_LENGTH_LONG","TEST_LENGTH_DEFAULT","FOCUS_CHECK_INTERVAL","RESIZE_CHECK_INTERVAL","SCORE_COOKIE_NAME","TIMESTAMP_COOKIE_NAME","COOKIE_MAX_AGE","KEYBOARD_DEFAULT_LAYOUT","KEYBOARD_HIGHLIGHT_DURATION","GlobalStyle","createGlobalStyle","words","StyledInput","styled","input","Input","props","textInput","useRef","useEffect","focusTimer","setInterval","current","clearInterval","focus","type","autoComplete","value","inputValue","onKeyDown","e","test","key","playing","length","setPlaying","endTest","code","setShiftPressedRecently","setLeftShiftPressed","setRightShiftPressed","handleSpace","updateTypedRecently","flashSpacePressedRecently","setLastKey","handleKeyDown","onKeyUp","includes","setCaretPosition","target","selectionStart","handleKeyUp","onInput","nativeEvent","data","text","maxLen","replace","substring","filterInput","currentWord","setInputValue","handleInput","id","aria-label","ref","onBlur","TimerWrapper","div","Numbers","span","css","TestTimer","timeLeft","TextWrapper","focused","StyledWord","isCorrect","StyledLetter","entered","wordIsCorrect","isIncorrect","wordIncorrect","StyledCaret","typedRecently","currentWordLeft","currentWordTop","Caret","Word","wordsRef","children","rest","Letter","Text","slice","testWords","useState","window","innerWidth","windowWidth","setWindowWidth","debouncedHandleResize","callback","interval","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","setCurrentWordLeft","setCurrentWordTop","currentWordInd","offsetLeft","offsetTop","prevElem","previousElementSibling","smallestOffsetTop","removeWordsCount","setWordShiftCount","map","word","wordInd","elem","isCurrent","letter","letterInd","caretPosition","style","transform","React","memo","StyledButton","button","StyledTimeControls","Button","onClick","setTestLength","testLengthOption","TimeControls","testLengthOptions","option","InstructionsContainer","StyledInstructions","TestInstructions","Key","highlightPressedAccurate","highlightAccurate","highlightPressedInaccurate","highlightSpacePressed","Row","iso","leftShiftPressed","leftShiftPressedInaccurate","shiftAccurate","rightShiftPressed","shiftPressedRecently","rightShiftPressedInaccurate","StyledKeyboard","Keyboard","currentLayout","highlightedAccuratePressed","setHighlightedAccuratePressed","highlightedInaccuratePressed","setHighlightedInaccuratePressed","highlightedAccurate","setHighlightedAccurate","wasEndOfWord","setWasEndOfWord","endOfWord","lastKey","correctKey","spacePressedRecently","concat","toLowerCase","undefined","nextKey","inputLength","row","rowInd","toUpperCase","keySymbol","keyInd","indexOf","StyledTypeTest","TypeTest","testLength","setTimeLeft","setCurrentWordInd","setWordIncorrect","correctWordsCount","setCorrectWordsCount","setTypedRecently","setSpacePressedRecently","useCallback","setTestWords","loadWords","wordShiftCount","count","shiftWords","addWords","timerInterval","documentIsFocused","calcTestScore","setTestConcluded","join","currentWordLength","StyledScoreScreen","highestScore","testScore","ScoreScreen","handleKeypress","testConcluded","TypeTestWrapper","TypeTestHandler","getWord","Math","floor","random","split","wordArr","Array","from","Set","document","cookie","some","item","trim","startsWith","find","setHighestScore","setTestScore","Date","now","correctWordCount","newWords","i","push","Main","main","App","hasFocus","setDocumentIsFocused","handleBlur","handleFocus","handleMouseDown","body","classList","add","event","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8hCAGA,IAAMA,EAAU,CACdC,UAAW,CACT,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAE/DC,UAAW,CACT,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAE/DC,UAAW,CACT,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,OAAK,KACxD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAEpEC,UAAW,CACT,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,OAAK,KACxD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAEpEC,UAAW,CACT,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,KACxD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,YAUhEC,EAAgB,KAKhBC,EAAI,CAGRC,MAAM,+BAAD,OATc,IASd,OACLC,OAAO,+BAAD,OAAiCC,IAAjC,+BAAsEJ,EAAtE,OACNK,aAAa,+BAAD,OAAiCL,EAAjC,OACZM,cAAc,+BAAD,OAAiCF,IAAjC,OACbG,MAAM,+BAAD,OAAiCP,KAAjC,OAELQ,QAAS,OAGTC,gBAAiB,GAGjBC,kBAAmB,GACnBC,mBAAoB,GACpBC,iBAAkB,GAElBC,oBAAqB,GAGrBC,qBAAsB,GAEtBC,sBAAuB,GAGvBC,kBAAmB,gBACnBC,sBAAuB,OACvBC,eAAgB,OAEhBC,wBAAyB,YACzBC,4BAA6B,KAGhBnB,IAEToB,EAAcC,YAAH,IAsCNrB,EAAEM,O,QCs3BEgB,EAz+BD,CACZ,UACA,OACA,QACA,QACA,SACA,YACA,UACA,SACA,MACA,SACA,WACA,WACA,MACA,UACA,iBACA,QACA,QACA,SACA,QACA,QACA,UACA,MACA,SACA,QACA,MACA,QACA,YACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,UACA,OACA,WACA,SACA,WACA,QACA,SACA,WACA,MACA,SACA,UACA,SACA,MACA,SACA,WACA,SACA,QACA,WACA,OACA,QACA,MACA,SACA,SACA,MACA,UACA,SACA,KACA,MACA,SACA,KACA,SACA,YACA,WACA,WACA,SACA,YACA,YACA,QACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,KACA,OACA,YACA,UACA,SACA,MACA,SACA,QACA,WACA,SACA,UACA,UACA,OACA,SACA,UACA,SACA,MACA,OACA,UACA,MACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,WACA,MACA,MACA,KACA,OACA,SACA,WACA,MACA,SACA,YACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,MACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,YACA,QACA,YACA,SACA,SACA,YACA,SACA,QACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,aACA,UACA,QACA,OACA,aACA,SACA,YACA,UACA,UACA,WACA,UACA,YACA,aACA,WACA,WACA,WACA,UACA,WACA,UACA,OACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,WACA,UACA,MACA,UACA,WACA,MACA,OACA,OACA,WACA,MACA,OACA,OACA,QACA,SACA,SACA,SACA,WACA,OACA,UACA,SACA,WACA,aACA,WACA,SACA,UACA,SACA,YACA,UACA,cACA,MACA,aACA,YACA,YACA,SACA,YACA,WACA,WACA,UACA,aACA,UACA,KACA,SACA,MACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,MACA,WACA,UACA,OACA,YACA,SACA,SACA,QACA,SACA,WACA,OACA,WACA,MACA,SACA,QACA,SACA,QACA,SACA,cACA,gBACA,aACA,YACA,OACA,UACA,QACA,OACA,QACA,YACA,WACA,aACA,WACA,UACA,UACA,YACA,QACA,SACA,aACA,SACA,UACA,MACA,OACA,OACA,SACA,OACA,OACA,SACA,MACA,OACA,SACA,OACA,UACA,OACA,UACA,MACA,QACA,QACA,SACA,OACA,OACA,QACA,UACA,YACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,QACA,SACA,OACA,OACA,MACA,QACA,UACA,SACA,OACA,SACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,MACA,UACA,aACA,MACA,OACA,OACA,QACA,KACA,OACA,OACA,aACA,QACA,QACA,SACA,QACA,OACA,SACA,QACA,MACA,MACA,OACA,OACA,YACA,OACA,OACA,SACA,QACA,OACA,OACA,KACA,OACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,OACA,UACA,OACA,MACA,UACA,MACA,UACA,MACA,OACA,OACA,OACA,WACA,MACA,QACA,OACA,QACA,MACA,UACA,OACA,QACA,UACA,UACA,OACA,WACA,KACA,QACA,UACA,SACA,YACA,UACA,KACA,UACA,YACA,WACA,SACA,WACA,aACA,WACA,cACA,SACA,UACA,cACA,WACA,cACA,gBACA,YACA,OACA,aACA,UACA,QACA,KACA,OACA,MACA,SACA,MACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,UACA,OACA,YACA,OACA,WACA,QACA,OACA,OACA,QACA,QACA,MACA,SACA,MACA,OACA,SACA,QACA,QACA,QACA,OACA,MACA,QACA,OACA,MACA,SACA,QACA,MACA,OACA,QACA,OACA,SACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,MACA,UACA,WACA,OACA,WACA,QACA,WACA,OACA,MACA,SACA,aACA,UACA,OACA,SACA,WACA,WACA,SACA,MACA,QACA,KACA,OACA,UACA,QACA,UACA,OACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,WACA,UACA,OACA,SACA,OACA,UACA,QACA,SACA,SACA,QACA,QACA,OACA,UACA,OACA,SACA,QACA,OACA,WACA,QACA,KACA,MACA,OACA,QACA,OACA,KACA,SACA,OACA,SACA,WACA,UACA,SACA,OACA,SACA,YACA,OACA,UACA,QACA,MACA,OACA,YACA,OACA,OACA,QACA,KACA,OACA,MACA,QACA,MACA,OACA,UACA,SACA,MACA,SACA,QACA,KACA,MACA,QACA,SACA,UACA,WACA,QACA,KACA,MACA,KACA,MACA,KACA,OACA,MACA,OACA,OACA,OACA,YACA,cACA,SACA,KACA,QACA,eACA,QACA,SACA,MACA,MACA,UACA,OACA,MACA,QACA,OACA,OACA,WACA,QACA,SACA,OACA,cACA,aACA,eACA,UACA,QACA,OACA,OACA,UACA,UACA,MACA,QACA,SACA,MACA,UACA,cACA,UACA,SACA,SACA,WACA,QACA,WACA,OACA,UACA,QACA,QACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,YACA,WACA,OACA,UACA,aACA,WACA,WACA,WACA,QACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,aACA,eACA,YACA,UACA,UACA,WACA,UACA,QACA,UACA,SACA,OACA,UACA,OACA,MACA,UACA,WACA,UACA,QACA,OACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,YACA,SACA,MACA,SACA,UACA,SACA,SACA,eACA,YACA,SACA,WACA,SACA,SACA,YACA,aACA,UACA,WACA,WACA,UACA,WACA,iBACA,OACA,SACA,SACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,QACA,SACA,UACA,YACA,QACA,MACA,SACA,OACA,SACA,UACA,WACA,MACA,OACA,OACA,OACA,OACA,SACA,QACA,SACA,UACA,QACA,UACA,MACA,QACA,UACA,MACA,SACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,WACA,OACA,OACA,OACA,cACA,UACA,SACA,SACA,QACA,OACA,SACA,SACA,MACA,OACA,YACA,MACA,OACA,QACA,OACA,QACA,QACA,KACA,SACA,UACA,UACA,OACA,WACA,UACA,YACA,YACA,MACA,OACA,OACA,OACA,QACA,SACA,QACA,WACA,QACA,QACA,UACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,OACA,QACA,QACA,YACA,UACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,WACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,UACA,aACA,OACA,WACA,SACA,UACA,SACA,UACA,OACA,UACA,SACA,QACA,OACA,OACA,OACA,MACA,QACA,UACA,OACA,aACA,aACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,QACA,OACA,aACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,WACA,SACA,QACA,UACA,aACA,QACA,OACA,OACA,KACA,QACA,WACA,UACA,MACA,MACA,QACA,QACA,SACA,OACA,QACA,cACA,WACA,SACA,QACA,YACA,OACA,QACA,OACA,UACA,OACA,QACA,MACA,OACA,KACA,MACA,OACA,QACA,aACA,OACA,QACA,KACA,OACA,KACA,MACA,UACA,QACA,UACA,OACA,SACA,OACA,WACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,QACA,MACA,KACA,SACA,OACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,QACA,UACA,QACA,QACA,QACA,MACA,QACA,OACA,QACA,MACA,OACA,OACA,OACA,MACA,OACA,SACA,OACA,OACA,SACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,QACA,OACA,Y,8HCh+BF,IAAMC,EAAcC,IAAOC,MAAV,KAqHFC,EA7GD,SAACC,GAGb,IAAIC,EAAYC,iBAAO,MAGvBC,qBAAU,WACR,IAAIC,EAAaC,aAAY,WACD,OAAtBJ,EAAUK,QACZC,cAAcH,GAEdH,EAAUK,QAAQE,UAEnB,KAEH,OAAO,WACLD,cAAcH,MAEf,IAoEH,OACE,cAACR,EAAD,CACEa,KAAK,OACLC,aAAa,MACbC,MAAOX,EAAMY,WACbC,UAAW,SAACC,IA5DM,SAACA,GAKjB,aAAaC,KAAKD,EAAEE,OAA0B,IAAlBhB,EAAMiB,SAAsC,IAAjBH,EAAEE,IAAIE,QAC/DlB,EAAMmB,YAAYnB,EAAMiB,SAIZ,WAAVH,EAAEE,KACJhB,EAAMoB,UAGO,cAAXN,EAAEO,MACJrB,EAAMsB,yBAAwB,GAC9BtB,EAAMuB,qBAAoB,IAER,eAAXT,EAAEO,MACTrB,EAAMsB,yBAAwB,GAC9BtB,EAAMwB,sBAAqB,IAEV,MAAVV,EAAEE,KACThB,EAAMyB,cACNzB,EAAM0B,sBACN1B,EAAM2B,6BAGN3B,EAAM4B,WAAWd,EAAEE,KAgCAa,CAAcf,IACjCgB,QAAS,SAAChB,IA7BM,SAACA,GACf,CAAC,YAAa,aAAc,UAAW,OAAQ,OAAOiB,SAASjB,EAAEE,OAC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","file":"static/js/main.e9f5e9fc.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components';\n\n// Supported keyboard layouts.\nconst LAYOUTS = {\n  DVORAK_US: [\n    [\"'\", ',', '.', 'p', 'y', 'f', 'g', 'c', 'r', 'l', '/', '='],\n    ['a', 'o', 'e', 'u', 'i', 'd', 'h', 't', 'n', 's', '-'],\n    ['\\u21e7', ';', 'q', 'j', 'k', 'x', 'b', 'm', 'w', 'v', 'z', '\\u21e7'],\n  ],\n  QWERTY_US: [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', \"'\"],\n    ['\\u21e7', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '\\u21e7'],\n  ],\n  QWERTY_SE: [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'å', '\"'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ö', 'ä', \"'\"],\n    ['\\u21e7', '<', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '-', '\\u21e7'],\n  ],\n  QWERTZ_DE: [\n    ['q', 'w', 'e', 'r', 't', 'z', 'u', 'i', 'o', 'p', 'ü', '+'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ö', 'ä', '#'],\n    ['\\u21e7', '<', 'y', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '-', '\\u21e7'],\n  ],\n  AZERTY_FR: [\n    ['a', 'z', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '^', '$'],\n    ['q', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'ù', '*'],\n    ['\\u21e7', '<', 'w', 'x', 'c', 'v', 'b', 'n', ',', ';', ':', '!', '\\u21e7'],\n  ],\n};\n\nexport {LAYOUTS};\n\n/**\n * MEDIA BREAKPOINT VARS TWEAK HERE\n */\nconst largestSmall = 767; // px\nconst largestMedium = 1299; // px\n\n/**\n * GLOBAL VARS\n */\nconst g = {\n\n  // Media breakpoints\n  small: `only screen and (max-width: ${largestSmall}px)`,\n  medium: `only screen and (min-width: ${largestSmall+1}px) and (max-width: ${largestMedium}px)`,\n  atMostMedium: `only screen and (max-width: ${largestMedium}px)`,\n  atleastMedium: `only screen and (min-width: ${largestSmall+1}px)`,\n  large: `only screen and (min-width: ${largestMedium+1}px)`,\n  \n  bgcolor: '#333',\n\n  // Number of test words displayed on screen\n  TEST_WORD_COUNT: 32,\n\n  // TEST DURATION OPTIONS (in seconds)\n  TEST_LENGTH_SHORT: 15,\n  TEST_LENGTH_MEDIUM: 30,\n  TEST_LENGTH_LONG: 60,\n\n  TEST_LENGTH_DEFAULT: 30,\n\n  // Set how often component checks if document is focused\n  FOCUS_CHECK_INTERVAL: 66,\n\n  RESIZE_CHECK_INTERVAL: 50,\n\n  // COOKIE SETTINGS\n  SCORE_COOKIE_NAME: 'highest_score',\n  TIMESTAMP_COOKIE_NAME: 'time',\n  COOKIE_MAX_AGE: 2592000, // 60'60*24*30 = 30 days\n\n  KEYBOARD_DEFAULT_LAYOUT: 'QWERTY_US',\n  KEYBOARD_HIGHLIGHT_DURATION: 160,\n}\n\nexport default g;\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --default-padding: 1.5rem;\n    \n    --default-timing: cubic-bezier(0.78, 0.2, 0.05, 1.0);\n\n    --caret-opacity: 0.7;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n    box-sizing: border-box;\n  }\n\n  body {\n    \n  }\n  \n  body.no-outline:focus,\n  body.no-outline *:focus ~ * {\n    outline: none !important;\n  }\n\n  *:active,\n  *:active ~ * {\n    outline: none;\n  }\n\n  #root {\n    \n  }\n\n  @media ${g.large} {\n    :root {\n      --default-padding: 2rem;\n    }\n  }\n\n  /* ANIMATIONS */\n  @keyframes caret-blink {\n    from {\n      opacity: var(---caret-opacity);\n    }\n\n    47% {\n      opacity: var(---caret-opacity);\n    }\n\n    53% {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n`\n\nexport {GlobalStyle};","// (Around) 1000 common words in English\n// adapted from https://www.ef.com/wwen/english-resources/english-vocabulary/top-1000-words/\nconst words = [\n  \"ability\",\n  \"able\",\n  \"about\",\n  \"above\",\n  \"accept\",\n  \"according\",\n  \"account\",\n  \"across\",\n  \"act\",\n  \"action\",\n  \"activity\",\n  \"actually\",\n  \"add\",\n  \"address\",\n  \"administration\",\n  \"admit\",\n  \"adult\",\n  \"affect\",\n  \"after\",\n  \"again\",\n  \"against\",\n  \"age\",\n  \"agency\",\n  \"agent\",\n  \"ago\",\n  \"agree\",\n  \"agreement\",\n  \"ahead\",\n  \"air\",\n  \"all\",\n  \"allow\",\n  \"almost\",\n  \"alone\",\n  \"along\",\n  \"already\",\n  \"also\",\n  \"although\",\n  \"always\",\n  \"American\",\n  \"among\",\n  \"amount\",\n  \"analysis\",\n  \"and\",\n  \"animal\",\n  \"another\",\n  \"answer\",\n  \"any\",\n  \"anyone\",\n  \"anything\",\n  \"appear\",\n  \"apply\",\n  \"approach\",\n  \"area\",\n  \"argue\",\n  \"arm\",\n  \"around\",\n  \"arrive\",\n  \"art\",\n  \"article\",\n  \"artist\",\n  \"as\",\n  \"ask\",\n  \"assume\",\n  \"at\",\n  \"attack\",\n  \"attention\",\n  \"attorney\",\n  \"audience\",\n  \"author\",\n  \"authority\",\n  \"available\",\n  \"avoid\",\n  \"away\",\n  \"baby\",\n  \"back\",\n  \"bad\",\n  \"bag\",\n  \"ball\",\n  \"bank\",\n  \"bar\",\n  \"base\",\n  \"be\",\n  \"beat\",\n  \"beautiful\",\n  \"because\",\n  \"become\",\n  \"bed\",\n  \"before\",\n  \"begin\",\n  \"behavior\",\n  \"behind\",\n  \"believe\",\n  \"benefit\",\n  \"best\",\n  \"better\",\n  \"between\",\n  \"beyond\",\n  \"big\",\n  \"bill\",\n  \"billion\",\n  \"bit\",\n  \"black\",\n  \"blood\",\n  \"blue\",\n  \"board\",\n  \"body\",\n  \"book\",\n  \"born\",\n  \"both\",\n  \"box\",\n  \"boy\",\n  \"break\",\n  \"bring\",\n  \"brother\",\n  \"budget\",\n  \"build\",\n  \"building\",\n  \"business\",\n  \"but\",\n  \"buy\",\n  \"by\",\n  \"call\",\n  \"camera\",\n  \"campaign\",\n  \"can\",\n  \"cancer\",\n  \"candidate\",\n  \"capital\",\n  \"car\",\n  \"card\",\n  \"care\",\n  \"career\",\n  \"carry\",\n  \"case\",\n  \"cat\",\n  \"catch\",\n  \"cause\",\n  \"cell\",\n  \"center\",\n  \"central\",\n  \"century\",\n  \"certain\",\n  \"certainly\",\n  \"chair\",\n  \"challenge\",\n  \"chance\",\n  \"change\",\n  \"character\",\n  \"charge\",\n  \"check\",\n  \"child\",\n  \"choice\",\n  \"choose\",\n  \"church\",\n  \"citizen\",\n  \"city\",\n  \"civil\",\n  \"claim\",\n  \"class\",\n  \"clear\",\n  \"clearly\",\n  \"close\",\n  \"coach\",\n  \"cold\",\n  \"collection\",\n  \"college\",\n  \"color\",\n  \"come\",\n  \"commercial\",\n  \"common\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"concern\",\n  \"condition\",\n  \"conference\",\n  \"Congress\",\n  \"consider\",\n  \"consumer\",\n  \"contain\",\n  \"continue\",\n  \"control\",\n  \"cost\",\n  \"could\",\n  \"country\",\n  \"couple\",\n  \"course\",\n  \"court\",\n  \"cover\",\n  \"create\",\n  \"crime\",\n  \"cultural\",\n  \"culture\",\n  \"cup\",\n  \"current\",\n  \"customer\",\n  \"cut\",\n  \"dark\",\n  \"data\",\n  \"daughter\",\n  \"day\",\n  \"dead\",\n  \"deal\",\n  \"death\",\n  \"debate\",\n  \"decade\",\n  \"decide\",\n  \"decision\",\n  \"deep\",\n  \"defense\",\n  \"degree\",\n  \"Democrat\",\n  \"democratic\",\n  \"describe\",\n  \"design\",\n  \"despite\",\n  \"detail\",\n  \"determine\",\n  \"develop\",\n  \"development\",\n  \"die\",\n  \"difference\",\n  \"different\",\n  \"difficult\",\n  \"dinner\",\n  \"direction\",\n  \"director\",\n  \"discover\",\n  \"discuss\",\n  \"discussion\",\n  \"disease\",\n  \"do\",\n  \"doctor\",\n  \"dog\",\n  \"door\",\n  \"down\",\n  \"draw\",\n  \"dream\",\n  \"drive\",\n  \"drop\",\n  \"drug\",\n  \"during\",\n  \"each\",\n  \"early\",\n  \"east\",\n  \"easy\",\n  \"eat\",\n  \"economic\",\n  \"economy\",\n  \"edge\",\n  \"education\",\n  \"effect\",\n  \"effort\",\n  \"eight\",\n  \"either\",\n  \"election\",\n  \"else\",\n  \"employee\",\n  \"end\",\n  \"energy\",\n  \"enjoy\",\n  \"enough\",\n  \"enter\",\n  \"entire\",\n  \"environment\",\n  \"environmental\",\n  \"especially\",\n  \"establish\",\n  \"even\",\n  \"evening\",\n  \"event\",\n  \"ever\",\n  \"every\",\n  \"everybody\",\n  \"everyone\",\n  \"everything\",\n  \"evidence\",\n  \"exactly\",\n  \"example\",\n  \"executive\",\n  \"exist\",\n  \"expect\",\n  \"experience\",\n  \"expert\",\n  \"explain\",\n  \"eye\",\n  \"face\",\n  \"fact\",\n  \"factor\",\n  \"fail\",\n  \"fall\",\n  \"family\",\n  \"far\",\n  \"fast\",\n  \"father\",\n  \"fear\",\n  \"federal\",\n  \"feel\",\n  \"feeling\",\n  \"few\",\n  \"field\",\n  \"fight\",\n  \"figure\",\n  \"fill\",\n  \"film\",\n  \"final\",\n  \"finally\",\n  \"financial\",\n  \"find\",\n  \"fine\",\n  \"finger\",\n  \"finish\",\n  \"fire\",\n  \"firm\",\n  \"first\",\n  \"fish\",\n  \"five\",\n  \"floor\",\n  \"fly\",\n  \"focus\",\n  \"follow\",\n  \"food\",\n  \"foot\",\n  \"for\",\n  \"force\",\n  \"foreign\",\n  \"forget\",\n  \"form\",\n  \"former\",\n  \"forward\",\n  \"four\",\n  \"free\",\n  \"friend\",\n  \"from\",\n  \"front\",\n  \"full\",\n  \"fund\",\n  \"future\",\n  \"game\",\n  \"garden\",\n  \"gas\",\n  \"general\",\n  \"generation\",\n  \"get\",\n  \"girl\",\n  \"give\",\n  \"glass\",\n  \"go\",\n  \"goal\",\n  \"good\",\n  \"government\",\n  \"great\",\n  \"green\",\n  \"ground\",\n  \"group\",\n  \"grow\",\n  \"growth\",\n  \"guess\",\n  \"gun\",\n  \"guy\",\n  \"hair\",\n  \"half\",\n  \"hamburger\",\n  \"hand\",\n  \"hang\",\n  \"happen\",\n  \"happy\",\n  \"hard\",\n  \"have\",\n  \"he\",\n  \"head\",\n  \"health\",\n  \"hear\",\n  \"heart\",\n  \"heat\",\n  \"heavy\",\n  \"help\",\n  \"her\",\n  \"here\",\n  \"herself\",\n  \"high\",\n  \"him\",\n  \"himself\",\n  \"his\",\n  \"history\",\n  \"hit\",\n  \"hold\",\n  \"home\",\n  \"hope\",\n  \"hospital\",\n  \"hot\",\n  \"hotel\",\n  \"hour\",\n  \"house\",\n  \"how\",\n  \"however\",\n  \"huge\",\n  \"human\",\n  \"hundred\",\n  \"husband\",\n  \"idea\",\n  \"identify\",\n  \"if\",\n  \"image\",\n  \"imagine\",\n  \"impact\",\n  \"important\",\n  \"improve\",\n  \"in\",\n  \"include\",\n  \"including\",\n  \"increase\",\n  \"indeed\",\n  \"indicate\",\n  \"individual\",\n  \"industry\",\n  \"information\",\n  \"inside\",\n  \"instead\",\n  \"institution\",\n  \"interest\",\n  \"interesting\",\n  \"international\",\n  \"interview\",\n  \"into\",\n  \"investment\",\n  \"involve\",\n  \"issue\",\n  \"it\",\n  \"item\",\n  \"its\",\n  \"itself\",\n  \"job\",\n  \"join\",\n  \"just\",\n  \"keep\",\n  \"key\",\n  \"kid\",\n  \"kill\",\n  \"kind\",\n  \"kitchen\",\n  \"know\",\n  \"knowledge\",\n  \"land\",\n  \"language\",\n  \"large\",\n  \"last\",\n  \"late\",\n  \"later\",\n  \"laugh\",\n  \"law\",\n  \"lawyer\",\n  \"lay\",\n  \"lead\",\n  \"leader\",\n  \"learn\",\n  \"least\",\n  \"leave\",\n  \"left\",\n  \"leg\",\n  \"legal\",\n  \"less\",\n  \"let\",\n  \"letter\",\n  \"level\",\n  \"lie\",\n  \"life\",\n  \"light\",\n  \"like\",\n  \"likely\",\n  \"line\",\n  \"list\",\n  \"listen\",\n  \"little\",\n  \"live\",\n  \"local\",\n  \"long\",\n  \"look\",\n  \"lose\",\n  \"loss\",\n  \"lot\",\n  \"love\",\n  \"low\",\n  \"machine\",\n  \"magazine\",\n  \"main\",\n  \"maintain\",\n  \"major\",\n  \"majority\",\n  \"make\",\n  \"man\",\n  \"manage\",\n  \"management\",\n  \"manager\",\n  \"many\",\n  \"market\",\n  \"marriage\",\n  \"material\",\n  \"matter\",\n  \"may\",\n  \"maybe\",\n  \"me\",\n  \"mean\",\n  \"measure\",\n  \"media\",\n  \"medical\",\n  \"meet\",\n  \"meeting\",\n  \"member\",\n  \"memory\",\n  \"mention\",\n  \"message\",\n  \"method\",\n  \"middle\",\n  \"might\",\n  \"military\",\n  \"million\",\n  \"mind\",\n  \"minute\",\n  \"miss\",\n  \"mission\",\n  \"model\",\n  \"modern\",\n  \"moment\",\n  \"money\",\n  \"month\",\n  \"more\",\n  \"morning\",\n  \"most\",\n  \"mother\",\n  \"mouth\",\n  \"move\",\n  \"movement\",\n  \"movie\",\n  \"Mr\",\n  \"Mrs\",\n  \"much\",\n  \"music\",\n  \"must\",\n  \"my\",\n  \"myself\",\n  \"name\",\n  \"nation\",\n  \"national\",\n  \"natural\",\n  \"nature\",\n  \"near\",\n  \"nearly\",\n  \"necessary\",\n  \"need\",\n  \"network\",\n  \"never\",\n  \"new\",\n  \"news\",\n  \"newspaper\",\n  \"next\",\n  \"nice\",\n  \"night\",\n  \"no\",\n  \"none\",\n  \"nor\",\n  \"north\",\n  \"not\",\n  \"note\",\n  \"nothing\",\n  \"notice\",\n  \"now\",\n  \"number\",\n  \"occur\",\n  \"of\",\n  \"off\",\n  \"offer\",\n  \"office\",\n  \"officer\",\n  \"official\",\n  \"often\",\n  \"oh\",\n  \"oil\",\n  \"ok\",\n  \"old\",\n  \"on\",\n  \"once\",\n  \"one\",\n  \"only\",\n  \"onto\",\n  \"open\",\n  \"operation\",\n  \"opportunity\",\n  \"option\",\n  \"or\",\n  \"order\",\n  \"organization\",\n  \"other\",\n  \"others\",\n  \"our\",\n  \"out\",\n  \"outside\",\n  \"over\",\n  \"own\",\n  \"owner\",\n  \"page\",\n  \"pain\",\n  \"painting\",\n  \"paper\",\n  \"parent\",\n  \"part\",\n  \"participant\",\n  \"particular\",\n  \"particularly\",\n  \"partner\",\n  \"party\",\n  \"pass\",\n  \"past\",\n  \"patient\",\n  \"pattern\",\n  \"pay\",\n  \"peace\",\n  \"people\",\n  \"per\",\n  \"perform\",\n  \"performance\",\n  \"perhaps\",\n  \"period\",\n  \"person\",\n  \"personal\",\n  \"phone\",\n  \"physical\",\n  \"pick\",\n  \"picture\",\n  \"piece\",\n  \"place\",\n  \"plan\",\n  \"plant\",\n  \"play\",\n  \"player\",\n  \"point\",\n  \"police\",\n  \"policy\",\n  \"political\",\n  \"politics\",\n  \"poor\",\n  \"popular\",\n  \"population\",\n  \"position\",\n  \"positive\",\n  \"possible\",\n  \"power\",\n  \"practice\",\n  \"prepare\",\n  \"present\",\n  \"president\",\n  \"pressure\",\n  \"pretty\",\n  \"prevent\",\n  \"price\",\n  \"private\",\n  \"probably\",\n  \"problem\",\n  \"process\",\n  \"produce\",\n  \"product\",\n  \"production\",\n  \"professional\",\n  \"professor\",\n  \"program\",\n  \"project\",\n  \"property\",\n  \"protect\",\n  \"prove\",\n  \"provide\",\n  \"public\",\n  \"pull\",\n  \"purpose\",\n  \"push\",\n  \"put\",\n  \"quality\",\n  \"question\",\n  \"quickly\",\n  \"quite\",\n  \"race\",\n  \"radio\",\n  \"raise\",\n  \"range\",\n  \"rate\",\n  \"rather\",\n  \"reach\",\n  \"read\",\n  \"ready\",\n  \"real\",\n  \"reality\",\n  \"realize\",\n  \"really\",\n  \"reason\",\n  \"receive\",\n  \"recent\",\n  \"recently\",\n  \"recognize\",\n  \"record\",\n  \"red\",\n  \"reduce\",\n  \"reflect\",\n  \"region\",\n  \"relate\",\n  \"relationship\",\n  \"religious\",\n  \"remain\",\n  \"remember\",\n  \"remove\",\n  \"report\",\n  \"represent\",\n  \"Republican\",\n  \"require\",\n  \"research\",\n  \"resource\",\n  \"respond\",\n  \"response\",\n  \"responsibility\",\n  \"rest\",\n  \"result\",\n  \"return\",\n  \"reveal\",\n  \"rich\",\n  \"right\",\n  \"rise\",\n  \"risk\",\n  \"road\",\n  \"rock\",\n  \"role\",\n  \"room\",\n  \"rule\",\n  \"run\",\n  \"safe\",\n  \"same\",\n  \"save\",\n  \"say\",\n  \"scene\",\n  \"school\",\n  \"science\",\n  \"scientist\",\n  \"score\",\n  \"sea\",\n  \"season\",\n  \"seat\",\n  \"second\",\n  \"section\",\n  \"security\",\n  \"see\",\n  \"seek\",\n  \"seem\",\n  \"sell\",\n  \"send\",\n  \"senior\",\n  \"sense\",\n  \"series\",\n  \"serious\",\n  \"serve\",\n  \"service\",\n  \"set\",\n  \"seven\",\n  \"several\",\n  \"sex\",\n  \"sexual\",\n  \"shake\",\n  \"share\",\n  \"she\",\n  \"shoot\",\n  \"short\",\n  \"shot\",\n  \"should\",\n  \"shoulder\",\n  \"show\",\n  \"side\",\n  \"sign\",\n  \"significant\",\n  \"similar\",\n  \"simple\",\n  \"simply\",\n  \"since\",\n  \"sing\",\n  \"single\",\n  \"sister\",\n  \"sit\",\n  \"site\",\n  \"situation\",\n  \"six\",\n  \"size\",\n  \"skill\",\n  \"skin\",\n  \"small\",\n  \"smile\",\n  \"so\",\n  \"social\",\n  \"society\",\n  \"soldier\",\n  \"some\",\n  \"somebody\",\n  \"someone\",\n  \"something\",\n  \"sometimes\",\n  \"son\",\n  \"song\",\n  \"soon\",\n  \"sort\",\n  \"sound\",\n  \"source\",\n  \"south\",\n  \"southern\",\n  \"space\",\n  \"speak\",\n  \"special\",\n  \"specific\",\n  \"speech\",\n  \"spend\",\n  \"sport\",\n  \"spring\",\n  \"staff\",\n  \"stage\",\n  \"stand\",\n  \"standard\",\n  \"star\",\n  \"start\",\n  \"state\",\n  \"statement\",\n  \"station\",\n  \"stay\",\n  \"step\",\n  \"still\",\n  \"stock\",\n  \"stop\",\n  \"store\",\n  \"story\",\n  \"strategy\",\n  \"street\",\n  \"strong\",\n  \"structure\",\n  \"student\",\n  \"study\",\n  \"stuff\",\n  \"style\",\n  \"subject\",\n  \"success\",\n  \"successful\",\n  \"such\",\n  \"suddenly\",\n  \"suffer\",\n  \"suggest\",\n  \"summer\",\n  \"support\",\n  \"sure\",\n  \"surface\",\n  \"system\",\n  \"table\",\n  \"take\",\n  \"talk\",\n  \"task\",\n  \"tax\",\n  \"teach\",\n  \"teacher\",\n  \"team\",\n  \"technology\",\n  \"television\",\n  \"tell\",\n  \"ten\",\n  \"tend\",\n  \"term\",\n  \"test\",\n  \"than\",\n  \"thank\",\n  \"that\",\n  \"the\",\n  \"their\",\n  \"them\",\n  \"themselves\",\n  \"then\",\n  \"theory\",\n  \"there\",\n  \"these\",\n  \"they\",\n  \"thing\",\n  \"think\",\n  \"third\",\n  \"this\",\n  \"those\",\n  \"though\",\n  \"thought\",\n  \"thousand\",\n  \"threat\",\n  \"three\",\n  \"through\",\n  \"throughout\",\n  \"throw\",\n  \"thus\",\n  \"time\",\n  \"to\",\n  \"today\",\n  \"together\",\n  \"tonight\",\n  \"too\",\n  \"top\",\n  \"total\",\n  \"tough\",\n  \"toward\",\n  \"town\",\n  \"trade\",\n  \"traditional\",\n  \"training\",\n  \"travel\",\n  \"treat\",\n  \"treatment\",\n  \"tree\",\n  \"trial\",\n  \"trip\",\n  \"trouble\",\n  \"true\",\n  \"truth\",\n  \"try\",\n  \"turn\",\n  \"TV\",\n  \"two\",\n  \"type\",\n  \"under\",\n  \"understand\",\n  \"unit\",\n  \"until\",\n  \"up\",\n  \"upon\",\n  \"us\",\n  \"use\",\n  \"usually\",\n  \"value\",\n  \"various\",\n  \"very\",\n  \"victim\",\n  \"view\",\n  \"violence\",\n  \"visit\",\n  \"voice\",\n  \"vote\",\n  \"wait\",\n  \"walk\",\n  \"wall\",\n  \"want\",\n  \"war\",\n  \"watch\",\n  \"water\",\n  \"way\",\n  \"we\",\n  \"weapon\",\n  \"wear\",\n  \"week\",\n  \"weight\",\n  \"well\",\n  \"west\",\n  \"western\",\n  \"what\",\n  \"whatever\",\n  \"when\",\n  \"where\",\n  \"whether\",\n  \"which\",\n  \"while\",\n  \"white\",\n  \"who\",\n  \"whole\",\n  \"whom\",\n  \"whose\",\n  \"why\",\n  \"wide\",\n  \"wife\",\n  \"will\",\n  \"win\",\n  \"wind\",\n  \"window\",\n  \"wish\",\n  \"with\",\n  \"within\",\n  \"without\",\n  \"woman\",\n  \"wonder\",\n  \"word\",\n  \"work\",\n  \"worker\",\n  \"world\",\n  \"worry\",\n  \"would\",\n  \"write\",\n  \"writer\",\n  \"wrong\",\n  \"yard\",\n  \"yeah\",\n  \"year\",\n  \"yes\",\n  \"yet\",\n  \"you\",\n  \"young\",\n  \"your\",\n  \"yourself\",\n];\n\nexport default words;","/**\n * TYPE TEST INPUT FIELD COMPONENT\n * Automatically focused text-input which is visually hidden.\n */\n\nimport React, {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  opacity: 0;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst Input = (props) => {\n\n  // initiate reference to textinput element\n  let textInput = useRef(null);\n\n  // Keep input focused. Good or nah?\n  useEffect(() => {\n    let focusTimer = setInterval(() => {\n      if (textInput.current === null) {\n        clearInterval(focusTimer);\n      } else {\n        textInput.current.focus();\n      }\n    }, 200);\n\n    return () => {\n      clearInterval(focusTimer);\n    }\n  }, []);\n\n  /* Filter text-input. \n  Remove everythi// SHIFTSng except chars inside square brackets.\n  Also remove whitespaces, incl. tabs, newlines.\n  Finally, trim chars which exceed length of 2nd parameter (currentWord). */\n  const filterInput = (input, maxLen) => {\n    return input\n      .replace(/[^a-zA-Z0-9-.,'!?]/g, \"\")\n      .replace(/\\s+/g, \"\")\n      .substring(0, maxLen);\n  }\n\n  const handleKeyDown = (e) => {\n    /**\n     * START TEST.\n     * Start test if key is a letter, i.e. if user started typing\n     */\n    if (/[a-z|A-Z]/g.test(e.key) && props.playing === false && e.key.length === 1) {\n      props.setPlaying(!props.playing);\n    }\n\n    // Abort test if Escape is pressed\n    if (e.key === 'Escape') {\n      props.endTest();\n    }\n\n    if (e.code === 'ShiftLeft') {\n      props.setShiftPressedRecently(true);\n      props.setLeftShiftPressed(true);\n    }\n    else if (e.code === 'ShiftRight') {\n      props.setShiftPressedRecently(true);\n      props.setRightShiftPressed(true);\n    }\n    else if (e.key === ' ') {\n      props.handleSpace();\n      props.updateTypedRecently();\n      props.flashSpacePressedRecently();\n    }\n    else {\n      props.setLastKey(e.key);\n    }\n  }\n\n  const handleKeyUp = (e) => {\n    if (['ArrowLeft', 'ArrowRight', 'Control', 'Home', 'End'].includes(e.key)) {\n     props.setCaretPosition(e.target.selectionStart);\n     props.updateTypedRecently();\n    }\n\n    if (e.code === 'ShiftLeft') {\n      props.setShiftPressedRecently(false);\n      props.setLeftShiftPressed(false);\n    }\n    else if (e.code === 'ShiftRight') {\n      props.setShiftPressedRecently(false);\n      props.setRightShiftPressed(false);\n    }\n  }\n\n  const handleInput = (e) => {\n    let text = filterInput(e.target.value, props.currentWord.length);\n    props.setInputValue(text);\n    props.updateTypedRecently();\n    props.setCaretPosition(e.target.selectionStart);\n  }\n\n  return(\n    <StyledInput\n      type=\"text\"\n      autoComplete=\"off\"// SHIFTS // what?\n      value={props.inputValue}\n      onKeyDown={(e) => {handleKeyDown(e)}}\n      onKeyUp={(e) => {handleKeyUp(e)}}\n      onInput={(e) => {\n        if (props.playing === true && e.nativeEvent.data !== ' ') handleInput(e);\n      }}\n      id=\"text-input\"\n      aria-label=\"Type test input\"\n      ref={textInput}\n      onBlur={() => {\n        if (props.playing === true) {\n          // Try to focus\n          textInput.current.focus();\n        }\n      }}\n    />\n  );\n}\n\nexport default Input;","/**\n * TYPE TEST COUNTDOWN TIME\n * Prints time left on screen.\n */\n\nimport React from 'react';\nimport styled, {css} from 'styled-components';\n\nconst TimerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 2rem;\n`\n\nconst Numbers = styled.span`\n  color: #fff;\n  font-size: 3.5rem;\n  transition: color 0.2s var(--default-timing);\n\n  ${props => props.playing && css`\n    color: #888;\n    transition: color 1.5s linear;`\n  }\n`\n\nconst TestTimer = (props) => {\n  return(\n    <TimerWrapper>\n      <Numbers playing={props.playing}>\n        {props.timeLeft}\n      </Numbers>      \n    </TimerWrapper>\n  );\n}\n\nexport default TestTimer;","/**\n * TYPE TEST TEXT COMPONENT\n * Displays type test's words on screen.\n * Incorrectly input characters are highlighted in **PROBABLY RED**.\n */\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport styled, {css} from 'styled-components';\nimport g from '../../globals.js';\nimport {debounce} from '../../utilities.js';\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  color: ${props => props.focused ? '#fff' : 'transparent'};\n  transition: color 0.2s ease;\n  position: relative;\n\n  & > span {\n    line-height: 1.6;\n  }\n`;\n\nconst StyledWord = styled.span`\n  display: inline-flex;\n  margin-right: 1ch;\n\n  ${props => props.isCorrect && css`\n    color: #888; /* Use a variable */`\n  }\n`;\n\nconst StyledLetter = styled.span`\n  transition: color 0.03s var(--default-timing), text-shadow 0.2s ease;\n\n  ${props => props.entered === false && props.wordIsCorrect === false && props.focused === false && css`\n    text-shadow: 0 0 0.4rem #fff;`\n  }\n\n  ${props => props.entered && css`\n    color: #888; /* Use a variable */`\n  }\n\n  ${props => props.isIncorrect && css`\n    color: darkred;`\n  }\n\n  ${props => props.wordIncorrect && props.entered === false && props.playing && css`\n    text-decoration: underline;`\n  }\n\n  ${props => props.focused === false && css`\n    color: transparent;\n    transition: color 0.2s var(--default-timing), text-shadow 0.2s var(--default-timing);`\n  }\n\n  ${props => props.focused === false && props.entered && css`\n    text-shadow: 0 0 0.4rem #666;`\n  }\n\n  ${props => props.focused === false && props.wordIsCorrect && css`\n    text-shadow: 0 0 0.4rem #666;`\n  }\n\n  ${props => props.isIncorrect && props.focused === false && css`\n    text-shadow: 0 0 0.4rem darkred;`\n  }\n\n  /**\n   * wordIncorrect is triggered quickly when an input word is checked and is incorrect.\n   * This then highlights incorrect characters.\n   */\n  ${props => props.wordIncorrect && props.isIncorrect && css`\n    color: red;`\n  }\n`;\n\nconst StyledCaret = styled.div`\n  height: calc(1.6 * 1.5rem); /* 1.6 is line height of text */\n  font-size: 1.5rem;\n  width: 3px;\n  background-color: orange;\n  opacity: var(--caret-opacity);\n  position: absolute;\n  z-index: 1;\n  animation: ${props => props.typedRecently ? '' : '1.3s cubic-bezier(0.78, 0.2, 0.05, 1.0) 0s infinite forwards caret-blink'};\n  visibility: ${props => props.focused ? 'visible' : 'hidden'};\n  left: ${props => props.currentWordLeft}px;\n  top: ${props => props.currentWordTop}px;\n\n  ${props => props.playing === true && props.focused === false && css`\n    opacity: 0;`\n  }\n`;\n\nconst Caret = (props) => {\n  return (\n    <StyledCaret\n      {...props}\n    />\n  );\n}\n\nconst Word = ({wordsRef, children, ...rest}) => {\n  return (\n    <StyledWord\n      ref={wordsRef}\n      {...rest}\n    >\n      {children}\n    </StyledWord>\n  );\n}\n\nconst Letter = (props) => {\n  return (\n    <StyledLetter\n      {...props}\n    >\n      {props.children}\n    </StyledLetter>\n  );\n}\n\n/**\n* Text component displays test's words on screen. Text is blurred when document loses focus.\n* Uses styled component Textwrapper. Uses components Word, Letter, Caret.\n* Iterates through an array of words and prints its contents.\n*/\nconst Text = (props) => {\n\n  const wordsRef = useRef([]);\n\n  useEffect(() => {\n    // Update words' refs when words array changes.\n    wordsRef.current = wordsRef.current.slice(0, props.testWords.length);\n  }, [props.testWords]);\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }, g.RESIZE_CHECK_INTERVAL);\n    window.addEventListener('resize', debouncedHandleResize);\n\n    return _ => {\n      window.removeEventListener('resize', debouncedHandleResize);\n    }\n  }, []);\n\n  // Keep track of current word's position for caret positioning and rows handling.\n  const [currentWordLeft, setCurrentWordLeft] = useState(0);\n  const [currentWordTop, setCurrentWordTop] = useState(0);\n\n  useEffect(() => {\n    setCurrentWordLeft(wordsRef.current[props.currentWordInd].offsetLeft);\n    setCurrentWordTop(wordsRef.current[props.currentWordInd].offsetTop);\n  }, [props.currentWordInd, windowWidth]);\n\n  /**\n   * Compare current word's offsetTop with previous word's, to detect if current word just\n   * jumped to third or higher row. If true, it initiates removing and adding new words.\n   */\n  useEffect(() => {\n    if (props.currentWordInd > 0) {\n      let prevElem = wordsRef.current[props.currentWordInd].previousElementSibling;\n      let smallestOffsetTop = prevElem.offsetTop;\n\n      if (wordsRef.current[props.currentWordInd].offsetTop > smallestOffsetTop && smallestOffsetTop > 0) {\n        let removeWordsCount = 0;\n        while (prevElem) {\n          if (prevElem.offsetTop < smallestOffsetTop) removeWordsCount += 1;\n          prevElem = prevElem.previousElementSibling;\n        }\n        props.setWordShiftCount(removeWordsCount);\n      }\n    }\n  }, [props.currentWordInd]);\n\n  // Restart caret animation when focus is regained.  \n  useEffect(() => {\n    if (props.focused === true) props.updateTypedRecently();\n  },[props.focused]);\n\n  return (\n    <TextWrapper focused={props.focused}>\n\n      {props.testWords.map((word, wordInd) => {\n        return (\n          <Word\n            key={wordInd}\n            wordsRef={elem => wordsRef.current[wordInd] = elem}\n            isCurrent={wordInd === props.currentWordInd}\n            isCorrect={props.currentWordInd > wordInd}\n          >\n            {word.map((letter, letterInd) => {\n              return (\n                <Letter\n                  playing={props.playing}\n                  key={letterInd}\n                  // Highlight that letter has been input\n                  entered={\n                    props.inputValue.length > letterInd &&\n                    wordInd === props.currentWordInd\n                  }\n                  // Highlights incorrectly input letter\n                  isIncorrect={\n                    props.currentWord[letterInd] !== props.inputValue[letterInd] && // Match letter\n                    wordInd === props.currentWordInd && // Check only currentWord\n                    props.inputValue.length > letterInd // Don't check letters not yet input\n                  }\n                  wordIncorrect={props.wordIncorrect && props.currentWordInd === wordInd}\n                  focused={props.focused}\n                  wordIsCorrect={props.currentWordInd > wordInd}\n                >\n                  {letter}\n                </Letter>\n              );\n            })}\n          </Word>\n        );\n      })}\n      <Caret\n        playing={props.playing}\n        focused={props.focused}\n        currentWordLeft={currentWordLeft}\n        currentWordTop={currentWordTop}\n        inputValue={props.inputValue}\n        caretPosition={props.caretPosition}\n        typedRecently={props.typedRecently}\n        style={{\n          transform: `translateX(min(${props.caretPosition}ch, ${props.inputValue.length}ch))`,\n        }}\n      />\n    </TextWrapper>        \n  );\n}\n\n// Does this work just like this?\nexport default React.memo(Text);","/**\n * DEBOUNCE FUNCTION\n * Make sure callback cannot be called too often (only every \"interval\" ms).\n */\nfunction debounce(callback, interval) {\n  let timer;\n  return _ => {\n    clearTimeout(timer);\n    timer = setTimeout(_ => {\n      timer = null;\n      callback.apply(this, arguments);\n\n    }, interval)\n  };\n}\n\nexport {debounce};","/**\n * TYPE TEST TIME CONTROLS COMPONENT\n * Control panel for changing the test's duration\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\n\nconst StyledButton = styled.button`\n  padding: 0.5rem 1rem;\n  background-color: transparent;\n  border: 2px solid #fff;\n  border-radius: 0.25rem;\n  color: #fff;\n  font-size: 1.1rem;\n\n  &:active {\n    background-color: #fff;\n    color: #888;\n  }\n`\n\nconst StyledTimeControls = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 0.5rem;\n  opacity: ${props => props.playing ? '0' : '1'};\n  transition: opacity 0.2s ease;\n  \n  & button + button {\n    margin-left: 1rem;\n  }\n\n  & span {\n    font-size: 1.3rem;\n    display: inline-block;\n  }\n\n  & div {\n    display: flex;\n    justify-content: center;\n    margin-top: 1.5rem;\n  }\n`\n\nconst Button = (props) => {\n  return (\n    <StyledButton onClick={() => props.setTestLength(props.testLengthOption)}>\n      {props.children}\n    </StyledButton>\n  );\n}\n\nconst TimeControls = (props) => {\n  const testLengthOptions = [\n    g.TEST_LENGTH_SHORT,\n    g.TEST_LENGTH_MEDIUM,\n    g.TEST_LENGTH_LONG,\n  ];\n\n  return (\n    <StyledTimeControls playing={props.playing}>\n      <span>Set test duration</span>\n      <div>\n        {testLengthOptions.map((option, key) => {\n          return (\n            <Button\n              setTestLength={props.setTestLength}\n              testLengthOption={option}\n              key={key}\n            >\n              {option}s\n            </Button>\n          );\n        })}\n      </div>  \n    </StyledTimeControls>\n  );\n}\n\nexport default TimeControls;","import React from 'react';\nimport styled, {css} from 'styled-components';\n\nconst InstructionsContainer = styled.div`\n  min-height: 50px;\n  display: flex;\n  justify-content: center;\n`\n\nconst StyledInstructions = styled.span`\n  opacity: 1;\n  transition: color 0.2s var(--default-timing);\n  ${props => props.playing === true && props.focused === true && css`\n    transition: opacity 1s var(--default-timing) 1s, color 1.5s linear;\n    font-size: 1.3rem;\n    opacity: 0;\n    color: #888;`\n  }\n`\n\nconst TestInstructions = (props) => {\n  return (\n    <InstructionsContainer>\n      <StyledInstructions playing={props.playing} focused={props.focused}>\n        {props.focused ?\n          (props.playing ? 'Type like the wind' : 'Begin typing to start test') :\n          (props.playing ? 'Test paused, focus to resume' : 'Click document to focus')\n        }\n      </StyledInstructions>\n    </InstructionsContainer>\n  );\n}\n\nexport default TestInstructions;\n\n\n\n","import React, {useState, useEffect} from 'react';\nimport styled, {css} from 'styled-components';\nimport g, {LAYOUTS} from '../../globals.js';\n\nconst Key = styled.span`\n  display: inline-flex;\n  border: 1px solid #888;\n  border-radius: 0.5rem;\n  padding: 0.75ch 1.5ch;\n  align-items: center;\n  position: relative;\n  pointer-events: none;\n  transition: background-color 0.04s linear, border 0.05s linear;\n\n  & + & {\n    margin-left: 0.5ch;\n  }\n\n  ${props => props.highlightPressedAccurate && css`\n    background-color: rgba(255, 255, 255, 0.4);`\n  }\n\n  ${props => props.highlightAccurate && css`\n    border: 1px solid #fff;`\n  }\n  \n  ${props => props.highlightPressedInaccurate && css`\n    background-color: rgba(255, 0, 0, 0.3);`\n  }\n\n  ${props => props.highlightSpacePressed && css`\n    background-color: rgba(255, 255, 255, 0.4);`\n  }\n`\n\nconst Row = styled.div`\n\n  // TOP ROW\n  &:nth-child(1) {\n    margin-left: 7ch;\n  }\n\n  // HOME ROW\n  &:nth-child(2) {\n    margin-left: 8ch;\n    \n    & > *:nth-child(4)::after,\n    & > *:nth-child(7)::after {\n      content: '';\n      display: block;\n      position: absolute;\n      width: 1ch;\n      border-bottom: 2px solid darkorange;\n      bottom: 0.5ch;\n      opacity: 0.6;\n    }\n  }\n\n  // BOTTOM ROW\n  &:nth-child(3) {\n\n    // LEFT SHIFT\n    & > *:first-child {\n      padding-right: ${props => props.iso ? '2.5ch' : '7.25ch'};\n      ${props => props.leftShiftPressed && css`\n        background-color: rgba(255, 255, 255, 0.4);`\n      }\n      ${props => props.leftShiftPressedInaccurate && css`\n        background-color: rgba(255, 0, 0, 0.3);`\n      }\n      /**\n       * Highlight accurate if either only one shift is pressed, if both are pressed,\n       * or neither (when they should have been)...\n       * Basically just don't highlight *the other* shift as accurate while, or shortly after\n       * a shift key has been pressed.\n       */\n      ${props => props.shiftAccurate &&\n        ((props.leftShiftPressed && !props.rightShiftPressed) ||\n        (props.leftShiftPressed && props.rightShiftPressed) ||\n        (!props.leftShiftPressed && !props.rightShiftPressed && !props.shiftPressedRecently)) && css`\n        border: 1px solid #fff;`\n      }\n    }\n\n    // RIGHT SHIFT\n    & > *:last-child {\n      padding-left: 9.5ch;\n      ${props => props.rightShiftPressed && css`\n        background-color: rgba(255, 255, 255, 0.4);`\n      }\n      ${props => props.rightShiftPressedInaccurate && css`\n        background-color: rgba(255, 0, 0, 0.3);`\n      }\n      ${props => props.shiftAccurate && ((props.rightShiftPressed && !props.leftShiftPressed) ||\n      (props.leftShiftPressed && props.rightShiftPressed) ||\n      (!props.leftShiftPressed && !props.rightShiftPressed && !props.shiftPressedRecently)) && css`\n        border: 1px solid #fff;`\n      }\n    }\n  }\n\n  // SPACE\n  &:nth-child(4) > *:first-child {\n    padding-left: 14ch;\n    padding-right: 14ch;\n    margin-left: 16.5ch;\n  }\n\n  & + & {\n    margin-top: 0.5ch;\n  }\n`\n\nconst StyledKeyboard = styled.div`\n  margin: 3rem auto 1rem;\n  width: fit-content;\n  font-size: 1.25rem;\n`\n\nconst Keyboard = (props) => {\n  const [currentLayout, setCurrentLayout] = useState(g.KEYBOARD_DEFAULT_LAYOUT);\n\n  // Arrays for storing currently highlighted keys.\n  const [highlightedAccuratePressed, setHighlightedAccuratePressed] = useState([]);\n  const [highlightedInaccuratePressed, setHighlightedInaccuratePressed] = useState([]);\n  const [highlightedAccurate, setHighlightedAccurate] = useState([]);\n\n  /**\n   * Check if previously typed letter was the last of current word...\n   * Used for highlighting space as accurate key at the end of word.\n   * Is needed because otherwise last letter of the word is highlighted instead.\n   */\n  const [wasEndOfWord, setWasEndOfWord] = useState(false);\n\n  useEffect(() => {\n    if (props.endOfWord === true) {\n      setWasEndOfWord(true);\n    } else {\n      setWasEndOfWord(false);\n    }\n  }, [props.typedRecently]);\n\n  useEffect(() => {\n    if (props.lastKey.length > 0 && props.typedRecently === true && props.lastKey !== 'Backspace') {\n      // Highlight correctly input keys\n      if (props.lastKey === props.correctKey && !props.spacePressedRecently) {\n        setHighlightedAccuratePressed((highlightedAccuratePressed) => highlightedAccuratePressed.concat(props.lastKey.toLowerCase()));\n      }\n      // Highlight inaccurate key.\n      if (props.lastKey !== props.correctKey  && !props.spacePressedRecently) {\n        setHighlightedInaccuratePressed((highlightedInaccuratePressed) => highlightedInaccuratePressed.concat(props.lastKey.toLowerCase()));\n      }\n      // Highlight current correct key.\n      if (props.correctKey !== undefined && props.nextKey !== undefined) {\n        setHighlightedAccurate((highlightedAccurate) => (\n          (props.spacePressedRecently || (wasEndOfWord === true && props.inputLength > 0)) &&\n          (props.endOfWord === true || props.wordIncorrect === true) ?\n            highlightedAccurate.concat(props.nextKey.toLowerCase()) : highlightedAccurate.concat(props.correctKey.toLowerCase())\n        ));\n      }\n    }\n  }, [props.typedRecently]);\n\n  // Timers for removing keys from highlight-arrays.\n  useEffect(() => {\n    if (highlightedAccuratePressed.length > 0 && props.typedRecently === true) {\n      setTimeout(() => {\n        setHighlightedAccuratePressed((highlightedAccuratePressed) => (highlightedAccuratePressed.slice(1)));\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }, [highlightedAccuratePressed]);\n\n  useEffect(() => {\n    if (highlightedInaccuratePressed.length > 0 && props.typedRecently === true) {\n      setTimeout(() => {\n        setHighlightedInaccuratePressed((highlightedInaccuratePressed) => (highlightedInaccuratePressed.slice(1)));\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }, [highlightedInaccuratePressed]);\n\n  useEffect(() => {\n    if (highlightedAccurate.length > 0 && props.typedRecently === true) {\n      setTimeout(() => {\n        setHighlightedAccurate((highlightedAccurate) => (highlightedAccurate.slice(1)));\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }, [highlightedAccurate]);\n\n  return (\n    <StyledKeyboard>\n      {LAYOUTS[currentLayout].map((row, rowInd) => {\n        return (\n          <Row\n            key={rowInd}\n            iso={rowInd === 2 && row.length > 12} // ANSI has 12 bottom keys\n            lastKey={props.lastKey}\n            shiftPressedRecently={props.shiftPressedRecently}\n            leftShiftPressed={props.leftShiftPressed}\n            leftShiftPressedInaccurate={\n              rowInd === 2 &&\n              props.correctKey !== undefined &&\n              props.leftShiftPressed && highlightedInaccuratePressed.length > 0 &&\n              props.correctKey !== props.correctKey.toUpperCase()\n            }\n            rightShiftPressed={props.rightShiftPressed}\n            rightShiftPressedInaccurate={\n              rowInd === 2 &&\n              props.correctKey !== undefined &&\n              props.rightShiftPressed && highlightedInaccuratePressed.length > 0 &&\n              props.correctKey !== props.correctKey.toUpperCase()\n            }\n            shiftAccurate={\n              // Highlight shift as accurate if it was correctly input, but also if it should have been and wasn't.\n              rowInd === 2 &&\n              (((props.correctKey !== undefined && props.correctKey === props.correctKey.toUpperCase()) && (highlightedAccurate.length > 0 && !props.spacePressedRecently)) ||\n-              (props.spacePressedRecently === true && props.wordIncorrect === true && !props.endOfWord && props.nextKey === props.nextKey.toUpperCase()))\n            }\n          >\n            {row.map((keySymbol, keyInd) => {\n              return (\n                <Key\n                  key={keyInd}\n                  highlightPressedAccurate={highlightedAccuratePressed.indexOf(keySymbol) !== -1}\n                  highlightPressedInaccurate={highlightedInaccuratePressed.indexOf(keySymbol) !== -1}\n                  highlightAccurate={\n                    (highlightedAccurate.indexOf(keySymbol) !== -1 && props.lastKey.length === 1) ||\n                    (props.spacePressedRecently === true && props.wordIncorrect === true && props.nextKey.toLowerCase() === keySymbol)\n                  }\n                >\n                  {keySymbol.toUpperCase()}\n                </Key>\n              );\n            })}\n          </Row>\n        );\n      })}\n      <Row>\n        <Key\n          highlightSpacePressed={\n            (props.spacePressedRecently === true || highlightedAccurate.indexOf(' ') !== -1) &&\n            props.endOfWord === false &&\n            props.wordIncorrect === false &&\n            props.playing === true\n          }\n          highlightAccurate={highlightedAccurate.indexOf(' ') !== -1}\n          highlightPressedInaccurate={\n            props.spacePressedRecently === true &&\n            props.wordIncorrect === true\n          }\n        >\n        {`\\u2007`}{/* A good looking whitespace character. */}\n        </Key>\n      </Row>\n    </StyledKeyboard>\n  );\n}\n\nexport default Keyboard;","/**\n * TYPE TEST MAIN COMPONENT\n */\n\nimport React, {useEffect, useState, useCallback} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport Input from './input.js';\nimport TestTimer from './test-countdown.js';\nimport Text from './text.js';\nimport TimeControls from './test-time-controls.js';\nimport TestInstructions from './test-instructions.js';\nimport Keyboard from './onscreen-keyboard.js';\n\nconst StyledTypeTest = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  font-size: 1.5rem;\n`\n\nconst TypeTest = (props) => {  \n\n  // Time left printed on screen\n  const [timeLeft, setTimeLeft] = useState((props.testLength));\n\n  /**\n   * Keep track of currentWord.\n   * Input is compared with currentWord to progress in test.\n   */\n  const [currentWordInd, setCurrentWordInd] = useState(0);\n\n  const increaseCurrentWordInd = () => {\n    setCurrentWordInd((currentWordInd) => (currentWordInd + 1));\n  }\n\n  /**\n   * Subtract from currentWord's index.\n   * Called when word array is updated (old words shifted, new words pushed).\n   */\n  const updateCurrentWordInd = (count) => {\n    setCurrentWordInd(currentWordInd => currentWordInd - count);\n  }\n\n  const [caretPosition, setCaretPosition] = useState(0);\n\n  // Value of test's hidden text-input.\n  const [inputValue, setInputValue] = useState('');\n\n  // Used to flash highlight incorrect letters when word is checked.\n  const [wordIncorrect, setWordIncorrect] = useState(false);\n\n  // Keep track of correctly input words for calculating score.\n  const [correctWordsCount, setCorrectWordsCount] = useState(0);\n\n  /**\n   * Quickly flash a prop.\n   * Used for onscreen keyboard highlighting and to reset caret animation.\n   * */\n  const [typedRecently, setTypedRecently] = useState(false);\n\n  const updateTypedRecently = () => {\n    setTypedRecently(true);\n    setTimeout(() => {\n      setTypedRecently(false);\n    }, 0);\n  }\n\n  const [lastKey, setLastKey] = useState('');\n\n  const [spacePressedRecently, setSpacePressedRecently] = useState(false);\n\n  const flashSpacePressedRecently = () => {\n    setSpacePressedRecently(true);\n    setTimeout(() => {\n      setSpacePressedRecently(false);\n    }, g.KEYBOARD_HIGHLIGHT_DURATION);\n  }\n\n  /**\n   * Handle shift keys:\n   * Keep track of whether shift keys are currently or have recently been pressed.\n   * Used for onscreen keyboard highlighting.\n   */\n  const [leftShiftPressed, setLeftShiftPressed] = useState(false);\n  const [rightShiftPressed, setRightShiftPressed] = useState(false);\n\n  const [shiftPressedRecently, setShiftPressedRecently] = useState(false);\n\n  useEffect(() => {\n    if (!leftShiftPressed && !rightShiftPressed) {\n      setShiftPressedRecently(true);\n      setTimeout(() => {\n        setShiftPressedRecently(false);\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }, [leftShiftPressed, rightShiftPressed]);\n\n  // Compare array word with str from text-input\n  const checkFullWord = () => {\n    return props.testWords[currentWordInd].join('') === inputValue;\n  }\n\n  /**\n   * End test when timer expires or escape is pressed.\n   * Stops test, clears input, resets currentWord and currentRow,\n   * loads a new set of rows of words and rewinds caret.\n   */  \n  const endTest = useCallback(() => {\n    props.setPlaying(false);\n    setInputValue('');\n    setCurrentWordInd(0);\n    props.setTestWords(props.loadWords());\n    setTimeLeft(props.testLength);\n  }, [props.testLength]);\n\n  const handleSpace = () => {\n    // Check if input matches currentWord.\n    if (checkFullWord()) {\n      increaseCurrentWordInd();\n      setInputValue('');\n      setCorrectWordsCount((correctWordsCount) => (correctWordsCount + 1));\n    } else {\n      setWordIncorrect(true);\n      setCaretPosition(inputValue.length);\n      // PROBLEM: WILL THROW ERROR IF TEST ENDS DURING TIMEOUT. I THINK.\n      setTimeout(() => {\n        setWordIncorrect(false);\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }\n\n  /**\n   * Update which word index is current.\n   * Shift words from array, then add some new words to replace them,\n   */\n  const [wordShiftCount, setWordShiftCount] = useState(0);\n\n  useEffect(() => {\n    if (wordShiftCount > 0) {\n      updateCurrentWordInd(wordShiftCount);\n      props.shiftWords(wordShiftCount);\n      props.addWords(wordShiftCount);\n      setWordShiftCount(0);\n    }\n  }, [wordShiftCount]);\n\n  // Timer for test duration countdown.\n  useEffect(() => {\n    let timerInterval;\n\n    if (props.playing === true && props.documentIsFocused === true) {\n      /**\n       * Runs a clock which decreases timeLeft by 1 every second.\n       * Timer clears if document loses focus. Restarts when focus is regained.\n       * BAD SOLUTION:\n       * Drifts - These \"seconds\" are slightly longer than normal seconds, about ~1s over 30s\n       * Inaccurate / bad because it gives a < 1s leeway when regaining focus.\n       * FIX A BETTER TIMER AND TIME HANDLING STRATEGY\n       */\n      timerInterval = setInterval(() => {\n        setTimeLeft((timeLeft) => (timeLeft - 1));\n      }, 1000);\n    };\n\n    return () => {\n      clearInterval(timerInterval);\n    }\n  }, [props.playing, props.documentIsFocused, timeLeft]);\n\n  // End test when timer reaches zero.\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      props.calcTestScore(correctWordsCount);\n      endTest();\n      props.setTestConcluded(true);\n    }\n  }, [props.calcTestScore, props.setTestConcluded, endTest, timeLeft, correctWordsCount]);\n\n  // Re-render when test-time-controls button is clicked\n  useEffect(() => {\n    setTimeLeft(props.testLength);\n  }, [props.testLength]);\n\n  return(\n    <StyledTypeTest focused={props.documentIsFocused}>\n      <TestInstructions\n        playing={props.playing}\n        focused={props.documentIsFocused}\n      />\n      <TestTimer\n        playing={props.playing}\n        timeLeft={timeLeft}\n      />\n      <Text\n        testWords={props.testWords}\n        focused={props.documentIsFocused}\n        currentWord={props.testWords[currentWordInd]}\n        currentWordInd={currentWordInd}\n        setWordShiftCount={setWordShiftCount}\n        playing={props.playing}\n        inputValue={inputValue}\n        caretPosition={caretPosition}\n        typedRecently={typedRecently}\n        updateTypedRecently={updateTypedRecently}\n        wordIncorrect={wordIncorrect}\n        />\n      <Input\n        currentWord={props.testWords[currentWordInd]}\n        playing={props.playing}\n        setPlaying={props.setPlaying}\n        focused={props.documentIsFocused}\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n        handleSpace={handleSpace}\n        endTest={endTest}\n        caretPosition={caretPosition}\n        setCaretPosition={setCaretPosition}\n        updateTypedRecently={updateTypedRecently}\n        flashSpacePressedRecently={flashSpacePressedRecently}\n        setLastKey={setLastKey}\n        setShiftPressedRecently={setShiftPressedRecently}\n        setLeftShiftPressed={setLeftShiftPressed}\n        setRightShiftPressed={setRightShiftPressed}\n      />\n      <TimeControls\n        setTestLength={props.setTestLength}\n        playing={props.playing}\n      />\n      <Keyboard\n        playing={props.playing}\n        correctKey={props.testWords[currentWordInd][inputValue.length - 1]}\n        nextKey={props.testWords[currentWordInd][inputValue.length] ? props.testWords[currentWordInd][inputValue.length] : ' '}\n        spacePressedRecently={spacePressedRecently}\n        wordIncorrect={wordIncorrect}\n        shiftPressedRecently={shiftPressedRecently}\n        leftShiftPressed={leftShiftPressed}\n        rightShiftPressed={rightShiftPressed}\n        lastKey={lastKey}\n        typedRecently={typedRecently}\n        endOfWord={inputValue.length === props.testWords[currentWordInd].length}\n        inputLength={inputValue.length}\n        currentWordLength={props.testWords[currentWordInd].length}\n      />\n    </StyledTypeTest>\n  );\n}\n\nexport default TypeTest;\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst StyledScoreScreen = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  font-size: 1.5rem;\n  font-size: 2.5rem;\n  text-align: center;\n  & span {\n    display: inline-block;\n  }\n  & span + span {\n    font-size: 2rem;\n    margin-top: 1.5rem;\n    & > span {\n      color: ${props => props.highestScore === props.testScore ? 'darkorange' : '#fff'};\n    }\n  }\n  & span + span + span {\n    font-size: 1.5rem;\n    margin-top: 1.5rem;\n  }\n`\n\nconst ScoreScreen = (props) => {\n\n  useEffect(() => {\n    const handleKeypress = (e) => {\n      if (e.key === 'Enter' && props.testConcluded === true) {\n        props.setTestConcluded(!props.testConcluded);\n      }\n    }\n    window.addEventListener('keyup', handleKeypress);\n\n    return () => {\n      window.removeEventListener('keyup', handleKeypress);\n    };\n  }, [props, props.setTestConcluded, props.testConcluded]);\n\n  return (\n    <StyledScoreScreen\n      testScore={props.testScore}\n      highestScore={props.highestScore}\n    >\n      <span>{props.testScore} WPM!</span>\n      <span>Best result: <span>{props.highestScore}</span></span>\n      {props.highestScore === props.testScore ?\n        <span>New best result!</span>\n        :\n        <></>\n      }\n      <span>Press ENTER to run test again</span>\n    </StyledScoreScreen>\n  )\n}\n\nexport default ScoreScreen;","/**\n * TYPE TEST SCREEN HANDLER\n * Wrapper component for TYPE TEST. Handles rendering of the test and the score screen.\n */\n\nimport React, {useState, useCallback, useEffect} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport words from '../../assets/game/words.js';\nimport TypeTest from './type-test.js';\nimport ScoreScreen from './score-screen.js';\n\nconst TypeTestWrapper = styled.div`\n  margin: 100px auto 0;\n  padding: 1.5rem;\n\n  @media ${g.medium} {\n    width: min(80vw, 900px);\n  }\n\n  @media ${g.large} {\n    width: 900px;\n  }\n`\n\nconst TypeTestHandler = (props) => {\n\n  const [playing, setPlaying] = useState(false);\n\n  // Determines whether type test or score screen is displayed.\n  const [testConcluded, setTestConcluded] = useState(false);\n\n  // Stores selected test length (in seconds).\n  const [testLength, setTestLength] = useState(g.TEST_LENGTH_DEFAULT);\n\n  // Retrieve a random word from array of words, return array of letters\n  const getWord = useCallback((words) => {\n    return words[Math.floor(Math.random() * words.length)].split('');\n  },[]);\n\n  // Load an array of words. Removes duplicates before returning.\n  const loadWords = useCallback(() => {\n    let wordArr = Array.from(Array(g.TEST_WORD_COUNT)).map((_) => {\n      return getWord(words);\n    });\n    return ([...new Set(wordArr)]);\n  },[getWord]);\n\n  const [testWords, setTestWords] = useState(loadWords());\n\n  // Remove words from the from of testWords array.\n  const shiftWords = (count) => {\n    setTestWords(testWords => testWords.slice(count));\n  }\n\n  // Add some new words to the testWords array.\n  const addWords = (count) => {\n    let newWords = [];\n    for (let i = 0; i < count; i++) {\n      newWords.push(getWord(words));\n    }\n    setTestWords(testWords => testWords.concat(newWords));\n  }\n\n  const [highestScore, setHighestScore] = useState(() => {\n    // Check if there is a cookie with a key which matches COOKIE_NAME.\n    if (document.cookie.split(';').some((item) => item.trim().startsWith(g.SCORE_COOKIE_NAME))) {\n      return (\n        // Return its value.\n        document.cookie.split(';').find(row => row.startsWith(g.SCORE_COOKIE_NAME)).split('=')[1]\n      );\n    } else {\n      // If there is no matching cookie, set highestScore to 0.\n      return 0;\n    }\n  });\n\n  const [testScore, setTestScore] = useState(0);\n\n  function calcTestScore (correctWordCount) {\n    // Calculate words per minute.\n    let wpm = correctWordCount * (60 / testLength); // https://www.speedtypingonline.com/typing-equations DO SOMETHING LIKE THIS INSTEAD\n    setTestScore(wpm);\n  }\n\n  useEffect(() => {\n    if (testConcluded === true && testScore > highestScore) {\n      setHighestScore(testScore);\n    }\n  }, [testConcluded, testScore, highestScore, setHighestScore]);\n\n  useEffect(() => {\n    if (highestScore > 0) {\n      document.cookie = `${g.SCORE_COOKIE_NAME}=${highestScore};max-age=${g.COOKIE_MAX_AGE}`;\n      document.cookie = `${g.TIMESTAMP_COOKIE_NAME}=${Date.now()};max-age=${g.COOKIE_MAX_AGE}`;\n    }\n  }, [highestScore]);\n\n  return (\n    <TypeTestWrapper>\n      {testConcluded ?\n        /* Render score screen if test has concluded. */\n        <ScoreScreen\n        testScore={testScore}\n        setTestConcluded={setTestConcluded}\n        testConcluded={testConcluded}\n        highestScore={highestScore}\n        />\n        : /* Otherwise render type test. */\n        <TypeTest\n          playing={playing}\n          setPlaying={setPlaying}\n          calcTestScore={calcTestScore}\n          testLength={testLength}\n          setTestLength={setTestLength}\n          testConcluded={testConcluded}\n          setTestConcluded={setTestConcluded}\n          documentIsFocused={props.documentIsFocused}\n          testWords={testWords}\n          setTestWords={setTestWords}\n          loadWords={loadWords}\n          shiftWords={shiftWords}\n          addWords={addWords}\n        />\n      }\n    </TypeTestWrapper>\n  ); \n}\n\nexport default TypeTestHandler;","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport TypeTestHandler from '../game/type-test-handler.js';\n\n\nconst Main = styled.main`\n\theight: 100%;\n\twidth: 100%;\n\tposition: fixed;\n\t/* padding: var(--default-padding); */\n\tbackground-color: ${g.bgcolor}; /* ??? */\n\tfont-family: 'Roboto Mono', monospace;\n`\n\nconst App = () => {\n\n  // Keep track of whether document is focused.\n  const [documentIsFocused, setDocumentIsFocused] = useState(document.hasFocus());\n\n  const handleBlur = () => {\n    setDocumentIsFocused(false);\n  }\n\n  const handleFocus = () => {\n    setDocumentIsFocused(true);\n  }\n\n  const handleMouseDown = () => {\n    document.body.classList.add('no-outline');\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Tab') {\n      document.body.classList.remove('no-outline');\n    }\n  }\n\n  useEffect(() => {\n    // Handle document focus.\n    window.addEventListener('blur', handleBlur);\n    window.addEventListener('focus', handleFocus);\n\n    // Only show focus outline when using keyboard.\n\t\tdocument.body.addEventListener('mousedown', handleMouseDown);\n\t\tdocument.body.addEventListener('keydown', handleKeyDown);\n  \n    return () => {\n      window.removeEventListener('blur', handleBlur);\n      window.removeEventListener('focus', handleFocus);\n      document.removeEventListener('mousedown', handleMouseDown);\n      document.removeEventListener('keydown', handleKeyDown);\n    }\n  }, []);\n\n\treturn(\n\t\t<>\n\t\t\t<Main>\n\t\t\t\t<TypeTestHandler documentIsFocused={documentIsFocused}/>\n\t\t\t</Main>\n\t\t</>\n\t);\n} \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app.js';\nimport {GlobalStyle} from './globals.js';\nimport reportWebVitals from './reportWebVitals';\nimport '../src/assets/fonts/fonts.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}