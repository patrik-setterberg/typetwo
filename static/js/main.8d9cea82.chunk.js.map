{"version":3,"sources":["globals.js","assets/game/words.js","components/game/input.js","components/game/test-countdown.js","components/game/text.js","components/game/test-time-controls.js","components/game/game.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["largestMedium","g","small","medium","largestSmall","atMostMedium","atleastMedium","large","bgcolor","WORDS_PER_ROW","ROW_COUNT","DEFAULT_TEST_DURATION","TEST_DURATION_SHORT","TEST_DURATION_MEDIUM","TEST_DURATION_LONG","FOCUS_CHECK_INTERVAL","GlobalStyle","createGlobalStyle","words","StyledInput","styled","input","Input","props","textInput","useRef","focusTimer","useEffect","current","focus","type","placeholder","focused","playing","value","inputValue","onInput","e","text","maxLen","replace","substring","filterInput","target","currentWord","length","setInputValue","id","aria-label","ref","onBlur","window","setInterval","onFocus","clearInterval","TimerWrapper","div","Numbers","span","TestTimer","timeLeft","TextWrapper","StyledRow","caretOffset","css","StyledWord","isCurrent","isCorrect","StyledLetter","entered","isIncorrect","Row","rowClasses","first","className","children","Word","Letter","Text","useState","rows","rowArr","setRowArr","restartCaretAnimation","rowElem","document","querySelector","classList","remove","offsetHeight","add","handleKeypress","addEventListener","handleKeyup","key","removeEventListener","map","row","rowInd","word","wordInd","currentWordInd","letter","letterInd","React","memo","StyledButton","button","StyledTimeControls","Button","onClick","duration","setTestDuration","TimeControls","durationOptions","option","TypeTestWrapper","TypeTest","getWord","Math","floor","random","split","loadRow","wordArr","indexOf","push","loadRows","Array","from","_","setPlaying","testDuration","setTimeLeft","setCurrentWordInd","rowProgress","setRowProgress","textRows","setTextRows","documentFocused","setDocumentFocus","checkFullWord","join","updateCurrentWordInd","tempArr","shift","updateTextRows","endTest","hasFocus","test","timerInterval","checkWord","updateCurrentWord","Main","main","App","body","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"ilCAKA,IACMA,EAAgB,KAKhBC,EAAI,CAGRC,MAAM,+BAAD,OATc,IASd,OACLC,OAAO,+BAAD,OAAiCC,IAAjC,+BAAsEJ,EAAtE,OACNK,aAAa,+BAAD,OAAiCL,EAAjC,OACZM,cAAc,+BAAD,OAAiCF,IAAjC,OACbG,MAAM,+BAAD,OAAiCP,KAAjC,OAELQ,QAAS,OAGTC,cAAe,EACfC,UAAW,EACXC,sBAAuB,GAGvBC,oBAAqB,GACrBC,qBAAsB,GACtBC,mBAAoB,GAGpBC,qBAAsB,IAGTd,IAETe,EAAcC,YAAH,IAsCNhB,EAAEM,O,OC+5BEW,EAz+BD,CACZ,UACA,OACA,QACA,QACA,SACA,YACA,UACA,SACA,MACA,SACA,WACA,WACA,MACA,UACA,iBACA,QACA,QACA,SACA,QACA,QACA,UACA,MACA,SACA,QACA,MACA,QACA,YACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,UACA,OACA,WACA,SACA,WACA,QACA,SACA,WACA,MACA,SACA,UACA,SACA,MACA,SACA,WACA,SACA,QACA,WACA,OACA,QACA,MACA,SACA,SACA,MACA,UACA,SACA,KACA,MACA,SACA,KACA,SACA,YACA,WACA,WACA,SACA,YACA,YACA,QACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,KACA,OACA,YACA,UACA,SACA,MACA,SACA,QACA,WACA,SACA,UACA,UACA,OACA,SACA,UACA,SACA,MACA,OACA,UACA,MACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,WACA,MACA,MACA,KACA,OACA,SACA,WACA,MACA,SACA,YACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,MACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,YACA,QACA,YACA,SACA,SACA,YACA,SACA,QACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,aACA,UACA,QACA,OACA,aACA,SACA,YACA,UACA,UACA,WACA,UACA,YACA,aACA,WACA,WACA,WACA,UACA,WACA,UACA,OACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,WACA,UACA,MACA,UACA,WACA,MACA,OACA,OACA,WACA,MACA,OACA,OACA,QACA,SACA,SACA,SACA,WACA,OACA,UACA,SACA,WACA,aACA,WACA,SACA,UACA,SACA,YACA,UACA,cACA,MACA,aACA,YACA,YACA,SACA,YACA,WACA,WACA,UACA,aACA,UACA,KACA,SACA,MACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,MACA,WACA,UACA,OACA,YACA,SACA,SACA,QACA,SACA,WACA,OACA,WACA,MACA,SACA,QACA,SACA,QACA,SACA,cACA,gBACA,aACA,YACA,OACA,UACA,QACA,OACA,QACA,YACA,WACA,aACA,WACA,UACA,UACA,YACA,QACA,SACA,aACA,SACA,UACA,MACA,OACA,OACA,SACA,OACA,OACA,SACA,MACA,OACA,SACA,OACA,UACA,OACA,UACA,MACA,QACA,QACA,SACA,OACA,OACA,QACA,UACA,YACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,QACA,SACA,OACA,OACA,MACA,QACA,UACA,SACA,OACA,SACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,MACA,UACA,aACA,MACA,OACA,OACA,QACA,KACA,OACA,OACA,aACA,QACA,QACA,SACA,QACA,OACA,SACA,QACA,MACA,MACA,OACA,OACA,YACA,OACA,OACA,SACA,QACA,OACA,OACA,KACA,OACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,OACA,UACA,OACA,MACA,UACA,MACA,UACA,MACA,OACA,OACA,OACA,WACA,MACA,QACA,OACA,QACA,MACA,UACA,OACA,QACA,UACA,UACA,OACA,WACA,KACA,QACA,UACA,SACA,YACA,UACA,KACA,UACA,YACA,WACA,SACA,WACA,aACA,WACA,cACA,SACA,UACA,cACA,WACA,cACA,gBACA,YACA,OACA,aACA,UACA,QACA,KACA,OACA,MACA,SACA,MACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,UACA,OACA,YACA,OACA,WACA,QACA,OACA,OACA,QACA,QACA,MACA,SACA,MACA,OACA,SACA,QACA,QACA,QACA,OACA,MACA,QACA,OACA,MACA,SACA,QACA,MACA,OACA,QACA,OACA,SACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,MACA,UACA,WACA,OACA,WACA,QACA,WACA,OACA,MACA,SACA,aACA,UACA,OACA,SACA,WACA,WACA,SACA,MACA,QACA,KACA,OACA,UACA,QACA,UACA,OACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,WACA,UACA,OACA,SACA,OACA,UACA,QACA,SACA,SACA,QACA,QACA,OACA,UACA,OACA,SACA,QACA,OACA,WACA,QACA,KACA,MACA,OACA,QACA,OACA,KACA,SACA,OACA,SACA,WACA,UACA,SACA,OACA,SACA,YACA,OACA,UACA,QACA,MACA,OACA,YACA,OACA,OACA,QACA,KACA,OACA,MACA,QACA,MACA,OACA,UACA,SACA,MACA,SACA,QACA,KACA,MACA,QACA,SACA,UACA,WACA,QACA,KACA,MACA,KACA,MACA,KACA,OACA,MACA,OACA,OACA,OACA,YACA,cACA,SACA,KACA,QACA,eACA,QACA,SACA,MACA,MACA,UACA,OACA,MACA,QACA,OACA,OACA,WACA,QACA,SACA,OACA,cACA,aACA,eACA,UACA,QACA,OACA,OACA,UACA,UACA,MACA,QACA,SACA,MACA,UACA,cACA,UACA,SACA,SACA,WACA,QACA,WACA,OACA,UACA,QACA,QACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,YACA,WACA,OACA,UACA,aACA,WACA,WACA,WACA,QACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,aACA,eACA,YACA,UACA,UACA,WACA,UACA,QACA,UACA,SACA,OACA,UACA,OACA,MACA,UACA,WACA,UACA,QACA,OACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,YACA,SACA,MACA,SACA,UACA,SACA,SACA,eACA,YACA,SACA,WACA,SACA,SACA,YACA,aACA,UACA,WACA,WACA,UACA,WACA,iBACA,OACA,SACA,SACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,QACA,SACA,UACA,YACA,QACA,MACA,SACA,OACA,SACA,UACA,WACA,MACA,OACA,OACA,OACA,OACA,SACA,QACA,SACA,UACA,QACA,UACA,MACA,QACA,UACA,MACA,SACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,WACA,OACA,OACA,OACA,cACA,UACA,SACA,SACA,QACA,OACA,SACA,SACA,MACA,OACA,YACA,MACA,OACA,QACA,OACA,QACA,QACA,KACA,SACA,UACA,UACA,OACA,WACA,UACA,YACA,YACA,MACA,OACA,OACA,OACA,QACA,SACA,QACA,WACA,QACA,QACA,UACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,OACA,QACA,QACA,YACA,UACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,WACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,UACA,aACA,OACA,WACA,SACA,UACA,SACA,UACA,OACA,UACA,SACA,QACA,OACA,OACA,OACA,MACA,QACA,UACA,OACA,aACA,aACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,QACA,OACA,aACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,WACA,SACA,QACA,UACA,aACA,QACA,OACA,OACA,KACA,QACA,WACA,UACA,MACA,MACA,QACA,QACA,SACA,OACA,QACA,cACA,WACA,SACA,QACA,YACA,OACA,QACA,OACA,UACA,OACA,QACA,MACA,OACA,KACA,MACA,OACA,QACA,aACA,OACA,QACA,KACA,OACA,KACA,MACA,UACA,QACA,UACA,OACA,SACA,OACA,WACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,QACA,MACA,KACA,SACA,OACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,QACA,UACA,QACA,QACA,QACA,MACA,QACA,OACA,QACA,MACA,OACA,OACA,OACA,MACA,OACA,SACA,OACA,OACA,SACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,QACA,OACA,Y,6VC/9BF,IAAMC,EAAcC,IAAOC,MAAV,KA0EFC,EAxDD,SAACC,GAGb,IAAIC,EAAYC,iBAAO,MAEnBC,EAAa,KAEjBC,qBAAU,WAERH,EAAUI,QAAQC,WAcpB,OACE,cAACV,EAAD,CACEW,KAAK,OACLC,YACER,EAAMS,QAEHT,EAAMU,QAAU,GAAK,6BAErBV,EAAMU,QAAU,+BAAiC,0BAEtDC,MAAOX,EAAMY,WACbC,QAAS,SAACC,GACR,IAAIC,EAnBQ,SAACjB,EAAOkB,GAC1B,OAAOlB,EACJmB,QAAQ,sBAAuB,IAC/BA,QAAQ,OAAQ,IAChBC,UAAU,EAAGF,GAeCG,CAAYL,EAAEM,OAAOT,MAAOX,EAAMqB,YAAYC,QACzDtB,EAAMuB,cAAcR,IAEtBS,GAAG,aACHC,aAAW,kBACXC,IAAKzB,EACL0B,OAAQ,YACgB,IAAlB3B,EAAMU,UAERP,EAAayB,OAAOC,aAAY,WAC9B5B,EAAUI,QAAQC,UACjB,OAGPwB,QAAS,WACPF,OAAOG,cAAc5B,O,wPC1E7B,IAAM6B,EAAenC,IAAOoC,IAAV,KAMZC,EAAUrC,IAAOsC,KAAV,KAkBEC,EAVG,SAACpC,GACjB,OACE,c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","file":"static/js/main.8d9cea82.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components';\n\n/**\n * MEDIA BREAKPOINT VARS TWEAK HERE\n */\nconst largestSmall = 767; // px\nconst largestMedium = 1299; // px\n\n/**\n * GLOBAL VARS\n */\nconst g = {\n\n  // Media breakpoints\n  small: `only screen and (max-width: ${largestSmall}px)`,\n  medium: `only screen and (min-width: ${largestSmall+1}px) and (max-width: ${largestMedium}px)`,\n  atMostMedium: `only screen and (max-width: ${largestMedium}px)`,\n  atleastMedium: `only screen and (min-width: ${largestSmall+1}px)`,\n  large: `only screen and (min-width: ${largestMedium+1}px)`,\n  \n  bgcolor: '#333',\n\n  // TYPE TEST CONFIGURATION VARS\n  WORDS_PER_ROW: 9,\n  ROW_COUNT: 3,\n  DEFAULT_TEST_DURATION: 30,\n\n  // TEST DURATION OPTIONS\n  TEST_DURATION_SHORT: 15,\n  TEST_DURATION_MEDIUM: 30,\n  TEST_DURATION_LONG: 60,\n\n  // Set how often component checks if document is focused\n  FOCUS_CHECK_INTERVAL: 66,\n}\n\nexport default g;\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --default-padding: 1.5rem;\n    \n    --default-timing: cubic-bezier(0.78, 0.2, 0.05, 1.0);\n\n    --caret-opacity: 0.8;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n    box-sizing: border-box;\n  }\n\n  body {\n    \n  }\n  \n  body.no-outline:focus,\n  body.no-outline *:focus ~ * {\n    outline: none !important;\n  }\n\n  *:active,\n  *:active ~ * {\n    outline: none;\n  }\n\n  #root {\n    \n  }\n\n  @media ${g.large} {\n    :root {\n      --default-padding: 2rem;\n    }\n  }\n\n  /* ANIMATIONS */\n  @keyframes caret-blink {\n    0% {\n      opacity: var(---caret-opacity);\n    }\n\n    45% {\n      opacity: var(---caret-opacity);\n    }\n\n    50% {\n      opacity: 0;\n    }\n\n    95% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: var(---caret-opacity);\n    }\n  }\n`\n\nexport {GlobalStyle};","// (Around) 1000 common words in English\n// adapted from https://www.ef.com/wwen/english-resources/english-vocabulary/top-1000-words/\nconst words = [\n  \"ability\",\n  \"able\",\n  \"about\",\n  \"above\",\n  \"accept\",\n  \"according\",\n  \"account\",\n  \"across\",\n  \"act\",\n  \"action\",\n  \"activity\",\n  \"actually\",\n  \"add\",\n  \"address\",\n  \"administration\",\n  \"admit\",\n  \"adult\",\n  \"affect\",\n  \"after\",\n  \"again\",\n  \"against\",\n  \"age\",\n  \"agency\",\n  \"agent\",\n  \"ago\",\n  \"agree\",\n  \"agreement\",\n  \"ahead\",\n  \"air\",\n  \"all\",\n  \"allow\",\n  \"almost\",\n  \"alone\",\n  \"along\",\n  \"already\",\n  \"also\",\n  \"although\",\n  \"always\",\n  \"American\",\n  \"among\",\n  \"amount\",\n  \"analysis\",\n  \"and\",\n  \"animal\",\n  \"another\",\n  \"answer\",\n  \"any\",\n  \"anyone\",\n  \"anything\",\n  \"appear\",\n  \"apply\",\n  \"approach\",\n  \"area\",\n  \"argue\",\n  \"arm\",\n  \"around\",\n  \"arrive\",\n  \"art\",\n  \"article\",\n  \"artist\",\n  \"as\",\n  \"ask\",\n  \"assume\",\n  \"at\",\n  \"attack\",\n  \"attention\",\n  \"attorney\",\n  \"audience\",\n  \"author\",\n  \"authority\",\n  \"available\",\n  \"avoid\",\n  \"away\",\n  \"baby\",\n  \"back\",\n  \"bad\",\n  \"bag\",\n  \"ball\",\n  \"bank\",\n  \"bar\",\n  \"base\",\n  \"be\",\n  \"beat\",\n  \"beautiful\",\n  \"because\",\n  \"become\",\n  \"bed\",\n  \"before\",\n  \"begin\",\n  \"behavior\",\n  \"behind\",\n  \"believe\",\n  \"benefit\",\n  \"best\",\n  \"better\",\n  \"between\",\n  \"beyond\",\n  \"big\",\n  \"bill\",\n  \"billion\",\n  \"bit\",\n  \"black\",\n  \"blood\",\n  \"blue\",\n  \"board\",\n  \"body\",\n  \"book\",\n  \"born\",\n  \"both\",\n  \"box\",\n  \"boy\",\n  \"break\",\n  \"bring\",\n  \"brother\",\n  \"budget\",\n  \"build\",\n  \"building\",\n  \"business\",\n  \"but\",\n  \"buy\",\n  \"by\",\n  \"call\",\n  \"camera\",\n  \"campaign\",\n  \"can\",\n  \"cancer\",\n  \"candidate\",\n  \"capital\",\n  \"car\",\n  \"card\",\n  \"care\",\n  \"career\",\n  \"carry\",\n  \"case\",\n  \"cat\",\n  \"catch\",\n  \"cause\",\n  \"cell\",\n  \"center\",\n  \"central\",\n  \"century\",\n  \"certain\",\n  \"certainly\",\n  \"chair\",\n  \"challenge\",\n  \"chance\",\n  \"change\",\n  \"character\",\n  \"charge\",\n  \"check\",\n  \"child\",\n  \"choice\",\n  \"choose\",\n  \"church\",\n  \"citizen\",\n  \"city\",\n  \"civil\",\n  \"claim\",\n  \"class\",\n  \"clear\",\n  \"clearly\",\n  \"close\",\n  \"coach\",\n  \"cold\",\n  \"collection\",\n  \"college\",\n  \"color\",\n  \"come\",\n  \"commercial\",\n  \"common\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"concern\",\n  \"condition\",\n  \"conference\",\n  \"Congress\",\n  \"consider\",\n  \"consumer\",\n  \"contain\",\n  \"continue\",\n  \"control\",\n  \"cost\",\n  \"could\",\n  \"country\",\n  \"couple\",\n  \"course\",\n  \"court\",\n  \"cover\",\n  \"create\",\n  \"crime\",\n  \"cultural\",\n  \"culture\",\n  \"cup\",\n  \"current\",\n  \"customer\",\n  \"cut\",\n  \"dark\",\n  \"data\",\n  \"daughter\",\n  \"day\",\n  \"dead\",\n  \"deal\",\n  \"death\",\n  \"debate\",\n  \"decade\",\n  \"decide\",\n  \"decision\",\n  \"deep\",\n  \"defense\",\n  \"degree\",\n  \"Democrat\",\n  \"democratic\",\n  \"describe\",\n  \"design\",\n  \"despite\",\n  \"detail\",\n  \"determine\",\n  \"develop\",\n  \"development\",\n  \"die\",\n  \"difference\",\n  \"different\",\n  \"difficult\",\n  \"dinner\",\n  \"direction\",\n  \"director\",\n  \"discover\",\n  \"discuss\",\n  \"discussion\",\n  \"disease\",\n  \"do\",\n  \"doctor\",\n  \"dog\",\n  \"door\",\n  \"down\",\n  \"draw\",\n  \"dream\",\n  \"drive\",\n  \"drop\",\n  \"drug\",\n  \"during\",\n  \"each\",\n  \"early\",\n  \"east\",\n  \"easy\",\n  \"eat\",\n  \"economic\",\n  \"economy\",\n  \"edge\",\n  \"education\",\n  \"effect\",\n  \"effort\",\n  \"eight\",\n  \"either\",\n  \"election\",\n  \"else\",\n  \"employee\",\n  \"end\",\n  \"energy\",\n  \"enjoy\",\n  \"enough\",\n  \"enter\",\n  \"entire\",\n  \"environment\",\n  \"environmental\",\n  \"especially\",\n  \"establish\",\n  \"even\",\n  \"evening\",\n  \"event\",\n  \"ever\",\n  \"every\",\n  \"everybody\",\n  \"everyone\",\n  \"everything\",\n  \"evidence\",\n  \"exactly\",\n  \"example\",\n  \"executive\",\n  \"exist\",\n  \"expect\",\n  \"experience\",\n  \"expert\",\n  \"explain\",\n  \"eye\",\n  \"face\",\n  \"fact\",\n  \"factor\",\n  \"fail\",\n  \"fall\",\n  \"family\",\n  \"far\",\n  \"fast\",\n  \"father\",\n  \"fear\",\n  \"federal\",\n  \"feel\",\n  \"feeling\",\n  \"few\",\n  \"field\",\n  \"fight\",\n  \"figure\",\n  \"fill\",\n  \"film\",\n  \"final\",\n  \"finally\",\n  \"financial\",\n  \"find\",\n  \"fine\",\n  \"finger\",\n  \"finish\",\n  \"fire\",\n  \"firm\",\n  \"first\",\n  \"fish\",\n  \"five\",\n  \"floor\",\n  \"fly\",\n  \"focus\",\n  \"follow\",\n  \"food\",\n  \"foot\",\n  \"for\",\n  \"force\",\n  \"foreign\",\n  \"forget\",\n  \"form\",\n  \"former\",\n  \"forward\",\n  \"four\",\n  \"free\",\n  \"friend\",\n  \"from\",\n  \"front\",\n  \"full\",\n  \"fund\",\n  \"future\",\n  \"game\",\n  \"garden\",\n  \"gas\",\n  \"general\",\n  \"generation\",\n  \"get\",\n  \"girl\",\n  \"give\",\n  \"glass\",\n  \"go\",\n  \"goal\",\n  \"good\",\n  \"government\",\n  \"great\",\n  \"green\",\n  \"ground\",\n  \"group\",\n  \"grow\",\n  \"growth\",\n  \"guess\",\n  \"gun\",\n  \"guy\",\n  \"hair\",\n  \"half\",\n  \"hamburger\",\n  \"hand\",\n  \"hang\",\n  \"happen\",\n  \"happy\",\n  \"hard\",\n  \"have\",\n  \"he\",\n  \"head\",\n  \"health\",\n  \"hear\",\n  \"heart\",\n  \"heat\",\n  \"heavy\",\n  \"help\",\n  \"her\",\n  \"here\",\n  \"herself\",\n  \"high\",\n  \"him\",\n  \"himself\",\n  \"his\",\n  \"history\",\n  \"hit\",\n  \"hold\",\n  \"home\",\n  \"hope\",\n  \"hospital\",\n  \"hot\",\n  \"hotel\",\n  \"hour\",\n  \"house\",\n  \"how\",\n  \"however\",\n  \"huge\",\n  \"human\",\n  \"hundred\",\n  \"husband\",\n  \"idea\",\n  \"identify\",\n  \"if\",\n  \"image\",\n  \"imagine\",\n  \"impact\",\n  \"important\",\n  \"improve\",\n  \"in\",\n  \"include\",\n  \"including\",\n  \"increase\",\n  \"indeed\",\n  \"indicate\",\n  \"individual\",\n  \"industry\",\n  \"information\",\n  \"inside\",\n  \"instead\",\n  \"institution\",\n  \"interest\",\n  \"interesting\",\n  \"international\",\n  \"interview\",\n  \"into\",\n  \"investment\",\n  \"involve\",\n  \"issue\",\n  \"it\",\n  \"item\",\n  \"its\",\n  \"itself\",\n  \"job\",\n  \"join\",\n  \"just\",\n  \"keep\",\n  \"key\",\n  \"kid\",\n  \"kill\",\n  \"kind\",\n  \"kitchen\",\n  \"know\",\n  \"knowledge\",\n  \"land\",\n  \"language\",\n  \"large\",\n  \"last\",\n  \"late\",\n  \"later\",\n  \"laugh\",\n  \"law\",\n  \"lawyer\",\n  \"lay\",\n  \"lead\",\n  \"leader\",\n  \"learn\",\n  \"least\",\n  \"leave\",\n  \"left\",\n  \"leg\",\n  \"legal\",\n  \"less\",\n  \"let\",\n  \"letter\",\n  \"level\",\n  \"lie\",\n  \"life\",\n  \"light\",\n  \"like\",\n  \"likely\",\n  \"line\",\n  \"list\",\n  \"listen\",\n  \"little\",\n  \"live\",\n  \"local\",\n  \"long\",\n  \"look\",\n  \"lose\",\n  \"loss\",\n  \"lot\",\n  \"love\",\n  \"low\",\n  \"machine\",\n  \"magazine\",\n  \"main\",\n  \"maintain\",\n  \"major\",\n  \"majority\",\n  \"make\",\n  \"man\",\n  \"manage\",\n  \"management\",\n  \"manager\",\n  \"many\",\n  \"market\",\n  \"marriage\",\n  \"material\",\n  \"matter\",\n  \"may\",\n  \"maybe\",\n  \"me\",\n  \"mean\",\n  \"measure\",\n  \"media\",\n  \"medical\",\n  \"meet\",\n  \"meeting\",\n  \"member\",\n  \"memory\",\n  \"mention\",\n  \"message\",\n  \"method\",\n  \"middle\",\n  \"might\",\n  \"military\",\n  \"million\",\n  \"mind\",\n  \"minute\",\n  \"miss\",\n  \"mission\",\n  \"model\",\n  \"modern\",\n  \"moment\",\n  \"money\",\n  \"month\",\n  \"more\",\n  \"morning\",\n  \"most\",\n  \"mother\",\n  \"mouth\",\n  \"move\",\n  \"movement\",\n  \"movie\",\n  \"Mr\",\n  \"Mrs\",\n  \"much\",\n  \"music\",\n  \"must\",\n  \"my\",\n  \"myself\",\n  \"name\",\n  \"nation\",\n  \"national\",\n  \"natural\",\n  \"nature\",\n  \"near\",\n  \"nearly\",\n  \"necessary\",\n  \"need\",\n  \"network\",\n  \"never\",\n  \"new\",\n  \"news\",\n  \"newspaper\",\n  \"next\",\n  \"nice\",\n  \"night\",\n  \"no\",\n  \"none\",\n  \"nor\",\n  \"north\",\n  \"not\",\n  \"note\",\n  \"nothing\",\n  \"notice\",\n  \"now\",\n  \"number\",\n  \"occur\",\n  \"of\",\n  \"off\",\n  \"offer\",\n  \"office\",\n  \"officer\",\n  \"official\",\n  \"often\",\n  \"oh\",\n  \"oil\",\n  \"ok\",\n  \"old\",\n  \"on\",\n  \"once\",\n  \"one\",\n  \"only\",\n  \"onto\",\n  \"open\",\n  \"operation\",\n  \"opportunity\",\n  \"option\",\n  \"or\",\n  \"order\",\n  \"organization\",\n  \"other\",\n  \"others\",\n  \"our\",\n  \"out\",\n  \"outside\",\n  \"over\",\n  \"own\",\n  \"owner\",\n  \"page\",\n  \"pain\",\n  \"painting\",\n  \"paper\",\n  \"parent\",\n  \"part\",\n  \"participant\",\n  \"particular\",\n  \"particularly\",\n  \"partner\",\n  \"party\",\n  \"pass\",\n  \"past\",\n  \"patient\",\n  \"pattern\",\n  \"pay\",\n  \"peace\",\n  \"people\",\n  \"per\",\n  \"perform\",\n  \"performance\",\n  \"perhaps\",\n  \"period\",\n  \"person\",\n  \"personal\",\n  \"phone\",\n  \"physical\",\n  \"pick\",\n  \"picture\",\n  \"piece\",\n  \"place\",\n  \"plan\",\n  \"plant\",\n  \"play\",\n  \"player\",\n  \"point\",\n  \"police\",\n  \"policy\",\n  \"political\",\n  \"politics\",\n  \"poor\",\n  \"popular\",\n  \"population\",\n  \"position\",\n  \"positive\",\n  \"possible\",\n  \"power\",\n  \"practice\",\n  \"prepare\",\n  \"present\",\n  \"president\",\n  \"pressure\",\n  \"pretty\",\n  \"prevent\",\n  \"price\",\n  \"private\",\n  \"probably\",\n  \"problem\",\n  \"process\",\n  \"produce\",\n  \"product\",\n  \"production\",\n  \"professional\",\n  \"professor\",\n  \"program\",\n  \"project\",\n  \"property\",\n  \"protect\",\n  \"prove\",\n  \"provide\",\n  \"public\",\n  \"pull\",\n  \"purpose\",\n  \"push\",\n  \"put\",\n  \"quality\",\n  \"question\",\n  \"quickly\",\n  \"quite\",\n  \"race\",\n  \"radio\",\n  \"raise\",\n  \"range\",\n  \"rate\",\n  \"rather\",\n  \"reach\",\n  \"read\",\n  \"ready\",\n  \"real\",\n  \"reality\",\n  \"realize\",\n  \"really\",\n  \"reason\",\n  \"receive\",\n  \"recent\",\n  \"recently\",\n  \"recognize\",\n  \"record\",\n  \"red\",\n  \"reduce\",\n  \"reflect\",\n  \"region\",\n  \"relate\",\n  \"relationship\",\n  \"religious\",\n  \"remain\",\n  \"remember\",\n  \"remove\",\n  \"report\",\n  \"represent\",\n  \"Republican\",\n  \"require\",\n  \"research\",\n  \"resource\",\n  \"respond\",\n  \"response\",\n  \"responsibility\",\n  \"rest\",\n  \"result\",\n  \"return\",\n  \"reveal\",\n  \"rich\",\n  \"right\",\n  \"rise\",\n  \"risk\",\n  \"road\",\n  \"rock\",\n  \"role\",\n  \"room\",\n  \"rule\",\n  \"run\",\n  \"safe\",\n  \"same\",\n  \"save\",\n  \"say\",\n  \"scene\",\n  \"school\",\n  \"science\",\n  \"scientist\",\n  \"score\",\n  \"sea\",\n  \"season\",\n  \"seat\",\n  \"second\",\n  \"section\",\n  \"security\",\n  \"see\",\n  \"seek\",\n  \"seem\",\n  \"sell\",\n  \"send\",\n  \"senior\",\n  \"sense\",\n  \"series\",\n  \"serious\",\n  \"serve\",\n  \"service\",\n  \"set\",\n  \"seven\",\n  \"several\",\n  \"sex\",\n  \"sexual\",\n  \"shake\",\n  \"share\",\n  \"she\",\n  \"shoot\",\n  \"short\",\n  \"shot\",\n  \"should\",\n  \"shoulder\",\n  \"show\",\n  \"side\",\n  \"sign\",\n  \"significant\",\n  \"similar\",\n  \"simple\",\n  \"simply\",\n  \"since\",\n  \"sing\",\n  \"single\",\n  \"sister\",\n  \"sit\",\n  \"site\",\n  \"situation\",\n  \"six\",\n  \"size\",\n  \"skill\",\n  \"skin\",\n  \"small\",\n  \"smile\",\n  \"so\",\n  \"social\",\n  \"society\",\n  \"soldier\",\n  \"some\",\n  \"somebody\",\n  \"someone\",\n  \"something\",\n  \"sometimes\",\n  \"son\",\n  \"song\",\n  \"soon\",\n  \"sort\",\n  \"sound\",\n  \"source\",\n  \"south\",\n  \"southern\",\n  \"space\",\n  \"speak\",\n  \"special\",\n  \"specific\",\n  \"speech\",\n  \"spend\",\n  \"sport\",\n  \"spring\",\n  \"staff\",\n  \"stage\",\n  \"stand\",\n  \"standard\",\n  \"star\",\n  \"start\",\n  \"state\",\n  \"statement\",\n  \"station\",\n  \"stay\",\n  \"step\",\n  \"still\",\n  \"stock\",\n  \"stop\",\n  \"store\",\n  \"story\",\n  \"strategy\",\n  \"street\",\n  \"strong\",\n  \"structure\",\n  \"student\",\n  \"study\",\n  \"stuff\",\n  \"style\",\n  \"subject\",\n  \"success\",\n  \"successful\",\n  \"such\",\n  \"suddenly\",\n  \"suffer\",\n  \"suggest\",\n  \"summer\",\n  \"support\",\n  \"sure\",\n  \"surface\",\n  \"system\",\n  \"table\",\n  \"take\",\n  \"talk\",\n  \"task\",\n  \"tax\",\n  \"teach\",\n  \"teacher\",\n  \"team\",\n  \"technology\",\n  \"television\",\n  \"tell\",\n  \"ten\",\n  \"tend\",\n  \"term\",\n  \"test\",\n  \"than\",\n  \"thank\",\n  \"that\",\n  \"the\",\n  \"their\",\n  \"them\",\n  \"themselves\",\n  \"then\",\n  \"theory\",\n  \"there\",\n  \"these\",\n  \"they\",\n  \"thing\",\n  \"think\",\n  \"third\",\n  \"this\",\n  \"those\",\n  \"though\",\n  \"thought\",\n  \"thousand\",\n  \"threat\",\n  \"three\",\n  \"through\",\n  \"throughout\",\n  \"throw\",\n  \"thus\",\n  \"time\",\n  \"to\",\n  \"today\",\n  \"together\",\n  \"tonight\",\n  \"too\",\n  \"top\",\n  \"total\",\n  \"tough\",\n  \"toward\",\n  \"town\",\n  \"trade\",\n  \"traditional\",\n  \"training\",\n  \"travel\",\n  \"treat\",\n  \"treatment\",\n  \"tree\",\n  \"trial\",\n  \"trip\",\n  \"trouble\",\n  \"true\",\n  \"truth\",\n  \"try\",\n  \"turn\",\n  \"TV\",\n  \"two\",\n  \"type\",\n  \"under\",\n  \"understand\",\n  \"unit\",\n  \"until\",\n  \"up\",\n  \"upon\",\n  \"us\",\n  \"use\",\n  \"usually\",\n  \"value\",\n  \"various\",\n  \"very\",\n  \"victim\",\n  \"view\",\n  \"violence\",\n  \"visit\",\n  \"voice\",\n  \"vote\",\n  \"wait\",\n  \"walk\",\n  \"wall\",\n  \"want\",\n  \"war\",\n  \"watch\",\n  \"water\",\n  \"way\",\n  \"we\",\n  \"weapon\",\n  \"wear\",\n  \"week\",\n  \"weight\",\n  \"well\",\n  \"west\",\n  \"western\",\n  \"what\",\n  \"whatever\",\n  \"when\",\n  \"where\",\n  \"whether\",\n  \"which\",\n  \"while\",\n  \"white\",\n  \"who\",\n  \"whole\",\n  \"whom\",\n  \"whose\",\n  \"why\",\n  \"wide\",\n  \"wife\",\n  \"will\",\n  \"win\",\n  \"wind\",\n  \"window\",\n  \"wish\",\n  \"with\",\n  \"within\",\n  \"without\",\n  \"woman\",\n  \"wonder\",\n  \"word\",\n  \"work\",\n  \"worker\",\n  \"world\",\n  \"worry\",\n  \"would\",\n  \"write\",\n  \"writer\",\n  \"wrong\",\n  \"yard\",\n  \"yeah\",\n  \"year\",\n  \"yes\",\n  \"yet\",\n  \"you\",\n  \"young\",\n  \"your\",\n  \"yourself\",\n];\n\nexport default words;","/**\n * TYPE TEST INPUT FIELD COMPONENT\n * Automatically focused text-input which is visually hidden.\n */\n\nimport React, {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n// import g from '../../globals.js';\n\nconst StyledInput = styled.input`\n/*\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  font-family: 'Roboto Mono', monospace;\n  font-size: 1.2rem;\n  width: 50%;\n  padding: 0.7rem 0.6rem;\n  border-radius: 0.6rem;\n  transition: opacity 0.225s ease;\n*/\n  opacity: 0;  \n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst Input = (props) => {\n\n  // initiate reference to textinput element\n  let textInput = useRef(null);\n\n  let focusTimer = null;\n\n  useEffect(() => {\n    // Focus on load and change\n    textInput.current.focus();\n  });\n\n/* Filter text-input. \nRemove everything except chars inside square brackets.\nAlso remove whitespaces, incl. tabs, newlines.\nFinally, trim chars which exceed length of 2nd parameter (currentWord). */\nconst filterInput = (input, maxLen) => {\n  return input\n    .replace(/[^a-zA-Z0-9-.,'!?]/g, \"\")\n    .replace(/\\s+/g, \"\")\n    .substring(0, maxLen);\n  }\n\n  return(\n    <StyledInput\n      type=\"text\"\n      placeholder={\n        props.focused ? \n          // focused && playing : focused && not playing\n          (props.playing ? '' : 'Begin typing to start test') :\n          // not focused && playing : not focused && not playing\n          (props.playing ? 'Test paused, focus to resume' : 'Click document to focus')\n      }\n      value={props.inputValue}\n      onInput={(e) => {\n        let text = filterInput(e.target.value, props.currentWord.length);\n        props.setInputValue(text);\n      }}\n      id=\"text-input\"\n      aria-label=\"Type test input\"\n      ref={textInput}\n      onBlur={() => {\n        if (props.playing === true) {\n          // Try to focus\n          focusTimer = window.setInterval(() => {\n            textInput.current.focus()\n          }, 100);\n        }\n      }}\n      onFocus={() => {\n        window.clearInterval(focusTimer);\n      }}\n    />\n  );\n}\n\nexport default Input;","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst TimerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 2rem;\n`\n\nconst Numbers = styled.span`\n  color: #fff;\n  font-size: 3rem;\n`\n\n/**\n * Countdown timer\n */\nconst TestTimer = (props) => {\n  return(\n    <TimerWrapper>\n      <Numbers>\n        {props.timeLeft}\n      </Numbers>      \n    </TimerWrapper>\n  );\n}\n\nexport default TestTimer;","/**\n * TYPE TEST TEXT COMPONENT\n * Displays type test's words on screen.\n * Incorrectly input characters are highlighted in **PROBABLY RED**.\n */\n\nimport React, {useEffect, useState} from 'react';\nimport styled, {css} from 'styled-components';\n// import g from '../../globals.js';\n\nconst TextWrapper = styled.div`\n  color: ${props => props.focused ? '#fff' : 'transparent'};\n  text-shadow: ${props => props.focused ? 'none' : '0 0 0.4rem #fff'};\n  transition: color 0.225s ease, text-shadow 0.225s ease;\n\n  & > span {\n    line-height: 1.6;\n  }\n`\n\nconst StyledRow = styled.span`\n  display: flex;\n  position: relative;\n  align-items: center;\n  font-size: 1.5rem;\n\n  /**\n   * Blinking caret\n   * Absolutely positioned on first row, offset from left edge set by adding length\n   * of completed words and current length of input. Offset uses margin-left and the ch unit:\n   * (width of char '0' in current font, works because we're using monospace font).\n   */\n  &.first-row::before {\n    position: absolute;\n    left: 0;\n    content: '';\n    display: inline-block;\n    height: 75%;\n    width: 3px;\n    background-color: orange;\n    opacity: 0.7;\n    ${props => props.caretOffset && css`\n      margin-left: ${props.caretOffset}ch;`\n    }\n  }\n\n  &.animate::before {\n    animation: 1.8s cubic-bezier(0.78, 0.2, 0.05, 1.0) 0s infinite forwards caret-blink;\n  }\n`\n\nconst StyledWord = styled.span`\n  ${props => props.isCurrent && css`\n    `\n  }\n\n  ${props => props.isCorrect && css`\n    color: #888; /* Use a variable */`\n  }\n`\n\nconst StyledLetter = styled.span`\n  ${props => props.entered && css`\n    color: #888; /* Use a variable */`\n  }\n\n  ${props => props.isIncorrect && css`\n    color: red;`\n  }\n`\n\nconst Row = (props) => {\n  let rowClasses = props.first ? 'row first-row animate' : 'row';\n  return (\n    <StyledRow caretOffset={props.caretOffset} className={rowClasses}>\n      {props.children}\n    </StyledRow>\n  );\n}\n\nconst Word = (props) => {\n  return (\n    <StyledWord isCurrent={props.isCurrent} isCorrect={props.isCorrect} className=\"word\">\n      {props.children}\n    </StyledWord>\n  );\n}\n\nconst Letter = (props) => {\n  return (\n    <StyledLetter entered={props.entered} isIncorrect={props.isIncorrect} className=\"letter\">\n      {props.children}\n    </StyledLetter>\n  );\n}\n\n/**\n* Text component displays test's words on screen. Text is blurred when document loses focus.\n* Uses styled component Textwrapper. Uses components Row, Word, Letter.\n* Iterates through prop \"rows\" and prints its contents.\n*/\nconst Text = (props) => {\n\n  const [rowArr, setRowArr] = useState(props.rows);\n\n  // Restart caret animation when key is pressed.\n  const restartCaretAnimation = () => {\n    let rowElem = document.querySelector('.first-row');\n    rowElem.classList.remove('animate');\n    // Trigger reflow to allow animation to restart.\n    void rowElem.offsetHeight;\n    rowElem.classList.add('animate');\n  }\n\n  useEffect(() => {\n    setRowArr(props.rows);\n\n    const handleKeypress = () => {\n      restartCaretAnimation();\n    };\n    window.addEventListener('keypress', handleKeypress);\n\n    // Separate Keyup listener because keypress doesn't detect backspace.\n    const handleKeyup = (e) => {\n      if (e.key === 'Backspace') {\n        restartCaretAnimation();\n      }\n    };\n    window.addEventListener('keyup', handleKeyup);\n\n    return () => {\n      window.removeEventListener('keypress', handleKeypress);\n      window.removeEventListener('keyup', handleKeyup);\n    };\n  }, [props.rows, props.inputValue]);\n\n  return (\n    <TextWrapper focused={props.focused}>\n      {rowArr.map((row, rowInd) => {\n        return (\n          <Row\n            key={rowInd}\n            // caretOffset positions caret on top row.\n            caretOffset={props.caretOffset}\n            first={rowInd === 0}\n          >\n            {row.map((word, wordInd) => {\n              return (\n                <Word\n                  key={wordInd}\n                  isCurrent={rowInd === 0 && wordInd === props.currentWordInd}\n                  isCorrect={rowInd === 0 && props.currentWordInd > wordInd}\n                >\n                  {word.map((letter, letterInd) => {\n                    return (\n                      <Letter\n                        key={letterInd}\n                        // Highlight that letter has been input\n                        entered={\n                          rowInd === 0 &&\n                          props.inputValue.length > letterInd &&\n                          wordInd === props.currentWordInd\n                        }\n                        // Highlights incorrectly input letter\n                        isIncorrect={\n                          props.currentWord[letterInd] !== props.inputValue[letterInd] && // Match letter\n                          rowInd === 0 &&\n                          wordInd === props.currentWordInd && // Check only currentWord\n                          props.inputValue.length > letterInd // Don't check letters not yet input\n                        }\n                      >\n                        {letter}\n                      </Letter>\n                    );\n                  })}\n                &nbsp;</Word>\n              );\n            })}\n          </Row>\n        );\n      })}\n    </TextWrapper>        \n  );\n}\n\n// Does this work just like this?\nexport default React.memo(Text);","/**\n * TYPE TEST TIME CONTROLS COMPONENT\n * Control panel for changing the test's duration\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\n\nconst StyledButton = styled.button`\n\n`\n\nconst StyledTimeControls = styled.div`\n  opacity: ${props => props.playing ? '0' : '1'};\n  transition: opacity 0.2s ease; // EHHHHHHHHHHH\n  \n  & button + button {\n    margin-left: 0.5rem;\n  }\n`\n\nconst Button = (props) => {\n\n  const handleClick = (duration) => {\n    props.setTestDuration(duration);\n  }\n\n  return (\n    <StyledButton onClick={() => handleClick(props.duration)}>\n      {props.children}\n    </StyledButton>\n  );\n}\n\nconst TimeControls = (props) => {\n\n  const durationOptions = [\n    g.TEST_DURATION_SHORT,\n    g.TEST_DURATION_MEDIUM,\n    g.TEST_DURATION_LONG,\n  ];\n\n  return (\n    <StyledTimeControls playing={props.playing}>\n      {durationOptions.map((option, key) => {\n        return (\n          <Button\n            setTestDuration={props.setTestDuration}\n            duration={option}\n            key={key}\n          >\n            {option}\n          </Button>\n        );\n      })}\n    </StyledTimeControls>\n  );\n}\n\nexport default TimeControls;","/**\n * TYPE TEST MAIN COMPONENT\n */\n\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport words from '../../assets/game/words.js';\nimport Input from './input.js';\nimport TestTimer from './test-countdown.js';\nimport Text from './text.js';\nimport TimeControls from './test-time-controls.js';\n\nconst TypeTestWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  margin: 0 auto;\n  font-family: 'Roboto Mono', monospace;\n  color: #fff;\n  font-size: 1.5rem;\n  margin-top: 200px; /* temp positioning */\n\n  @media ${g.medium} {\n    width: 90vw;\n  }\n\n  @media ${g.large} {\n    width: 70vw;\n  }\n`\n\nconst TypeTest = () => {  \n\n  // Retrieve a random word from array of words, return array of letters\n  const getWord = (words) => {\n    return words[Math.floor(Math.random() * words.length)].split('');\n  }\n\n  // Load a row (array) of words\n  const loadRow = (wordArr) => {\n    let rowArr = [];\n  \n    while (rowArr.length < g.WORDS_PER_ROW) {\n      let word = getWord(wordArr);\n      // Check that word hasn't already been chosen for current row.\n      // THIS PROBABLY DOES NOT WORK\n      // TODO \"IMPROVE\" (FIX)\n      if (rowArr.indexOf(word) === -1) {\n        rowArr.push(word);\n      }\n    }\n    return rowArr;\n  };\n\n  // Load and return an array of rows of words\n  const loadRows = (wordArr) => {\n    return Array.from(Array(g.ROW_COUNT)).map((_) => {\n      return loadRow(wordArr);\n    });\n  };\n\n  // Playing state\n  const [playing, setPlaying] = useState(false);\n\n  /**\n   * Stores selected test duration, get default from global settings.\n   */\n  const [testDuration, setTestDuration] = useState(g.DEFAULT_TEST_DURATION);\n\n  /**\n   * Track time left\n   */\n  const [timeLeft, setTimeLeft] = useState(testDuration);\n\n  /**\n   * Keep track of currentWord.\n   * Input is compared with currentWord to progress in test.\n   * Resets after full row has been matched.\n   */\n  const [currentWordInd, setCurrentWordInd] = useState(0);\n\n  // Track progress on row for caret positioning.\n  const [rowProgress, setRowProgress] = useState(0);\n\n  /**\n   * Array of rows. Each row consists of arrays of words.\n   * Each word is an array of letters.\n   */ \n  const [textRows, setTextRows] = useState(loadRows(words));\n\n  /**\n   * Update TextRows state.\n   * Remove row from front of array, load a new row and push it onto array.\n   */\n  function updateTextRows() {\n    let tempArr = textRows;\n    tempArr.shift();\n    tempArr.push(loadRow(words));\n    setTextRows(tempArr);\n    setRowProgress(0);\n  }\n\n  // Keep track of whether document (or any element inside it) is focused\n  const [documentFocused, setDocumentFocus] = useState(false);\n\n  const [inputValue, setInputValue] = useState('');\n\n  // Compare array word with str from text-input\n  const checkFullWord = (word, input) => {\n    return word.join('') === input;\n  }\n\n  /**\n   * Handle currentWord.\n   * Increases currentWord and resets it if it reaches global WORDS_PER_ROW constant.\n   */\n  const updateCurrentWordInd = () => {\n    if (currentWordInd === (g.WORDS_PER_ROW - 1)) {\n      updateTextRows();\n    }\n    setCurrentWordInd((currentWordInd) => (currentWordInd + 1) % g.WORDS_PER_ROW);\n  }\n\n  /**\n   * End test when timer expires or escape is pressed.\n   * Stops test, clears input, resets currentWord,\n   * loads a new set of rows of words and rewinds caret.\n   */  \n  const endTest = () => {\n    setPlaying(false);\n    setInputValue('');\n    setCurrentWordInd(0);\n    setTextRows(loadRows(words));\n    setRowProgress(0);\n    setTimeLeft(testDuration);\n  }\n\n  useEffect(() => {\n\n    // Check page focus\n    setInterval(() => {\n      setDocumentFocus(document.hasFocus());\n    }, g.FOCUS_CHECK_INTERVAL);\n\n    // Start test on detecting letters being input\n    const handleKeypress = (e) => {\n      if (playing === false) {\n        if (/[a-z|A-Z]/g.test(e.key) && e.key !== 'Enter') {\n          setPlaying(true);\n          setTimeLeft((timeLeft) => (timeLeft - 1));   \n        }\n      }\n\n      // Detect spacebar press\n      if (e.key === ' ') {\n        // Check if input matches currentWord\n        if (checkFullWord(textRows[0][currentWordInd], inputValue)) {\n          setRowProgress((rowProgress) => (rowProgress + textRows[0][currentWordInd].length) + 1);\n          updateCurrentWordInd();\n          setInputValue('');\n        }\n      }\n    };\n    window.addEventListener('keypress', handleKeypress);\n\n    // Keyup listener needed because 'keypress' doesn't detect Escape\n    const handleKeyup = (e) => {\n      if (e.key === 'Escape') {\n        endTest();\n      }\n    };\n    window.addEventListener('keyup', handleKeyup);\n    \n    return () => {\n      window.removeEventListener('keypress', handleKeypress);\n      window.removeEventListener('keyup', handleKeyup);\n    };\n  }, [loadRows, textRows]);\n\n  // Timer for test duration.\n  useEffect(() => {\n    let timerInterval;\n    if (playing === true) {\n      timerInterval = setInterval(() => setTimeLeft((timeLeft) => (timeLeft - 1)), 1000);\n    }\n\n    return () => {\n      clearInterval(timerInterval);\n    }\n  }, [playing]);\n\n  // End test when timer reaches zero.\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      endTest();\n    }\n  }, [timeLeft, endTest]);\n\n  useEffect(() => {\n    setTimeLeft(testDuration);\n  }, [testDuration]);\n\n  return(\n    <TypeTestWrapper focused={documentFocused}>\n      <TestTimer timeLeft={timeLeft}/>\n      <Text \n        focused={documentFocused}\n        currentWord={textRows[0][currentWordInd]}\n        currentWordInd={currentWordInd}\n        rows={textRows}\n        playing={playing}\n        inputValue={inputValue}\n        caretOffset={rowProgress + inputValue.length}\n        />\n      <Input\n        currentWord={textRows[0][currentWordInd]}\n        playing={playing}\n        focused={documentFocused}\n        checkWord={checkFullWord}\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n        updateCurrentWord={updateCurrentWordInd}\n      />\n      <div>{playing ? 'playing' : 'not playing'}</div>\n      <TimeControls\n        setTestDuration={setTestDuration}\n        playing={playing}\n      />\n    </TypeTestWrapper>\n  );\n}\n\nexport default TypeTest;\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport TypeTest from '../game/game.js';\n\n\nconst Main = styled.main`\n\theight: 100%;\n\twidth: 100%;\n\tposition: fixed;\n\t/* padding: var(--default-padding); */\n\tbackground-color: ${g.bgcolor}; /* ??? */\n`\n\nconst App = () => {\n\n\tuseEffect(() => {\n\t\t// Only show focus outline when using keyboard.\n\t\tdocument.body.addEventListener('mousedown', function() {\n\t\t\tdocument.body.classList.add('no-outline');\n\t\t});\n\n\t\tdocument.body.addEventListener('keydown', function(event) {\n\t\t\tif (event.key === 'Tab') {\n\t\t\t\tdocument.body.classList.remove('no-outline');\n\t\t\t}\n\t\t});\n\t});\n\n\treturn(\n\t\t<>\n\t\t\t<Main>\n\t\t\t\t<TypeTest />\n\t\t\t</Main>\n\t\t</>\n\t);\n\n} \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app.js';\nimport {GlobalStyle} from './globals.js';\nimport reportWebVitals from './reportWebVitals';\nimport '../src/assets/fonts/fonts.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}