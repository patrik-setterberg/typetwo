{"version":3,"sources":["globals.js","assets/game/words.js","themes.js","components/game/test-instructions.js","components/ui/control-panel-toggler.js","components/game/test-time-controls.js","components/ui/toggle-switch.js","components/ui/keyboard-controls.js","components/ui/theme-controls.js","components/ui/control-panel.js","components/ui/header.js","components/game/input.js","components/game/test-countdown.js","components/game/text.js","utilities.js","components/game/onscreen-keyboard.js","components/game/type-test.js","components/game/score-screen.js","components/game/type-test-handler.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["LAYOUTS","DVORAK_US","LAYOUT","CONTROL_PANEL_HOTKEY","QWERTY_US","QWERTY_SE","QWERTZ_DE","AZERTY_FR","largestMedium","g","small","medium","largestSmall","atMostMedium","atleastMedium","large","TEST_WORD_COUNT","TEST_LENGTH_SHORT","TEST_LENGTH_MEDIUM","TEST_LENGTH_LONG","TEST_LENGTH_DEFAULT","FOCUS_CHECK_INTERVAL","RESIZE_CHECK_INTERVAL","SCORE_COOKIE_NAME","TIMESTAMP_COOKIE_NAME","COOKIE_MAX_AGE","KEYBOARD_DEFAULT_LAYOUT","KEYBOARD_DEFAULT_VISIBILITY","KEYBOARD_HIGHLIGHT_DURATION","GlobalStyle","createGlobalStyle","themeSettings","words","themes","dark","primary","highlight","backgroundPrimary","backgroundSecondary","backgroundTertiary","light","InstructionsContainer","styled","div","StyledInstructions","span","props","theme","playing","focused","controlPanelOpen","css","TestInstructions","testConcluded","Wrapper","Gears","button","isOpen","GearToggler","onClick","setControlPanelOpen","className","viewBox","xmlns","fillRule","clipRule","d","StyledButton","selectedOption","StyledTimeControls","Button","setTestLength","testLengthOption","children","TimeControls","testLengthOptions","map","option","key","testLength","Input","input","Label","label","text","length","ToggleSwitch","Id","defaultChecked","onChangeFunc","type","id","onChange","e","isChecked","target","checked","htmlFor","KeyboardToggler","KeyboardControlsContainer","KeyboardControls","keyboardVisible","setKeyboardVisible","ThemeControlsContainer","StyledThemeButton","themeOption","isCurrent","ThemeButton","setTheme","ThemeControls","themeNames","Object","keys","currentTheme","StyledControlPanel","ControlPanel","currentLayout","setCurrentLayout","StyledHeader","header","Header","documentIsFocused","StyledInput","textInput","useRef","useEffect","focusTimer","setInterval","current","clearInterval","focus","autoComplete","value","inputValue","onKeyDown","test","setPlaying","endTest","code","setShiftPressedRecently","setLeftShiftPressed","setRightShiftPressed","handleSpace","updateTypedRecently","flashSpacePressedRecently","setLastKey","handleKeyDown","onKeyUp","includes","setCaretPosition","selectionStart","handleKeyUp","onInput","nativeEvent","data","maxLen","replace","substring","filterInput","currentWord","setInputValue","handleInput","aria-label","ref","onBlur","TimerWrapper","Numbers","TestTimer","timeLeft","width","height","x","TextWrapper","StyledWord","isCorrect","StyledLetter","entered","wordIsCorrect","isIncorrect","wordIncorrect","StyledCaret","currentWordLeft","currentWordTop","typedRecently","Caret","Word","wordsRef","rest","Letter","Text","slice","testWords","useState","window","innerWidth","windowWidth","setWindowWidth","debouncedHandleResize","callback","interval","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","setCurrentWordLeft","setCurrentWordTop","currentWordInd","offsetLeft","offsetTop","prevElem","previousElementSibling","smallestOffsetTop","removeWordsCount","setWordShiftCount","word","wordInd","elem","letter","letterInd","caretPosition","style","transform","React","memo","Key","highlightPressedAccurate","highlightAccurate","highlightPressedInaccurate","highlightSpacePressed","Row","iso","leftShiftPressed","leftShiftPressedInaccurate","shiftAccurate","rightShiftPressed","shiftPressedRecently","rightShiftPressedInaccurate","StyledKeyboard","Keyboard","highlightedAccuratePressed","setHighlightedAccuratePressed","highlightedInaccuratePressed","setHighlightedInaccuratePressed","highlightedAccurate","setHighlightedAccurate","wasEndOfWord","setWasEndOfWord","endOfWord","lastKey","correctKey","spacePressedRecently","concat","toLowerCase","undefined","nextKey","inputLength","row","rowInd","toUpperCase","keySymbol","keyInd","indexOf","StyledTypeTest","TypeTest","setTimeLeft","setCurrentWordInd","setWordIncorrect","correctWordsCount","setCorrectWordsCount","setTypedRecently","setSpacePressedRecently","setTestWords","loadWords","wordShiftCount","count","shiftWords","addWords","timerInterval","calcTestScore","setTestConcluded","join","currentWordLength","StyledScoreScreen","highestScore","testScore","ScoreScreen","handleKeypress","preventDefault","TypeTestWrapper","TypeTestHandler","document","hasFocus","setDocumentIsFocused","handleBlur","useCallback","handleFocus","event","body","classList","remove","getWord","Math","floor","random","Array","from","testWord","split","cookie","some","item","trim","startsWith","find","setHighestScore","setTestScore","Date","now","correctWordCount","newWords","i","push","Main","main","App","setCurrentTheme","handleMouseDown","add","usedWords","wordArr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4kCAGA,IAAMA,EAAU,CACdC,UAAW,CACTC,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAE/DC,qBAAsB,WAExBC,UAAW,CACTF,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAE/DC,qBAAsB,KAExBE,UAAW,CACTH,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,OAAK,KACxD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAEpEC,qBAAsB,QAExBG,UAAW,CACTJ,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,OAAK,KACxD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAEpEC,qBAAsB,WAExBI,UAAW,CACTL,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAK,KACxD,CAAC,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAEpEC,qBAAsB,YAUpBK,EAAgB,KAOhBC,EAAI,CAGRC,MAAM,+BAAD,OAXc,IAWd,OACLC,OAAO,+BAAD,OAAiCC,IAAjC,+BAAsEJ,EAAtE,OACNK,aAAa,+BAAD,OAAiCL,EAAjC,OACZM,cAAc,+BAAD,OAAiCF,IAAjC,OACbG,MAAM,+BAAD,OAAiCP,KAAjC,OAGLQ,gBAAiB,GAGjBC,kBAAmB,GACnBC,mBAAoB,GACpBC,iBAAkB,GAElBC,oBAAqB,GAGrBC,qBAAsB,GAEtBC,sBAAuB,GAGvBC,kBAAmB,gBACnBC,sBAAuB,OACvBC,eAAgB,OAEhBC,wBAAyB,YACzBC,6BAA6B,EAC7BC,4BAA6B,KAGhBnB,IAEToB,EAAcC,YAAH,IAuCNrB,EAAEM,OA4BPgB,EACW,OCw0BFC,EAz+BD,CACZ,UACA,OACA,QACA,QACA,SACA,YACA,UACA,SACA,MACA,SACA,WACA,WACA,MACA,UACA,iBACA,QACA,QACA,SACA,QACA,QACA,UACA,MACA,SACA,QACA,MACA,QACA,YACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,UACA,OACA,WACA,SACA,WACA,QACA,SACA,WACA,MACA,SACA,UACA,SACA,MACA,SACA,WACA,SACA,QACA,WACA,OACA,QACA,MACA,SACA,SACA,MACA,UACA,SACA,KACA,MACA,SACA,KACA,SACA,YACA,WACA,WACA,SACA,YACA,YACA,QACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,KACA,OACA,YACA,UACA,SACA,MACA,SACA,QACA,WACA,SACA,UACA,UACA,OACA,SACA,UACA,SACA,MACA,OACA,UACA,MACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,WACA,MACA,MACA,KACA,OACA,SACA,WACA,MACA,SACA,YACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,MACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,YACA,QACA,YACA,SACA,SACA,YACA,SACA,QACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,aACA,UACA,QACA,OACA,aACA,SACA,YACA,UACA,UACA,WACA,UACA,YACA,aACA,WACA,WACA,WACA,UACA,WACA,UACA,OACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,WACA,UACA,MACA,UACA,WACA,MACA,OACA,OACA,WACA,MACA,OACA,OACA,QACA,SACA,SACA,SACA,WACA,OACA,UACA,SACA,WACA,aACA,WACA,SACA,UACA,SACA,YACA,UACA,cACA,MACA,aACA,YACA,YACA,SACA,YACA,WACA,WACA,UACA,aACA,UACA,KACA,SACA,MACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,MACA,WACA,UACA,OACA,YACA,SACA,SACA,QACA,SACA,WACA,OACA,WACA,MACA,SACA,QACA,SACA,QACA,SACA,cACA,gBACA,aACA,YACA,OACA,UACA,QACA,OACA,QACA,YACA,WACA,aACA,WACA,UACA,UACA,YACA,QACA,SACA,aACA,SACA,UACA,MACA,OACA,OACA,SACA,OACA,OACA,SACA,MACA,OACA,SACA,OACA,UACA,OACA,UACA,MACA,QACA,QACA,SACA,OACA,OACA,QACA,UACA,YACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,QACA,SACA,OACA,OACA,MACA,QACA,UACA,SACA,OACA,SACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,MACA,UACA,aACA,MACA,OACA,OACA,QACA,KACA,OACA,OACA,aACA,QACA,QACA,SACA,QACA,OACA,SACA,QACA,MACA,MACA,OACA,OACA,YACA,OACA,OACA,SACA,QACA,OACA,OACA,KACA,OACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,OACA,UACA,OACA,MACA,UACA,MACA,UACA,MACA,OACA,OACA,OACA,WACA,MACA,QACA,OACA,QACA,MACA,UACA,OACA,QACA,UACA,UACA,OACA,WACA,KACA,QACA,UACA,SACA,YACA,UACA,KACA,UACA,YACA,WACA,SACA,WACA,aACA,WACA,cACA,SACA,UACA,cACA,WACA,cACA,gBACA,YACA,OACA,aACA,UACA,QACA,KACA,OACA,MACA,SACA,MACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,UACA,OACA,YACA,OACA,WACA,QACA,OACA,OACA,QACA,QACA,MACA,SACA,MACA,OACA,SACA,QACA,QACA,QACA,OACA,MACA,QACA,OACA,MACA,SACA,QACA,MACA,OACA,QACA,OACA,SACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,MACA,UACA,WACA,OACA,WACA,QACA,WACA,OACA,MACA,SACA,aACA,UACA,OACA,SACA,WACA,WACA,SACA,MACA,QACA,KACA,OACA,UACA,QACA,UACA,OACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,QACA,WACA,UACA,OACA,SACA,OACA,UACA,QACA,SACA,SACA,QACA,QACA,OACA,UACA,OACA,SACA,QACA,OACA,WACA,QACA,KACA,MACA,OACA,QACA,OACA,KACA,SACA,OACA,SACA,WACA,UACA,SACA,OACA,SACA,YACA,OACA,UACA,QACA,MACA,OACA,YACA,OACA,OACA,QACA,KACA,OACA,MACA,QACA,MACA,OACA,UACA,SACA,MACA,SACA,QACA,KACA,MACA,QACA,SACA,UACA,WACA,QACA,KACA,MACA,KACA,MACA,KACA,OACA,MACA,OACA,OACA,OACA,YACA,cACA,SACA,KACA,QACA,eACA,QACA,SACA,MACA,MACA,UACA,OACA,MACA,QACA,OACA,OACA,WACA,QACA,SACA,OACA,cACA,aACA,eACA,UACA,QACA,OACA,OACA,UACA,UACA,MACA,QACA,SACA,MACA,UACA,cACA,UACA,SACA,SACA,WACA,QACA,WACA,OACA,UACA,QACA,QACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,YACA,WACA,OACA,UACA,aACA,WACA,WACA,WACA,QACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,aACA,eACA,YACA,UACA,UACA,WACA,UACA,QACA,UACA,SACA,OACA,UACA,OACA,MACA,UACA,WACA,UACA,QACA,OACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,YACA,SACA,MACA,SACA,UACA,SACA,SACA,eACA,YACA,SACA,WACA,SACA,SACA,YACA,aACA,UACA,WACA,WACA,UACA,WACA,iBACA,OACA,SACA,SACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,QACA,SACA,UACA,YACA,QACA,MACA,SACA,OACA,SACA,UACA,WACA,MACA,OACA,OACA,OACA,OACA,SACA,QACA,SACA,UACA,QACA,UACA,MACA,QACA,UACA,MACA,SACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,WACA,OACA,OACA,OACA,cACA,UACA,SACA,SACA,QACA,OACA,SACA,SACA,MACA,OACA,YACA,MACA,OACA,QACA,OACA,QACA,QACA,KACA,SACA,UACA,UACA,OACA,WACA,UACA,YACA,YACA,MACA,OACA,OACA,OACA,QACA,SACA,QACA,WACA,QACA,QACA,UACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,OACA,QACA,QACA,YACA,UACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,WACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,UACA,aACA,OACA,WACA,SACA,UACA,SACA,UACA,OACA,UACA,SACA,QACA,OACA,OACA,OACA,MACA,QACA,UACA,OACA,aACA,aACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,QACA,OACA,aACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,WACA,SACA,QACA,UACA,aACA,QACA,OACA,OACA,KACA,QACA,WACA,UACA,MACA,MACA,QACA,QACA,SACA,OACA,QACA,cACA,WACA,SACA,QACA,YACA,OACA,QACA,OACA,UACA,OACA,QACA,MACA,OACA,KACA,MACA,OACA,QACA,aACA,OACA,QACA,KACA,OACA,KACA,MACA,UACA,QACA,UACA,OACA,SACA,OACA,WACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,QACA,MACA,KACA,SACA,OACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,QACA,UACA,QACA,QACA,QACA,MACA,QACA,OACA,QACA,MACA,OACA,OACA,OACA,MACA,OACA,SACA,OACA,OACA,SACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,QACA,OACA,YCj9BaC,EAhBA,CACdC,KAAM,CACLC,QAAS,UACTC,UAAW,UACXC,kBAAmB,UACnBC,oBAAqB,UACrBC,mBAAoB,QAGrBC,MAAO,CACNL,QAAS,OACTC,UAAW,aACXC,kBAAmB,Y,ooBCfrB,IAAMI,EAAwBC,IAAOC,IAAV,KAOrBC,EAAqBF,IAAOG,KAAV,KAEb,SAAAC,GAAK,OAAIA,EAAMC,MAAMX,aAO5B,SAAAU,GAAK,OAAIA,EAAME,SAAWF,EAAMG,UAAYH,EAAMI,kBAAoBC,YAA7D,OAKF1C,EAAEK,eA8BEsC,EAzBU,SAACN,GACxB,OACE,cAACL,EAAD,UACE,cAACG,EAAD,CACEI,QAASF,EAAME,QACfC,QAASH,EAAMG,QACfC,iBAAkBJ,EAAMI,iBAH1B,SAKGJ,EAAMG,QACJH,EAAME,QACJF,EAAMI,iBAAmB,iCAAmC,qBAC5DJ,EAAMI,iBAAmB,wCACvBJ,EAAMO,cAAgB,gCAAkC,6BAG1DP,EAAME,QACNF,EAAMI,iBAAmB,iCAAmC,mCAC5DJ,EAAM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","file":"static/js/main.0a21b916.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components';\n\n// Supported keyboard layouts.\nconst LAYOUTS = {\n  DVORAK_US: {\n    LAYOUT: [\n      [\"'\", ',', '.', 'p', 'y', 'f', 'g', 'c', 'r', 'l', '/', '='],\n      ['a', 'o', 'e', 'u', 'i', 'd', 'h', 't', 'n', 's', '-'],\n      ['\\u21e7', ';', 'q', 'j', 'k', 'x', 'b', 'm', 'w', 'v', 'z', '\\u21e7'],\n    ],\n    CONTROL_PANEL_HOTKEY: 'UNKNOWN',\n  },\n  QWERTY_US: {\n    LAYOUT: [\n      ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']'],\n      ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', \"'\"],\n      ['\\u21e7', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '\\u21e7'],\n    ],\n    CONTROL_PANEL_HOTKEY: '`',\n  },\n  QWERTY_SE: {\n    LAYOUT: [\n      ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'å', '\"'],\n      ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ö', 'ä', \"'\"],\n      ['\\u21e7', '<', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '-', '\\u21e7'],\n    ],\n    CONTROL_PANEL_HOTKEY: '§',\n  },\n  QWERTZ_DE: {\n    LAYOUT: [\n      ['q', 'w', 'e', 'r', 't', 'z', 'u', 'i', 'o', 'p', 'ü', '+'],\n      ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ö', 'ä', '#'],\n      ['\\u21e7', '<', 'y', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '-', '\\u21e7'],\n    ],\n    CONTROL_PANEL_HOTKEY: 'UNKNOWN',\n  },\n  AZERTY_FR: {\n    LAYOUT: [\n      ['a', 'z', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '^', '$'],\n      ['q', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'ù', '*'],\n      ['\\u21e7', '<', 'w', 'x', 'c', 'v', 'b', 'n', ',', ';', ':', '!', '\\u21e7'],\n    ],\n    CONTROL_PANEL_HOTKEY: 'UNKNOWN',\n  },\n};\n\nexport {LAYOUTS};\n\n/**\n * MEDIA BREAKPOINT VARS TWEAK HERE\n */\nconst largestSmall = 767; // px\nconst largestMedium = 1299; // px\n\nexport {largestMedium};\n\n/**\n * GLOBAL VARS\n */\nconst g = {\n\n  // Media breakpoints\n  small: `only screen and (max-width: ${largestSmall}px)`,\n  medium: `only screen and (min-width: ${largestSmall+1}px) and (max-width: ${largestMedium}px)`,\n  atMostMedium: `only screen and (max-width: ${largestMedium}px)`,\n  atleastMedium: `only screen and (min-width: ${largestSmall+1}px)`,\n  large: `only screen and (min-width: ${largestMedium+1}px)`,\n\n  // Number of test words displayed on screen\n  TEST_WORD_COUNT: 32,\n\n  // TEST DURATION OPTIONS (in seconds)\n  TEST_LENGTH_SHORT: 15,\n  TEST_LENGTH_MEDIUM: 30,\n  TEST_LENGTH_LONG: 60,\n\n  TEST_LENGTH_DEFAULT: 30,\n\n  // Set how often component checks if document is focused\n  FOCUS_CHECK_INTERVAL: 66,\n\n  RESIZE_CHECK_INTERVAL: 50,\n\n  // COOKIE SETTINGS\n  SCORE_COOKIE_NAME: 'highest_score',\n  TIMESTAMP_COOKIE_NAME: 'time',\n  COOKIE_MAX_AGE: 2592000, // 60*60*24*30 = 30 days\n\n  KEYBOARD_DEFAULT_LAYOUT: 'QWERTY_SE',\n  KEYBOARD_DEFAULT_VISIBILITY: true,\n  KEYBOARD_HIGHLIGHT_DURATION: 160,\n}\n\nexport default g;\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --font-main: 'Roboto mono', 'monospace';\n    --default-padding: 1.5rem;\n    \n    --default-timing: cubic-bezier(0.78, 0.2, 0.05, 1.0);\n\n    --caret-opacity: 0.7;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n    box-sizing: border-box;\n  }\n\n  body {\n    \n  }\n  \n  body.no-outline:focus,\n  body.no-outline *:focus ~ * {\n    outline: none !important;\n  }\n\n  *:active,\n  *:active ~ * {\n    outline: none;\n  }\n\n  #root {\n    \n  }\n\n  @media ${g.large} {\n    :root {\n      --default-padding: 2rem;\n    }\n  }\n\n  /* ANIMATIONS */\n  @keyframes caret-blink {\n    from {\n      opacity: var(---caret-opacity);\n    }\n\n    47% {\n      opacity: var(---caret-opacity);\n    }\n\n    53% {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n`\n\nexport {GlobalStyle};\n\nconst themeSettings = {\n  DEFAULT_THEME: 'dark',\n}\n\nexport {themeSettings};","// (Around) 1000 common words in English\n// adapted from https://www.ef.com/wwen/english-resources/english-vocabulary/top-1000-words/\nconst words = [\n  \"ability\",\n  \"able\",\n  \"about\",\n  \"above\",\n  \"accept\",\n  \"according\",\n  \"account\",\n  \"across\",\n  \"act\",\n  \"action\",\n  \"activity\",\n  \"actually\",\n  \"add\",\n  \"address\",\n  \"administration\",\n  \"admit\",\n  \"adult\",\n  \"affect\",\n  \"after\",\n  \"again\",\n  \"against\",\n  \"age\",\n  \"agency\",\n  \"agent\",\n  \"ago\",\n  \"agree\",\n  \"agreement\",\n  \"ahead\",\n  \"air\",\n  \"all\",\n  \"allow\",\n  \"almost\",\n  \"alone\",\n  \"along\",\n  \"already\",\n  \"also\",\n  \"although\",\n  \"always\",\n  \"American\",\n  \"among\",\n  \"amount\",\n  \"analysis\",\n  \"and\",\n  \"animal\",\n  \"another\",\n  \"answer\",\n  \"any\",\n  \"anyone\",\n  \"anything\",\n  \"appear\",\n  \"apply\",\n  \"approach\",\n  \"area\",\n  \"argue\",\n  \"arm\",\n  \"around\",\n  \"arrive\",\n  \"art\",\n  \"article\",\n  \"artist\",\n  \"as\",\n  \"ask\",\n  \"assume\",\n  \"at\",\n  \"attack\",\n  \"attention\",\n  \"attorney\",\n  \"audience\",\n  \"author\",\n  \"authority\",\n  \"available\",\n  \"avoid\",\n  \"away\",\n  \"baby\",\n  \"back\",\n  \"bad\",\n  \"bag\",\n  \"ball\",\n  \"bank\",\n  \"bar\",\n  \"base\",\n  \"be\",\n  \"beat\",\n  \"beautiful\",\n  \"because\",\n  \"become\",\n  \"bed\",\n  \"before\",\n  \"begin\",\n  \"behavior\",\n  \"behind\",\n  \"believe\",\n  \"benefit\",\n  \"best\",\n  \"better\",\n  \"between\",\n  \"beyond\",\n  \"big\",\n  \"bill\",\n  \"billion\",\n  \"bit\",\n  \"black\",\n  \"blood\",\n  \"blue\",\n  \"board\",\n  \"body\",\n  \"book\",\n  \"born\",\n  \"both\",\n  \"box\",\n  \"boy\",\n  \"break\",\n  \"bring\",\n  \"brother\",\n  \"budget\",\n  \"build\",\n  \"building\",\n  \"business\",\n  \"but\",\n  \"buy\",\n  \"by\",\n  \"call\",\n  \"camera\",\n  \"campaign\",\n  \"can\",\n  \"cancer\",\n  \"candidate\",\n  \"capital\",\n  \"car\",\n  \"card\",\n  \"care\",\n  \"career\",\n  \"carry\",\n  \"case\",\n  \"cat\",\n  \"catch\",\n  \"cause\",\n  \"cell\",\n  \"center\",\n  \"central\",\n  \"century\",\n  \"certain\",\n  \"certainly\",\n  \"chair\",\n  \"challenge\",\n  \"chance\",\n  \"change\",\n  \"character\",\n  \"charge\",\n  \"check\",\n  \"child\",\n  \"choice\",\n  \"choose\",\n  \"church\",\n  \"citizen\",\n  \"city\",\n  \"civil\",\n  \"claim\",\n  \"class\",\n  \"clear\",\n  \"clearly\",\n  \"close\",\n  \"coach\",\n  \"cold\",\n  \"collection\",\n  \"college\",\n  \"color\",\n  \"come\",\n  \"commercial\",\n  \"common\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"concern\",\n  \"condition\",\n  \"conference\",\n  \"Congress\",\n  \"consider\",\n  \"consumer\",\n  \"contain\",\n  \"continue\",\n  \"control\",\n  \"cost\",\n  \"could\",\n  \"country\",\n  \"couple\",\n  \"course\",\n  \"court\",\n  \"cover\",\n  \"create\",\n  \"crime\",\n  \"cultural\",\n  \"culture\",\n  \"cup\",\n  \"current\",\n  \"customer\",\n  \"cut\",\n  \"dark\",\n  \"data\",\n  \"daughter\",\n  \"day\",\n  \"dead\",\n  \"deal\",\n  \"death\",\n  \"debate\",\n  \"decade\",\n  \"decide\",\n  \"decision\",\n  \"deep\",\n  \"defense\",\n  \"degree\",\n  \"Democrat\",\n  \"democratic\",\n  \"describe\",\n  \"design\",\n  \"despite\",\n  \"detail\",\n  \"determine\",\n  \"develop\",\n  \"development\",\n  \"die\",\n  \"difference\",\n  \"different\",\n  \"difficult\",\n  \"dinner\",\n  \"direction\",\n  \"director\",\n  \"discover\",\n  \"discuss\",\n  \"discussion\",\n  \"disease\",\n  \"do\",\n  \"doctor\",\n  \"dog\",\n  \"door\",\n  \"down\",\n  \"draw\",\n  \"dream\",\n  \"drive\",\n  \"drop\",\n  \"drug\",\n  \"during\",\n  \"each\",\n  \"early\",\n  \"east\",\n  \"easy\",\n  \"eat\",\n  \"economic\",\n  \"economy\",\n  \"edge\",\n  \"education\",\n  \"effect\",\n  \"effort\",\n  \"eight\",\n  \"either\",\n  \"election\",\n  \"else\",\n  \"employee\",\n  \"end\",\n  \"energy\",\n  \"enjoy\",\n  \"enough\",\n  \"enter\",\n  \"entire\",\n  \"environment\",\n  \"environmental\",\n  \"especially\",\n  \"establish\",\n  \"even\",\n  \"evening\",\n  \"event\",\n  \"ever\",\n  \"every\",\n  \"everybody\",\n  \"everyone\",\n  \"everything\",\n  \"evidence\",\n  \"exactly\",\n  \"example\",\n  \"executive\",\n  \"exist\",\n  \"expect\",\n  \"experience\",\n  \"expert\",\n  \"explain\",\n  \"eye\",\n  \"face\",\n  \"fact\",\n  \"factor\",\n  \"fail\",\n  \"fall\",\n  \"family\",\n  \"far\",\n  \"fast\",\n  \"father\",\n  \"fear\",\n  \"federal\",\n  \"feel\",\n  \"feeling\",\n  \"few\",\n  \"field\",\n  \"fight\",\n  \"figure\",\n  \"fill\",\n  \"film\",\n  \"final\",\n  \"finally\",\n  \"financial\",\n  \"find\",\n  \"fine\",\n  \"finger\",\n  \"finish\",\n  \"fire\",\n  \"firm\",\n  \"first\",\n  \"fish\",\n  \"five\",\n  \"floor\",\n  \"fly\",\n  \"focus\",\n  \"follow\",\n  \"food\",\n  \"foot\",\n  \"for\",\n  \"force\",\n  \"foreign\",\n  \"forget\",\n  \"form\",\n  \"former\",\n  \"forward\",\n  \"four\",\n  \"free\",\n  \"friend\",\n  \"from\",\n  \"front\",\n  \"full\",\n  \"fund\",\n  \"future\",\n  \"game\",\n  \"garden\",\n  \"gas\",\n  \"general\",\n  \"generation\",\n  \"get\",\n  \"girl\",\n  \"give\",\n  \"glass\",\n  \"go\",\n  \"goal\",\n  \"good\",\n  \"government\",\n  \"great\",\n  \"green\",\n  \"ground\",\n  \"group\",\n  \"grow\",\n  \"growth\",\n  \"guess\",\n  \"gun\",\n  \"guy\",\n  \"hair\",\n  \"half\",\n  \"hamburger\",\n  \"hand\",\n  \"hang\",\n  \"happen\",\n  \"happy\",\n  \"hard\",\n  \"have\",\n  \"he\",\n  \"head\",\n  \"health\",\n  \"hear\",\n  \"heart\",\n  \"heat\",\n  \"heavy\",\n  \"help\",\n  \"her\",\n  \"here\",\n  \"herself\",\n  \"high\",\n  \"him\",\n  \"himself\",\n  \"his\",\n  \"history\",\n  \"hit\",\n  \"hold\",\n  \"home\",\n  \"hope\",\n  \"hospital\",\n  \"hot\",\n  \"hotel\",\n  \"hour\",\n  \"house\",\n  \"how\",\n  \"however\",\n  \"huge\",\n  \"human\",\n  \"hundred\",\n  \"husband\",\n  \"idea\",\n  \"identify\",\n  \"if\",\n  \"image\",\n  \"imagine\",\n  \"impact\",\n  \"important\",\n  \"improve\",\n  \"in\",\n  \"include\",\n  \"including\",\n  \"increase\",\n  \"indeed\",\n  \"indicate\",\n  \"individual\",\n  \"industry\",\n  \"information\",\n  \"inside\",\n  \"instead\",\n  \"institution\",\n  \"interest\",\n  \"interesting\",\n  \"international\",\n  \"interview\",\n  \"into\",\n  \"investment\",\n  \"involve\",\n  \"issue\",\n  \"it\",\n  \"item\",\n  \"its\",\n  \"itself\",\n  \"job\",\n  \"join\",\n  \"just\",\n  \"keep\",\n  \"key\",\n  \"kid\",\n  \"kill\",\n  \"kind\",\n  \"kitchen\",\n  \"know\",\n  \"knowledge\",\n  \"land\",\n  \"language\",\n  \"large\",\n  \"last\",\n  \"late\",\n  \"later\",\n  \"laugh\",\n  \"law\",\n  \"lawyer\",\n  \"lay\",\n  \"lead\",\n  \"leader\",\n  \"learn\",\n  \"least\",\n  \"leave\",\n  \"left\",\n  \"leg\",\n  \"legal\",\n  \"less\",\n  \"let\",\n  \"letter\",\n  \"level\",\n  \"lie\",\n  \"life\",\n  \"light\",\n  \"like\",\n  \"likely\",\n  \"line\",\n  \"list\",\n  \"listen\",\n  \"little\",\n  \"live\",\n  \"local\",\n  \"long\",\n  \"look\",\n  \"lose\",\n  \"loss\",\n  \"lot\",\n  \"love\",\n  \"low\",\n  \"machine\",\n  \"magazine\",\n  \"main\",\n  \"maintain\",\n  \"major\",\n  \"majority\",\n  \"make\",\n  \"man\",\n  \"manage\",\n  \"management\",\n  \"manager\",\n  \"many\",\n  \"market\",\n  \"marriage\",\n  \"material\",\n  \"matter\",\n  \"may\",\n  \"maybe\",\n  \"me\",\n  \"mean\",\n  \"measure\",\n  \"media\",\n  \"medical\",\n  \"meet\",\n  \"meeting\",\n  \"member\",\n  \"memory\",\n  \"mention\",\n  \"message\",\n  \"method\",\n  \"middle\",\n  \"might\",\n  \"military\",\n  \"million\",\n  \"mind\",\n  \"minute\",\n  \"miss\",\n  \"mission\",\n  \"model\",\n  \"modern\",\n  \"moment\",\n  \"money\",\n  \"month\",\n  \"more\",\n  \"morning\",\n  \"most\",\n  \"mother\",\n  \"mouth\",\n  \"move\",\n  \"movement\",\n  \"movie\",\n  \"Mr\",\n  \"Mrs\",\n  \"much\",\n  \"music\",\n  \"must\",\n  \"my\",\n  \"myself\",\n  \"name\",\n  \"nation\",\n  \"national\",\n  \"natural\",\n  \"nature\",\n  \"near\",\n  \"nearly\",\n  \"necessary\",\n  \"need\",\n  \"network\",\n  \"never\",\n  \"new\",\n  \"news\",\n  \"newspaper\",\n  \"next\",\n  \"nice\",\n  \"night\",\n  \"no\",\n  \"none\",\n  \"nor\",\n  \"north\",\n  \"not\",\n  \"note\",\n  \"nothing\",\n  \"notice\",\n  \"now\",\n  \"number\",\n  \"occur\",\n  \"of\",\n  \"off\",\n  \"offer\",\n  \"office\",\n  \"officer\",\n  \"official\",\n  \"often\",\n  \"oh\",\n  \"oil\",\n  \"ok\",\n  \"old\",\n  \"on\",\n  \"once\",\n  \"one\",\n  \"only\",\n  \"onto\",\n  \"open\",\n  \"operation\",\n  \"opportunity\",\n  \"option\",\n  \"or\",\n  \"order\",\n  \"organization\",\n  \"other\",\n  \"others\",\n  \"our\",\n  \"out\",\n  \"outside\",\n  \"over\",\n  \"own\",\n  \"owner\",\n  \"page\",\n  \"pain\",\n  \"painting\",\n  \"paper\",\n  \"parent\",\n  \"part\",\n  \"participant\",\n  \"particular\",\n  \"particularly\",\n  \"partner\",\n  \"party\",\n  \"pass\",\n  \"past\",\n  \"patient\",\n  \"pattern\",\n  \"pay\",\n  \"peace\",\n  \"people\",\n  \"per\",\n  \"perform\",\n  \"performance\",\n  \"perhaps\",\n  \"period\",\n  \"person\",\n  \"personal\",\n  \"phone\",\n  \"physical\",\n  \"pick\",\n  \"picture\",\n  \"piece\",\n  \"place\",\n  \"plan\",\n  \"plant\",\n  \"play\",\n  \"player\",\n  \"point\",\n  \"police\",\n  \"policy\",\n  \"political\",\n  \"politics\",\n  \"poor\",\n  \"popular\",\n  \"population\",\n  \"position\",\n  \"positive\",\n  \"possible\",\n  \"power\",\n  \"practice\",\n  \"prepare\",\n  \"present\",\n  \"president\",\n  \"pressure\",\n  \"pretty\",\n  \"prevent\",\n  \"price\",\n  \"private\",\n  \"probably\",\n  \"problem\",\n  \"process\",\n  \"produce\",\n  \"product\",\n  \"production\",\n  \"professional\",\n  \"professor\",\n  \"program\",\n  \"project\",\n  \"property\",\n  \"protect\",\n  \"prove\",\n  \"provide\",\n  \"public\",\n  \"pull\",\n  \"purpose\",\n  \"push\",\n  \"put\",\n  \"quality\",\n  \"question\",\n  \"quickly\",\n  \"quite\",\n  \"race\",\n  \"radio\",\n  \"raise\",\n  \"range\",\n  \"rate\",\n  \"rather\",\n  \"reach\",\n  \"read\",\n  \"ready\",\n  \"real\",\n  \"reality\",\n  \"realize\",\n  \"really\",\n  \"reason\",\n  \"receive\",\n  \"recent\",\n  \"recently\",\n  \"recognize\",\n  \"record\",\n  \"red\",\n  \"reduce\",\n  \"reflect\",\n  \"region\",\n  \"relate\",\n  \"relationship\",\n  \"religious\",\n  \"remain\",\n  \"remember\",\n  \"remove\",\n  \"report\",\n  \"represent\",\n  \"Republican\",\n  \"require\",\n  \"research\",\n  \"resource\",\n  \"respond\",\n  \"response\",\n  \"responsibility\",\n  \"rest\",\n  \"result\",\n  \"return\",\n  \"reveal\",\n  \"rich\",\n  \"right\",\n  \"rise\",\n  \"risk\",\n  \"road\",\n  \"rock\",\n  \"role\",\n  \"room\",\n  \"rule\",\n  \"run\",\n  \"safe\",\n  \"same\",\n  \"save\",\n  \"say\",\n  \"scene\",\n  \"school\",\n  \"science\",\n  \"scientist\",\n  \"score\",\n  \"sea\",\n  \"season\",\n  \"seat\",\n  \"second\",\n  \"section\",\n  \"security\",\n  \"see\",\n  \"seek\",\n  \"seem\",\n  \"sell\",\n  \"send\",\n  \"senior\",\n  \"sense\",\n  \"series\",\n  \"serious\",\n  \"serve\",\n  \"service\",\n  \"set\",\n  \"seven\",\n  \"several\",\n  \"sex\",\n  \"sexual\",\n  \"shake\",\n  \"share\",\n  \"she\",\n  \"shoot\",\n  \"short\",\n  \"shot\",\n  \"should\",\n  \"shoulder\",\n  \"show\",\n  \"side\",\n  \"sign\",\n  \"significant\",\n  \"similar\",\n  \"simple\",\n  \"simply\",\n  \"since\",\n  \"sing\",\n  \"single\",\n  \"sister\",\n  \"sit\",\n  \"site\",\n  \"situation\",\n  \"six\",\n  \"size\",\n  \"skill\",\n  \"skin\",\n  \"small\",\n  \"smile\",\n  \"so\",\n  \"social\",\n  \"society\",\n  \"soldier\",\n  \"some\",\n  \"somebody\",\n  \"someone\",\n  \"something\",\n  \"sometimes\",\n  \"son\",\n  \"song\",\n  \"soon\",\n  \"sort\",\n  \"sound\",\n  \"source\",\n  \"south\",\n  \"southern\",\n  \"space\",\n  \"speak\",\n  \"special\",\n  \"specific\",\n  \"speech\",\n  \"spend\",\n  \"sport\",\n  \"spring\",\n  \"staff\",\n  \"stage\",\n  \"stand\",\n  \"standard\",\n  \"star\",\n  \"start\",\n  \"state\",\n  \"statement\",\n  \"station\",\n  \"stay\",\n  \"step\",\n  \"still\",\n  \"stock\",\n  \"stop\",\n  \"store\",\n  \"story\",\n  \"strategy\",\n  \"street\",\n  \"strong\",\n  \"structure\",\n  \"student\",\n  \"study\",\n  \"stuff\",\n  \"style\",\n  \"subject\",\n  \"success\",\n  \"successful\",\n  \"such\",\n  \"suddenly\",\n  \"suffer\",\n  \"suggest\",\n  \"summer\",\n  \"support\",\n  \"sure\",\n  \"surface\",\n  \"system\",\n  \"table\",\n  \"take\",\n  \"talk\",\n  \"task\",\n  \"tax\",\n  \"teach\",\n  \"teacher\",\n  \"team\",\n  \"technology\",\n  \"television\",\n  \"tell\",\n  \"ten\",\n  \"tend\",\n  \"term\",\n  \"test\",\n  \"than\",\n  \"thank\",\n  \"that\",\n  \"the\",\n  \"their\",\n  \"them\",\n  \"themselves\",\n  \"then\",\n  \"theory\",\n  \"there\",\n  \"these\",\n  \"they\",\n  \"thing\",\n  \"think\",\n  \"third\",\n  \"this\",\n  \"those\",\n  \"though\",\n  \"thought\",\n  \"thousand\",\n  \"threat\",\n  \"three\",\n  \"through\",\n  \"throughout\",\n  \"throw\",\n  \"thus\",\n  \"time\",\n  \"to\",\n  \"today\",\n  \"together\",\n  \"tonight\",\n  \"too\",\n  \"top\",\n  \"total\",\n  \"tough\",\n  \"toward\",\n  \"town\",\n  \"trade\",\n  \"traditional\",\n  \"training\",\n  \"travel\",\n  \"treat\",\n  \"treatment\",\n  \"tree\",\n  \"trial\",\n  \"trip\",\n  \"trouble\",\n  \"true\",\n  \"truth\",\n  \"try\",\n  \"turn\",\n  \"TV\",\n  \"two\",\n  \"type\",\n  \"under\",\n  \"understand\",\n  \"unit\",\n  \"until\",\n  \"up\",\n  \"upon\",\n  \"us\",\n  \"use\",\n  \"usually\",\n  \"value\",\n  \"various\",\n  \"very\",\n  \"victim\",\n  \"view\",\n  \"violence\",\n  \"visit\",\n  \"voice\",\n  \"vote\",\n  \"wait\",\n  \"walk\",\n  \"wall\",\n  \"want\",\n  \"war\",\n  \"watch\",\n  \"water\",\n  \"way\",\n  \"we\",\n  \"weapon\",\n  \"wear\",\n  \"week\",\n  \"weight\",\n  \"well\",\n  \"west\",\n  \"western\",\n  \"what\",\n  \"whatever\",\n  \"when\",\n  \"where\",\n  \"whether\",\n  \"which\",\n  \"while\",\n  \"white\",\n  \"who\",\n  \"whole\",\n  \"whom\",\n  \"whose\",\n  \"why\",\n  \"wide\",\n  \"wife\",\n  \"will\",\n  \"win\",\n  \"wind\",\n  \"window\",\n  \"wish\",\n  \"with\",\n  \"within\",\n  \"without\",\n  \"woman\",\n  \"wonder\",\n  \"word\",\n  \"work\",\n  \"worker\",\n  \"world\",\n  \"worry\",\n  \"would\",\n  \"write\",\n  \"writer\",\n  \"wrong\",\n  \"yard\",\n  \"yeah\",\n  \"year\",\n  \"yes\",\n  \"yet\",\n  \"you\",\n  \"young\",\n  \"your\",\n  \"yourself\",\n];\n\nexport default words;","/**\n * THEMES.JS\n * Collection of themes, passed as prop \"theme\" to <ThemeProvider>.\n */\n\n// NICE GRADIENT FOR BACKGROUND? linear-gradient(to right, #29323c, #485563);\n\nconst themes = {\n\tdark: {\n\t\tprimary: '#F2F4F3',\n\t\thighlight: '#F4CB4C',\n\t\tbackgroundPrimary: '#262526',\n\t\tbackgroundSecondary: '#1F1F21',\n\t\tbackgroundTertiary: '#222',\n\t},\n\n\tlight: {\n\t\tprimary: '#333',\n\t\thighlight: 'darkorange',\n\t\tbackgroundPrimary: '#F2F4F3',\n\t}\n}\n\nexport default themes;","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport g from '../../globals.js';\n\nconst InstructionsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n`\n\nconst StyledInstructions = styled.span`\n  opacity: 1;\n  color: ${props => props.theme.highlight};\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-align: center;\n  transition: color 0.2s var(--default-timing);\n  ${props => props.playing && props.focused && !props.controlPanelOpen && css`\n    transition: opacity 1s var(--default-timing) 1s, color 1.5s linear;\n    opacity: 0;`\n  }\n\n  @media ${g.atleastMedium} {\n    width: max-content;\n  }\n`\n\nconst TestInstructions = (props) => {\n  return (\n    <InstructionsContainer>\n      <StyledInstructions\n        playing={props.playing}\n        focused={props.focused}\n        controlPanelOpen={props.controlPanelOpen}\n      >\n        {props.focused ?\n          (props.playing ?\n            (props.controlPanelOpen ? 'Close control panel to unpause' : 'Type like the wind') :\n            (props.controlPanelOpen ? 'Close control panel to return to test' :\n              (props.testConcluded ? 'Press ENTER to run test again' : 'Begin typing to start test')\n            )\n          )\n          : (props.playing ?\n            (props.controlPanelOpen ? 'Close control panel to unpause' : 'Focus lost. Click page to resume') :\n            (props.controlPanelOpen ? 'Close control panel to return to test' : 'Click page to focus')\n          )\n        }\n      </StyledInstructions>\n    </InstructionsContainer>\n  );\n}\n\nexport default TestInstructions;\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n`\n\nconst Gears = styled.button`\n\tbackground: transparent;\n\tborder: none;\n\tcursor: pointer;\n\t\n\tsvg {\n\t\twidth: 2.5rem;\n\t\tpadding: 0.25rem;\n\t\theight: auto;\n\n\t\t& .icon-gears {\n\t\t\tfill: none;\n\t\t}\n\t\t& path {\n\t\t\ttransition: fill 0.2s ease-in-out;\n\t\t\tfill: ${props => props.isOpen ? props.theme.primary : props.theme.highlight};\n\t\t}\n\t\t& .gear-1 {\n\t\t\ttransform-origin: 226.5px 89px;\n\t\t}\n\t\t& .gear-2 {\n\t\t\ttransform-origin: 86px 139.03px;\n\t\t}\n\t\t& .gear-3 {\n\t\t\ttransform-origin: 152px 236px;\n\t\t}\n\t\t&:hover .gear-1,\n\t\t&:hover .gear-3 {\n\t\t\tanimation-duration: 5.6s;\n\t\t\tanimation-name: gear-spin;\n\t\t\tanimation-iteration-count: infinite;\n\t\t\tanimation-timing-function: linear;\n\t\t}\n\t\t&:hover .gear-2 {\n\t\t\tanimation-duration: 5.6s;\n\t\t\tanimation-name: gear-spin-reverse;\n\t\t\tanimation-iteration-count: infinite;\n\t\t\tanimation-timing-function: linear;\n\t\t}                    \n\t}\n\n\t@keyframes gear-spin {\n\t\tfrom {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\tto {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t@keyframes gear-spin-reverse {\n\t\tfrom {\n\t\t\ttransform: rotate(-1deg);\n\t\t}\n\t\tto {\n\t\t\ttransform: rotate(-361deg);\n\t\t}\n\t}\n`\n\nconst GearToggler = (props) => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Gears\n\t\t\t\tisOpen={props.controlPanelOpen}\n\t\t\t\tonClick={() => props.setControlPanelOpen(!props.controlPanelOpen)}\n\t\t\t>\n\t\t\t\t<svg className=\"icon icon-gears\" viewBox=\"0 0 316 290\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path className=\"gear-1\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M211.464 174.173C211.464 175.334 212.024 176.383 213.135 176.718C215.035 177.292 218.91 178 226.464 178C234.018 178 237.894 177.292 239.794 176.718C240.904 176.383 241.464 175.334 241.464 174.173L241.464 160.457C250.495 158.571 258.913 155.016 266.381 150.13L276.084 159.833C276.905 160.654 278.043 160.999 279.065 160.451C280.814 159.513 284.055 157.274 289.397 151.933C294.738 146.591 296.978 143.35 297.916 141.601C298.464 140.578 298.118 139.44 297.298 138.62L287.594 128.917C292.481 121.449 296.036 113.031 297.922 104L311.638 104C312.798 104 313.847 103.44 314.182 102.329C314.756 100.429 315.464 96.5539 315.464 89C315.464 81.4462 314.756 77.5706 314.182 75.6707C313.847 74.5601 312.798 74 311.638 74L297.922 74C296.036 64.9693 292.481 56.5513 287.594 49.0832L297.298 39.3799C298.118 38.5596 298.464 37.4217 297.916 36.3993C296.978 34.6503 294.738 31.4089 289.397 26.0675C284.055 20.7261 280.814 18.4866 279.065 17.5488C278.043 17.0006 276.905 17.3464 276.084 18.1667L266.381 27.8701C258.913 22.9836 250.495 19.4288 241.464 17.5426L241.464 3.82653C241.464 2.66647 240.904 1.6173 239.794 1.28202C237.894 0.708428 234.018 8.13854e-06 226.464 7.47816e-06C218.91 6.81778e-06 215.035 0.708426 213.135 1.28202C212.024 1.6173 211.464 2.66646 211.464 3.82653L211.464 17.5426C202.434 19.4287 194.016 22.9836 186.548 27.87L176.844 18.1667C176.024 17.3464 174.886 17.0006 173.864 17.5488C172.115 18.4866 168.873 20.7261 163.532 26.0675C158.19 31.4089 155.951 34.6502 155.013 36.3993C154.465 37.4217 154.811 38.5596 155.631 39.3799L165.334 49.0832C160.448 56.5513 156.893 64.9692 155.007 74L141.291 74C140.131 74 139.082 74.5601 138.746 75.6707C138.173 77.5706 137.464 81.4462 137.464 89C137.464 96.5538 138.173 100.429 138.746 102.329C139.082 103.44 140.131 104 141.291 104L155.007 104C156.893 113.031 160.448 121.449 165.334 128.917L155.631 138.62C154.811 139.44 154.465 140.578 155.013 141.601C155.951 143.35 158.19 146.591 163.532 151.933C168.873 157.274 172.115 159.513 173.864 160.451C174.886 160.999 176.024 160.654 176.844 159.833L186.548 150.13C194.016 155.016 202.434 158.571 211.464 160.457L211.464 174.173ZM226.464 41C199.955 41 178.464 62.4903 178.464 89C178.464 115.51 199.955 137 226.464 137C252.974 137 274.464 115.51 274.464 89C274.464 62.4903 252.974 41 226.464 41Z\"/>\n\t\t\t\t\t<path className=\"gear-2\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.9709 145.21C17.0896 145.447 16.4066 146.086 16.3779 146.998C16.3289 148.558 16.5796 151.646 18.1173 157.385C19.655 163.124 20.9822 165.924 21.8047 167.251C22.2855 168.026 23.1966 168.238 24.0779 168.002L34.4983 165.21C37.7695 171.687 42.1838 177.358 47.4163 182.037L42.0198 191.384C41.5636 192.175 41.5325 193.109 42.1571 193.775C43.2257 194.912 45.5869 196.919 50.7321 199.89C55.8774 202.86 58.7958 203.902 60.3155 204.258C61.2038 204.467 61.9979 203.972 62.4541 203.182L67.8506 193.835C74.5189 196.027 81.6379 197.014 88.8826 196.609L91.6748 207.029C91.9109 207.91 92.55 208.593 93.462 208.622C95.0221 208.671 98.1107 208.42 103.849 206.883C109.588 205.345 112.388 204.018 113.715 203.195C114.49 202.715 114.702 201.803 114.466 200.922L111.674 190.502C118.151 187.23 123.823 182.816 128.502 177.584L137.849 182.98C138.639 183.436 139.574 183.467 140.239 182.843C141.377 181.774 143.383 179.413 146.354 174.268C149.325 169.123 150.366 166.204 150.723 164.685C150.931 163.796 150.437 163.002 149.646 162.546L140.299 157.149C142.491 150.481 143.478 143.362 143.073 136.117L153.493 133.325C154.375 133.089 155.058 132.45 155.086 131.538C155.135 129.978 154.885 126.889 153.347 121.151C151.809 115.412 150.482 112.612 149.66 111.285C149.179 110.51 148.268 110.298 147.386 110.534L136.966 113.326C133.695 106.849 129.28 101.177 124.048 96.4985L129.444 87.1514C129.901 86.3612 129.932 85.4263 129.307 84.7612C128.239 83.6233 125.877 81.6167 120.732 78.6461C115.587 75.6755 112.668 74.6339 111.149 74.2774C110.26 74.0691 109.466 74.5634 109.01 75.3536L103.614 84.7007C96.9453 82.5086 89.8264 81.5216 82.5816 81.927L79.7895 71.5066C79.5534 70.6253 78.9143 69.9423 78.0023 69.9136C76.4421 69.8646 73.3536 70.1153 67.6148 71.6531C61.876 73.1908 59.0759 74.5179 57.7493 75.3404C56.9738 75.8212 56.7619 76.7323 56.998 77.6136L59.7901 88.034C53.3133 91.3052 47.6416 95.7195 42.9627 100.952L33.6157 95.5555C32.8255 95.0993 31.8906 95.0682 31.2255 95.6928C30.0876 96.7614 28.081 99.1226 25.1104 104.268C22.1398 109.413 21.0982 112.332 20.7417 113.851C20.5334 114.74 21.0277 115.534 21.8179 115.99L31.165 121.386C28.9729 128.055 27.9858 135.174 28.3913 142.418L17.9709 145.21ZM122.199 129.497C116.802 109.357 96.1008 97.405 75.961 102.801C55.8212 108.198 43.8693 128.899 49.2657 149.039C54.6622 169.179 75.3634 181.131 95.5033 175.734C115.643 170.338 127.595 149.637 122.199 129.497Z\"/>\n\t\t\t\t\t<path className=\"gear-3\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M128.997 285.76C128.808 286.464 128.978 287.192 129.597 287.576C130.658 288.234 132.895 289.294 137.481 290.523C142.066 291.752 144.534 291.952 145.781 291.913C146.51 291.89 147.021 291.344 147.209 290.64L149.44 282.313C155.229 282.637 160.918 281.848 166.247 280.097L170.559 287.566C170.923 288.197 171.558 288.592 172.268 288.426C173.482 288.141 175.814 287.309 179.925 284.935C184.037 282.561 185.924 280.958 186.778 280.049C187.277 279.517 187.252 278.77 186.887 278.139L182.575 270.67C186.756 266.931 190.284 262.399 192.898 257.223L201.224 259.454C201.928 259.643 202.657 259.474 203.041 258.854C203.698 257.794 204.758 255.556 205.987 250.971C207.216 246.385 207.416 243.917 207.377 242.67C207.354 241.942 206.808 241.431 206.104 241.242L197.778 239.011C198.102 233.222 197.313 227.533 195.561 222.205L203.03 217.893C203.662 217.528 204.057 216.894 203.89 216.184C203.605 214.969 202.773 212.637 200.399 208.526C198.025 204.415 196.422 202.528 195.513 201.674C194.981 201.175 194.234 201.2 193.603 201.564L186.134 205.876C182.395 201.695 177.863 198.168 172.687 195.554L174.919 187.227C175.107 186.523 174.938 185.795 174.318 185.411C173.258 184.754 171.021 183.693 166.435 182.464C161.849 181.236 159.381 181.035 158.135 181.074C157.406 181.097 156.895 181.643 156.706 182.347L154.475 190.674C148.686 190.35 142.998 191.139 137.669 192.89L133.357 185.421C132.992 184.79 132.358 184.395 131.648 184.561C130.434 184.846 128.102 185.679 123.99 188.052C119.879 190.426 117.992 192.029 117.138 192.939C116.639 193.47 116.664 194.217 117.028 194.849L121.341 202.318C117.16 206.056 113.632 210.588 111.018 215.764L102.692 213.533C101.987 213.344 101.259 213.514 100.875 214.133C100.218 215.193 99.1573 217.431 97.9286 222.016C96.6998 226.602 96.4995 229.07 96.5386 230.317C96.5615 231.046 97.1073 231.556 97.8116 231.745L106.138 233.976C105.814 239.765 106.603 245.454 108.355 250.782L100.886 255.094C100.254 255.459 99.8592 256.094 100.026 256.803C100.31 258.018 101.143 260.35 103.517 264.461C105.89 268.573 107.494 270.459 108.403 271.313C108.934 271.812 109.681 271.788 110.313 271.423L117.782 267.111C121.521 271.292 126.053 274.819 131.228 277.433L128.997 285.76ZM159.766 207.354C143.673 203.042 127.131 212.592 122.818 228.686C118.506 244.779 128.057 261.321 144.15 265.633C160.243 269.945 176.785 260.395 181.097 244.301C185.409 228.208 175.859 211.666 159.766 207.354Z\"/>\n\t\t\t\t</svg>\n\t\t\t</Gears>\n\t\t</Wrapper>\n\t);\n}\n\nexport default GearToggler;","/**\n * TYPE TEST TIME CONTROLS COMPONENT\n * Control panel for changing the test's duration\n */\n\nimport React from 'react';\nimport styled, {css} from 'styled-components';\nimport g from '../../globals.js';\n\nconst StyledButton = styled.button`\n  padding: 0.4rem 0.8rem;\n  background-color: ${props => props.theme.highlight};\n  border-radius: 0.8rem;\n  color: ${props => props.theme.backgroundTertiary};\n  font-family: var(--font-main);\n  font-size: 1.2rem;\n  font-weight: 600;\n  cursor: pointer;\n\n  &:active {\n    background-color: ${props => props.theme.primary};\n  }\n\n  ${props => props.selectedOption && css`\n    background-color: ${props => props.theme.primary}; /* not exactly beautiful. */`\n  }\n`\n\nconst StyledTimeControls = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  transition: opacity 0.2s ease;\n  \n  & button + button {\n    margin-left: 0.5rem;\n  }\n\n  & span {\n    display: inline-block;\n    width: fit-content;\n\n    &:first-child {\n      text-transform: uppercase;\n      font-weight: 600;\n      letter-spacing: 1px;\n    }\n  }\n\n  & div {\n    display: flex;\n    align-items: center;\n    margin-top: 1.5rem;\n\n    & button:last-of-type {\n      margin-right: 1rem;\n    }\n  }\n`\n\nconst Button = (props) => {\n  return (\n    <StyledButton\n      selectedOption={props.selectedOption}\n      onClick={() => props.setTestLength(props.testLengthOption)}\n    >\n      {props.children}\n    </StyledButton>\n  );\n}\n\nconst TimeControls = (props) => {\n  const testLengthOptions = [\n    g.TEST_LENGTH_SHORT,\n    g.TEST_LENGTH_MEDIUM,\n    g.TEST_LENGTH_LONG,\n  ];\n\n  return (\n    <StyledTimeControls playing={props.playing}>\n      <span>Set test duration</span>\n      <div>\n        {testLengthOptions.map((option, key) => {\n          return (\n            <Button\n              setTestLength={props.setTestLength}\n              testLengthOption={option}\n              selectedOption={option === props.testLength}\n              key={key}\n            >\n              {option}\n            </Button>\n          );\n        })}\n        <span>seconds</span>\n      </div>  \n    </StyledTimeControls>\n  );\n}\n\nexport default TimeControls;","import React from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\n\n/* \n   ToggleSwitch component.\n   Set id using prop \"Id\".\n*/\n\nconst Wrapper = styled.div`\n  position: relative;\n`\n\nconst Input = styled.input`\n  opacity: 0;\n\n  /*\n  &:focus ~ label {\n    outline: var(--default-outline); UNDEFINED\n    outline-offset: 5px;\n  }\n  */\n\n  &:checked + label::after {\n    left: calc(100% - 2px);\n    transform: translateX(-100%);\n  }\n\n  &:checked + label {\n    background-color: ${props => props.theme.primary};\n  }\n`\n\nconst LABEL_LETTER_SPACING = 1; // px\n\nconst Label = styled.label`\n  display: inline-block;\n  height: 1.75rem;\n  width: 3.5rem;\n  border-radius: 1.75rem;\n  cursor: pointer;\n  background-color: ${props => props.theme.highlight};\n  text-indent: calc(${props => props.text.length * -1}ch + (${props => props.text.length} * ${LABEL_LETTER_SPACING}px * -1) - 2ch);\n  font-size: 1rem;\n  line-height: 1.875;\n  letter-spacing: ${LABEL_LETTER_SPACING}px;\n  color: ${props => props.theme.highlight};\n  position: absolute;\n  right: 0;\n  top: 0;\n  box-shadow: none;\n  transition: box-shadow 0.2s var(--default-timing), background-color 0.2s var(--default-timing);\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0.125rem;\n    left: 0.125rem;\n    height: 1.5rem;\n    width: 1.5rem;\n    border-radius: 50%;\n    background-color: ${props => props.theme.backgroundTertiary};\n    transition: all 0.12s var(--default-timing);\n  }\n\n  &:hover {\n    box-shadow: 0 0 7px 2px rgba(255, 255, 255, 0.25);\n  }\n\n  @media ${g.atleastMedium} {\n    height: 2rem;\n    width: 4rem;\n    line-height: 2.1;\n\n    &::after {\n      height: 1.75rem;\n      width: 1.75rem;\n    }\n  }\n`\n\nconst ToggleSwitch = ({Id, text, defaultChecked, onChangeFunc}) => {\n\n  const handleChange = (e) => {\n    let isChecked = e.target.checked;\n    onChangeFunc(isChecked);\n  }\n\n  return (\n    <Wrapper>\n      <Input\n        type=\"checkbox\"\n        id={Id || 'toggle_switch'}\n        defaultChecked={defaultChecked}\n        onChange={handleChange}\n      />\n      <Label htmlFor={Id || 'toggle_switch'} text={text || 'Toggle'}>\n        {text || 'Toggle'}\n      </Label>\n    </Wrapper>\n  );\n}\n\nexport default ToggleSwitch;","import React from 'react';\nimport styled from 'styled-components';\nimport ToggleSwitch from './toggle-switch.js';\n\nconst KeyboardToggler = styled(ToggleSwitch)`\n\tdisplay: inline-block;\n`\n\nconst KeyboardControlsContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n\tjustify-content: flex-end;\n\n\t& > span {\n\t\tdisplay: inline-block;\n\t\ttext-transform: uppercase;\n\t\tfont-weight: 600;\n\t\tletter-spacing: 1px;\n\t}\n\n\t& > div {\n\t\tmargin-top: 1.5rem;\n\t\tpadding-bottom: 1.1rem;\n\t}\n`\n\nconst KeyboardControls = (props) => {\n\n\treturn (\n\t\t<KeyboardControlsContainer>\n\t\t\t<span>Keyboard settings</span>\n\t\t\t<KeyboardToggler\n\t\t\t\tId={'keyboard-toggler'}\n\t\t\t\ttext={'Show keyboard'}\n\t\t\t\tdefaultChecked={props.keyboardVisible}\n\t\t\t\tonChangeFunc={props.setKeyboardVisible}\n\t\t\t/>\n\t\t</KeyboardControlsContainer>\n\t);\n}\n\nexport default KeyboardControls;","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport themes from '../../themes.js';\n\nconst ThemeControlsContainer = styled.div`\n\n  & span {\n    display: block;\n    text-transform: uppercase;\n    text-align: center;\n    font-weight: 600;\n    letter-spacing: 1px;\n  }\n\n  & div {\n    margin-top: 1.5rem;\n    display: flex;\n    justify-content: center;\n  }\n`\n\nconst StyledThemeButton = styled.button`\n  background: ${props => themes[props.themeOption].backgroundPrimary};\n  padding: 1rem;\n  border-radius: 50%;\n  cursor: pointer;\n\n  & + & {\n    margin-left: 0.8rem;\n  }\n\n  ${props => props.isCurrent && css`\n    border: 2px solid ${props => props.theme.highlight};`\n  }\n`\nconst ThemeButton = (props) => {\n\n  const handleClick = () => {\n    props.setTheme(props.themeOption);\n  }\n\n  return (\n    <StyledThemeButton\n      onClick={handleClick}\n      isCurrent={props.isCurrent}\n      themeOption={props.themeOption}\n    >\n      {props.children}\n    </StyledThemeButton>\n  );\n}\n\nconst ThemeControls = (props) => {\n\n  const themeNames = Object.keys(themes);\n\n  return (\n    <ThemeControlsContainer>\n      <span>Select theme</span>\n      <div>\n        {themeNames.map((theme) => {\n          return (\n            <ThemeButton\n              key={theme}\n              themeOption={theme}\n              setTheme={props.setTheme}\n              isCurrent={themes[theme] === props.currentTheme}\n            />\n          );\n        })}\n      </div>\n    </ThemeControlsContainer>\n  );\n}\n\nexport default ThemeControls;","import React from 'react';\nimport styled from 'styled-components';\nimport g, {largestMedium} from '../../globals.js';\nimport TimeControls from '../game/test-time-controls.js';\nimport KeyboardControls from './keyboard-controls.js';\nimport ThemeControls from './theme-controls.js';\n\nconst StyledControlPanel = styled.div`\n\tmax-height: ${props => props.isOpen ? '8.75rem' : '0px'};\n\topacity: ${props => props.isOpen ? '1' : '0'};\n\toverflow: hidden;\n\tpadding: 0 1rem;\n\tbackground-color: ${props => props.theme.backgroundTertiary};\n\ttransition: max-height 0.2s var(--default-timing), opacity 0.2s var(--default-timing);\n\n\t& > div {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tpadding: 1rem 0;\n\t}\n\n\t@media ${g.large} {\n\t\tpadding: 0 1.5rem;\n\n\t\t& > div {\n\t\t\tmax-width: ${largestMedium+1}px;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 1.5rem 0;\n\t\t}\n\t}\n`\n\nconst ControlPanel = (props) => {\n  return (\n\t\t<StyledControlPanel isOpen={props.isOpen}>\n\t\t\t<div>\n\t\t\t\t<TimeControls\n\t\t\t\t\tsetTestLength={props.setTestLength}\n\t\t\t\t\ttestLength={props.testLength}\n\t\t\t\t/>\n\t\t\t\t<ThemeControls\n\t\t\t\t\tcurrentTheme={props.currentTheme}\n\t\t\t\t\tsetTheme={props.setTheme}\n\t\t\t\t/>\n\t\t\t\t<KeyboardControls\n\t\t\t\t\tcurrentLayout={props.currentLayout}\n\t\t\t\t\tsetCurrentLayout={props.setCurrentLayout}\n\t\t\t\t\tkeyboardVisible={props.keyboardVisible}\n\t\t\t\t\tsetKeyboardVisible={props.setKeyboardVisible}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</StyledControlPanel>\n\t);\n}\n\nexport default ControlPanel;","/**\n * HEADER COMPONENT.\n * Holds logo and control panel.\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport g, {largestMedium} from '../../globals.js';\nimport TestInstructions from '../game/test-instructions.js';\nimport GearToggler from './control-panel-toggler';\nimport ControlPanel from './control-panel';\n\nconst StyledHeader = styled.header`\n\tbackground-color: ${props => props.theme.backgroundSecondary};\n\tfont-family: var(--font-main);\n\tcolor: ${props => props.theme.highlight};\n\t\n\t& > div:first-of-type {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tpadding: 1rem;\n\t\tmargin: 0 auto;\n\n\t\t& > * {\n\t\t\tflex: 1;\n\t\t}\n\t}\n\n\t/* TEMP LOGO */\n\t& > div > span {\n\t\tletter-spacing: 1px;\n\t\talign-self: center;\n\n\t\t& > span {\n\t\t\tfont-weight: 600;\n\t\t}\n\t}\n\n\t@media ${g.large} {\n\t\t& > div:first-of-type {\n\t\t\tpadding: 1.5rem;\n\t\t\tmax-width: ${largestMedium+1}px;\n\t\t}\n\t}\n`\n\nconst Header = (props) => {\n\n\treturn (\n\t\t<StyledHeader>\n\t\t\t<div>\n\t\t\t\t<span><span>TYPE</span>|TWO</span>\n\t\t\t\t<TestInstructions\n\t\t\t\t\tplaying={props.playing}\n\t\t\t\t\tfocused={props.documentIsFocused}\n\t\t\t\t\tcontrolPanelOpen={props.controlPanelOpen}\n\t\t\t\t\ttestConcluded={props.testConcluded}\n      \t/>\n\t\t\t\t<GearToggler\n\t\t\t\t\tcontrolPanelOpen={props.controlPanelOpen}\n\t\t\t\t\tsetControlPanelOpen={props.setControlPanelOpen}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<ControlPanel\n\t\t\t\tisOpen={props.controlPanelOpen}\n\t\t\t\ttestLength={props.testLength}\n\t\t\t\tsetTestLength={props.setTestLength}\n\t\t\t\tcurrentTheme={props.currentTheme}\n\t\t\t\tsetTheme={props.setTheme}\n\t\t\t\tcurrentLayout={props.currentLayout}\n\t\t\t\tsetCurrentLayout={props.setCurrentLayout}\n\t\t\t\tkeyboardVisible={props.keyboardVisible}\n\t\t\t\tsetKeyboardVisible={props.setKeyboardVisible}\n\t\t\t/>\n\t\t</StyledHeader>\n\t)\n}\n\nexport default Header;\n\n","/**\n * TYPE TEST INPUT FIELD COMPONENT\n * Automatically focused text-input which is visually hidden.\n */\n\nimport React, {useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  opacity: 0;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst Input = (props) => {\n\n  // initiate reference to textinput element\n  let textInput = useRef(null);\n\n  // Keep input focused. Good or nah?\n  useEffect(() => {\n    let focusTimer = setInterval(() => {\n      if (textInput.current === null) {\n        clearInterval(focusTimer);\n      } else {\n        textInput.current.focus();\n      }\n    }, 200);\n\n    return () => {\n      clearInterval(focusTimer);\n    }\n  }, []);\n\n  /* Filter text-input. \n  Remove everything except chars inside square brackets.\n  Also remove whitespaces, incl. tabs, newlines.\n  Finally, trim chars which exceed length of 2nd parameter (currentWord). */\n  const filterInput = (input, maxLen) => {\n    return input\n      .replace(/[^a-zA-Z0-9-.,'!?]/g, \"\")\n      .replace(/\\s+/g, \"\")\n      .substring(0, maxLen);\n  }\n\n  const handleKeyDown = (e) => {\n    /**\n     * START TEST.\n     * Start test if key is a letter, i.e. if user started typing\n     */\n    if (/[a-z|A-Z]/g.test(e.key) && !props.playing && e.key.length === 1 && !props.controlPanelOpen) {\n      props.setPlaying(!props.playing);\n    }\n\n    // Abort test if Escape is pressed\n    if (e.key === 'Escape') {\n      if (!props.controlPanelOpen && props.playing) {\n        props.endTest();\n      }\n    }\n\n    if (!props.controlPanelOpen) {\n      if (e.code === 'ShiftLeft') {\n        props.setShiftPressedRecently(true);\n        props.setLeftShiftPressed(true);\n      }\n      else if (e.code === 'ShiftRight') {\n        props.setShiftPressedRecently(true);\n        props.setRightShiftPressed(true);\n      }\n      else if (e.key === ' ') {\n        props.handleSpace();\n        props.updateTypedRecently();\n        props.flashSpacePressedRecently();\n      }\n      else {\n        props.setLastKey(e.key);\n      }\n    }\n  }\n\n  const handleKeyUp = (e) => {\n    if (!props.controlPanelOpen) {\n      if (['ArrowLeft', 'ArrowRight', 'Control', 'Home', 'End'].includes(e.key)) {\n        props.setCaretPosition(e.target.selectionStart);\n        props.updateTypedRecently();\n      }\n\n      if (e.code === 'ShiftLeft') {\n        props.setShiftPressedRecently(false);\n        props.setLeftShiftPressed(false);\n      }\n      else if (e.code === 'ShiftRight') {\n        props.setShiftPressedRecently(false);\n        props.setRightShiftPressed(false);\n      }\n    }\n  }\n\n  const handleInput = (e) => {\n    if (!props.controlPanelOpen) {\n      let text = filterInput(e.target.value, props.currentWord.length);\n      props.setInputValue(text);\n      props.updateTypedRecently();\n      props.setCaretPosition(e.target.selectionStart);\n    }\n  }\n\n  return(\n    <StyledInput\n      type=\"text\"\n      autoComplete=\"off\"// SHIFTS // what?\n      value={props.inputValue}\n      onKeyDown={(e) => {handleKeyDown(e)}}\n      onKeyUp={(e) => {handleKeyUp(e)}}\n      onInput={(e) => {\n        if (props.playing === true && e.nativeEvent.data !== ' ') handleInput(e);\n      }}\n      id=\"text-input\"\n      aria-label=\"Type test input\"\n      ref={textInput}\n      onBlur={() => {\n        if (props.playing === true) {\n          // Try to focus\n          textInput.current.focus();\n        }\n      }}\n    />\n  );\n}\n\nexport default Input;","/**\n * TYPE TEST COUNTDOWN TIME\n * Prints time left on screen.\n */\n\nimport React from 'react';\nimport styled, {css} from 'styled-components';\n\nconst TimerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 2rem;\n`\n\nconst Numbers = styled.span`\n  font-family: var(--font-main);\n  font-weight: 600;\n  font-size: 3.5rem;\n  color: ${props => props.theme.primary};\n  transition: color 0.2s var(--default-timing);\n\n  ${props => props.playing && css`\n    color: #888;\n    transition: color 1.5s linear;`\n  }\n\n  & svg {\n    fill: ${props => props.theme.primary};\n  }\n`\n\nconst TestTimer = (props) => {\n  return(\n    <TimerWrapper>\n      <Numbers playing={props.playing}>\n        {/* Display pause icon or time left countdown. */}\n        {(props.playing && (props.controlPanelOpen || !props.documentIsFocused)) ?\n          <svg width=\"1ch\" height=\"auto\" viewBox=\"0 0 156 203\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"52\" height=\"203\"/><rect x=\"104\" width=\"52\" height=\"203\"/></svg> :\n          props.timeLeft}\n      </Numbers>      \n    </TimerWrapper>\n  );\n}\n\nexport default TestTimer;","/**\n * TYPE TEST TEXT COMPONENT\n * Displays type test's words on screen.\n * Incorrectly input characters are highlighted in **PROBABLY RED**.\n */\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport styled, {css} from 'styled-components';\nimport g from '../../globals.js';\nimport {debounce} from '../../utilities.js';\n\nconst TEXT_LINE_HEIGHT = 1.6;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  color: ${(props => props.focused) ? (props => props.theme.primary) : 'transparent'};\n  transition: color 0.2s ease-in-out;\n  position: relative;\n\n  & > span {\n    line-height: ${TEXT_LINE_HEIGHT};\n  }\n`;\n\nconst StyledWord = styled.span`\n  display: inline-flex;\n  margin-right: 1ch;\n\n  ${props => props.isCorrect && css`\n    color: #888; /* Use a variable */`\n  }\n`;\n\n/* TODO: Clean up some conditions below (e.g. probably don't need \"=== true\"), assign color vars */\n\nconst StyledLetter = styled.span`\n  transition: color 0.03s var(--default-timing), text-shadow 0.2s ease-in-out;\n\n  ${props => !props.entered && !props.wordIsCorrect && !props.focused && css`\n    text-shadow: 0 0 0.4rem ${props => props.theme.primary};`\n  }\n\n  ${props => props.entered && css`\n    color: #888; /* Use a variable */`\n  }\n\n  ${props => props.isIncorrect && css`\n    color: darkred;`\n  }\n\n  ${props => props.wordIncorrect && !props.entered && props.playing && css`\n    text-decoration: underline;`\n  }\n\n  ${props => props.focused === false && css`\n    color: transparent;\n    transition: color 0.2s var(--default-timing), text-shadow 0.2s var(--default-timing);`\n  }\n\n  ${props => props.focused === false && props.entered && css`\n    text-shadow: 0 0 0.4rem #666;`\n  }\n\n  ${props => !props.focused && props.wordIsCorrect && css`\n    text-shadow: 0 0 0.4rem #666;`\n  }\n\n  ${props => props.isIncorrect && !props.focused && css`\n    text-shadow: 0 0 0.4rem darkred;`\n  }\n\n  /**\n   * wordIncorrect is triggered quickly when an input word is checked and is incorrect.\n   * This then highlights incorrect characters.\n   */\n  ${props => props.wordIncorrect && props.isIncorrect && css`\n    color: red;`\n  }\n`;\n\nconst CARET_FONT_SIZE = 1.5;\n\nconst StyledCaret = styled.div`\n  height: calc(${TEXT_LINE_HEIGHT} * ${CARET_FONT_SIZE}rem);\n  font-size: ${CARET_FONT_SIZE}rem;\n  width: 3px;\n  background-color: ${props => props.theme.highlight};\n  opacity: var(--caret-opacity);\n  position: absolute;\n  z-index: 1;\n  visibility: ${props => props.focused ? 'visible' : 'hidden'};\n  left: ${props => props.currentWordLeft}px;\n  top: ${props => props.currentWordTop}px;\n\n  ${props => props.playing && !props.focused && css`\n    opacity: 0;`\n  }\n\n  ${props => props.focused && !props.typedRecently && css`\n    animation: 1.3s cubic-bezier(0.78, 0.2, 0.05, 1.0) 0s infinite forwards caret-blink;\n  `}\n`;\n\nconst Wrapper = (props) => {\n  return (\n    <TextWrapper\n      {...props}\n    >\n      {props.children}\n    </TextWrapper>\n  );\n}\n\nconst Caret = (props) => {\n  return (\n    <StyledCaret\n      {...props}\n    />\n  );\n}\n\nconst Word = ({wordsRef, children, ...rest}) => {\n  return (\n    <StyledWord\n      ref={wordsRef}\n      {...rest}\n    >\n      {children}\n    </StyledWord>\n  );\n}\n\nconst Letter = (props) => {\n  return (\n    <StyledLetter\n      {...props}\n    >\n      {props.children}\n    </StyledLetter>\n  );\n}\n\n/**\n* Text component displays test's words on screen. Text is blurred when document loses focus.\n* Uses styled component Textwrapper. Uses components Word, Letter, Caret.\n* Iterates through an array of words and prints its contents.\n*/\nconst Text = (props) => {\n\n  const wordsRef = useRef([]);\n\n  useEffect(() => {\n    // Update words' refs when words array changes.\n    wordsRef.current = wordsRef.current.slice(0, props.testWords.length);\n  }, [props.testWords]);\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }, g.RESIZE_CHECK_INTERVAL);\n    window.addEventListener('resize', debouncedHandleResize);\n\n    return _ => {\n      window.removeEventListener('resize', debouncedHandleResize);\n    }\n  }, []);\n\n  // Keep track of current word's position for caret positioning and rows handling.\n  const [currentWordLeft, setCurrentWordLeft] = useState(0);\n  const [currentWordTop, setCurrentWordTop] = useState(0);\n\n  useEffect(() => {\n    setCurrentWordLeft(wordsRef.current[props.currentWordInd].offsetLeft);\n    setCurrentWordTop(wordsRef.current[props.currentWordInd].offsetTop);\n  }, [props.currentWordInd, windowWidth]);\n\n  /**\n   * Compare current word's offsetTop with previous word's, to detect if current word just\n   * jumped to third or higher row. If true, it initiates removing and adding new words.\n   */\n  useEffect(() => {\n    if (props.currentWordInd > 0) {\n      let prevElem = wordsRef.current[props.currentWordInd].previousElementSibling;\n      let smallestOffsetTop = prevElem.offsetTop;\n\n      if (wordsRef.current[props.currentWordInd].offsetTop > smallestOffsetTop && smallestOffsetTop > 0) {\n        let removeWordsCount = 0;\n        while (prevElem) {\n          if (prevElem.offsetTop < smallestOffsetTop) removeWordsCount += 1;\n          prevElem = prevElem.previousElementSibling;\n        }\n        props.setWordShiftCount(removeWordsCount);\n      }\n    }\n  }, [props.currentWordInd]);\n\n  return (\n    <Wrapper focused={props.focused && !props.controlPanelOpen}>\n\n      {props.testWords.map((word, wordInd) => {\n        return (\n          <Word\n            key={wordInd}\n            wordsRef={elem => wordsRef.current[wordInd] = elem}\n            isCurrent={wordInd === props.currentWordInd}\n            isCorrect={props.currentWordInd > wordInd}\n          >\n            {word.map((letter, letterInd) => {\n              return (\n                <Letter\n                  playing={props.playing}\n                  key={letterInd}\n                  // Highlight that letter has been input\n                  entered={\n                    props.inputValue.length > letterInd &&\n                    wordInd === props.currentWordInd\n                  }\n                  // Highlights incorrectly input letter\n                  isIncorrect={\n                    props.currentWord[letterInd] !== props.inputValue[letterInd] && // Match letter\n                    wordInd === props.currentWordInd && // Check only currentWord\n                    props.inputValue.length > letterInd // Don't check letters not yet input\n                  }\n                  wordIncorrect={props.wordIncorrect && props.currentWordInd === wordInd}\n                  focused={props.focused && !props.controlPanelOpen}\n                  wordIsCorrect={props.currentWordInd > wordInd}\n                >\n                  {letter}\n                </Letter>\n              );\n            })}\n          </Word>\n        );\n      })}\n      <Caret\n        playing={props.playing}\n        focused={props.focused && !props.controlPanelOpen}\n        currentWordLeft={currentWordLeft}\n        currentWordTop={currentWordTop}\n        inputValue={props.inputValue}\n        caretPosition={props.caretPosition}\n        typedRecently={props.typedRecently}\n        style={{\n          transform: `translateX(min(${props.caretPosition}ch, ${props.inputValue.length}ch))`,\n        }}\n      />\n    </Wrapper>\n  );\n}\n\n// Does this work just like this?\nexport default React.memo(Text);","/**\n * DEBOUNCE FUNCTION\n * Make sure callback cannot be called too often (only every \"interval\" ms).\n */\nfunction debounce(callback, interval) {\n  let timer;\n  return _ => {\n    clearTimeout(timer);\n    timer = setTimeout(_ => {\n      timer = null;\n      callback.apply(this, arguments);\n\n    }, interval)\n  };\n}\n\nexport {debounce};","import React, {useState, useEffect} from 'react';\nimport styled, {css} from 'styled-components';\nimport g, {LAYOUTS} from '../../globals.js';\n\nconst Key = styled.span`\n  display: inline-flex;\n  border: 1px solid #555;\n  border-radius: 0.65rem;\n  padding: 0.75ch 1.5ch;\n  align-items: center;\n  position: relative;\n  pointer-events: none;\n  transition: background-color 0.04s linear, border 0.05s linear;\n\n  & + & {\n    margin-left: 0.5ch;\n  }\n\n  ${props => props.highlightPressedAccurate && css`\n    background-color: rgba(255, 255, 255, 0.4);`\n  }\n\n  ${props => props.highlightAccurate && css`\n    border: 1px solid #fff;`\n  }\n  \n  ${props => props.highlightPressedInaccurate && css`\n    background-color: rgba(255, 0, 0, 0.3);`\n  }\n\n  ${props => props.highlightSpacePressed && css`\n    background-color: rgba(255, 255, 255, 0.4);`\n  }\n`\n\nconst Row = styled.div`\n\n  // TOP ROW\n  &:nth-child(1) {\n    margin-left: 7ch;\n  }\n\n  // HOME ROW\n  &:nth-child(2) {\n    margin-left: 8ch;\n    \n    & > *:nth-child(4)::after,\n    & > *:nth-child(7)::after {\n      content: '';\n      display: block;\n      position: absolute;\n      width: 1ch;\n      border-bottom: 2px solid ${props => props.theme.highlight};\n      bottom: 0.5ch;\n      opacity: 0.6;\n    }\n  }\n\n  // BOTTOM ROW\n  &:nth-child(3) {\n\n    // LEFT SHIFT\n    & > *:first-child {\n      padding-right: ${props => props.iso ? '2.5ch' : '7.25ch'};\n      ${props => props.leftShiftPressed && css`\n        background-color: rgba(255, 255, 255, 0.4);`\n      }\n      ${props => props.leftShiftPressedInaccurate && css`\n        background-color: rgba(255, 0, 0, 0.3);`\n      }\n      /**\n       * Highlight accurate if either only one shift is pressed, if both are pressed,\n       * or neither (when they should have been)...\n       * Basically just don't highlight *the other* shift as accurate while, or shortly after\n       * a shift key has been pressed.\n       */\n      ${props => props.shiftAccurate &&\n        ((props.leftShiftPressed && !props.rightShiftPressed) ||\n        (props.leftShiftPressed && props.rightShiftPressed) ||\n        (!props.leftShiftPressed && !props.rightShiftPressed && !props.shiftPressedRecently)) && css`\n        border: 1px solid ${props => props.theme.primary};`\n      }\n    }\n\n    // RIGHT SHIFT\n    & > *:last-child {\n      padding-left: 9.5ch;\n      ${props => props.rightShiftPressed && css`\n        background-color: rgba(255, 255, 255, 0.4);`\n      }\n      ${props => props.rightShiftPressedInaccurate && css`\n        background-color: rgba(255, 0, 0, 0.3);`\n      }\n      ${props => props.shiftAccurate && ((props.rightShiftPressed && !props.leftShiftPressed) ||\n      (props.leftShiftPressed && props.rightShiftPressed) ||\n      (!props.leftShiftPressed && !props.rightShiftPressed && !props.shiftPressedRecently)) && css`\n        border: ${props => props.theme.primary};`\n      }\n    }\n  }\n\n  // SPACE\n  &:nth-child(4) > *:first-child {\n    padding-left: 14ch;\n    padding-right: 14ch;\n    margin-left: 16.5ch;\n  }\n\n  & + & {\n    margin-top: 0.5ch;\n  }\n`\n\nconst StyledKeyboard = styled.div`\n  display: ${props => props.keyboardVisible ? 'block' : 'none'};\n  margin: 3rem auto 1rem;\n  width: fit-content;\n  font-size: 1.25rem;\n  opacity: 0;\n  max-height: 0px;\n  transition: opacity 0.1s var(--default-timing), max-height 0.2s var(--default-timing) 0.2s;\n\n  @media only screen and (min-width: 1100px) {\n    opacity: 1;\n    max-height: 300px;\n    transition: opacity 0.1s var(--default-timing), max-height 0.05s var(--default-timing);\n  }\n`\n\nconst Keyboard = (props) => {\n\n  // Arrays for storing currently highlighted keys.\n  const [highlightedAccuratePressed, setHighlightedAccuratePressed] = useState([]);\n  const [highlightedInaccuratePressed, setHighlightedInaccuratePressed] = useState([]);\n  const [highlightedAccurate, setHighlightedAccurate] = useState([]);\n\n  /**\n   * Check if previously typed letter was the last of current word...\n   * Used for highlighting space as accurate key at the end of word.\n   * Is needed because otherwise last letter of the word is highlighted instead.\n   */\n  const [wasEndOfWord, setWasEndOfWord] = useState(false);\n\n  useEffect(() => {\n    if (props.endOfWord === true) {\n      setWasEndOfWord(true);\n    } else {\n      setWasEndOfWord(false);\n    }\n  }, [props.typedRecently, props.endOfWord]);\n\n  useEffect(() => {\n    if (props.lastKey.length > 0 && props.typedRecently === true && props.lastKey !== 'Backspace') {\n      // Highlight correctly input keys\n      if (props.lastKey === props.correctKey && !props.spacePressedRecently) {\n        setHighlightedAccuratePressed((highlightedAccuratePressed) => highlightedAccuratePressed.concat(props.lastKey.toLowerCase()));\n      }\n      // Highlight inaccurate key.\n      if (props.lastKey !== props.correctKey  && !props.spacePressedRecently) {\n        setHighlightedInaccuratePressed((highlightedInaccuratePressed) => highlightedInaccuratePressed.concat(props.lastKey.toLowerCase()));\n      }\n      // Highlight current correct key.\n      if (props.correctKey !== undefined && props.nextKey !== undefined) {\n        setHighlightedAccurate((highlightedAccurate) => (\n          (props.spacePressedRecently || (wasEndOfWord === true && props.inputLength > 0)) &&\n          (props.endOfWord === true || props.wordIncorrect === true) ?\n            highlightedAccurate.concat(props.nextKey.toLowerCase()) : highlightedAccurate.concat(props.correctKey.toLowerCase())\n        ));\n      }\n    }\n  }, [props.typedRecently]);\n\n  // Timers for removing keys from highlight-arrays.\n  useEffect(() => {\n    if (highlightedAccuratePressed.length > 0 && props.typedRecently === true) {\n      setTimeout(() => {\n        setHighlightedAccuratePressed((highlightedAccuratePressed) => (highlightedAccuratePressed.slice(1)));\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }, [highlightedAccuratePressed, props.typedRecently]);\n\n  useEffect(() => {\n    if (highlightedInaccuratePressed.length > 0 && props.typedRecently === true) {\n      setTimeout(() => {\n        setHighlightedInaccuratePressed((highlightedInaccuratePressed) => (highlightedInaccuratePressed.slice(1)));\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }, [highlightedInaccuratePressed, props.typedRecently]);\n\n  useEffect(() => {\n    if (highlightedAccurate.length > 0 && props.typedRecently === true) {\n      setTimeout(() => {\n        setHighlightedAccurate((highlightedAccurate) => (highlightedAccurate.slice(1)));\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }, [highlightedAccurate, props.typedRecently]);\n\n  return (\n    <StyledKeyboard keyboardVisible={props.keyboardVisible}>\n      {LAYOUTS[props.currentLayout].LAYOUT.map((row, rowInd) => {\n        return (\n          <Row\n            key={rowInd}\n            iso={rowInd === 2 && row.length > 12} // ANSI has 12 bottom keys\n            lastKey={props.lastKey}\n            shiftPressedRecently={props.shiftPressedRecently}\n            leftShiftPressed={props.leftShiftPressed}\n            leftShiftPressedInaccurate={\n              rowInd === 2 &&\n              props.correctKey !== undefined &&\n              props.leftShiftPressed && highlightedInaccuratePressed.length > 0 &&\n              props.correctKey !== props.correctKey.toUpperCase()\n            }\n            rightShiftPressed={props.rightShiftPressed}\n            rightShiftPressedInaccurate={\n              rowInd === 2 &&\n              props.correctKey !== undefined &&\n              props.rightShiftPressed && highlightedInaccuratePressed.length > 0 &&\n              props.correctKey !== props.correctKey.toUpperCase()\n            }\n            shiftAccurate={\n              // Highlight shift as accurate if it was correctly input, but also if it should have been and wasn't.\n              rowInd === 2 &&\n              (((props.correctKey !== undefined && props.correctKey === props.correctKey.toUpperCase()) && (highlightedAccurate.length > 0 && !props.spacePressedRecently)) ||\n-              (props.spacePressedRecently === true && props.wordIncorrect === true && !props.endOfWord && props.nextKey === props.nextKey.toUpperCase()))\n            }\n          >\n            {row.map((keySymbol, keyInd) => {\n              return (\n                <Key\n                  key={keyInd}\n                  highlightPressedAccurate={highlightedAccuratePressed.indexOf(keySymbol) !== -1}\n                  highlightPressedInaccurate={highlightedInaccuratePressed.indexOf(keySymbol) !== -1}\n                  highlightAccurate={\n                    (highlightedAccurate.indexOf(keySymbol) !== -1 && props.lastKey.length === 1) ||\n                    (props.spacePressedRecently === true && props.wordIncorrect === true && props.nextKey.toLowerCase() === keySymbol)\n                  }\n                >\n                  {keySymbol.toUpperCase()}\n                </Key>\n              );\n            })}\n          </Row>\n        );\n      })}\n      <Row>\n        <Key\n          highlightSpacePressed={\n            (props.spacePressedRecently === true || highlightedAccurate.indexOf(' ') !== -1) &&\n            props.endOfWord === false &&\n            props.wordIncorrect === false &&\n            props.playing === true\n          }\n          highlightAccurate={highlightedAccurate.indexOf(' ') !== -1}\n          highlightPressedInaccurate={\n            props.spacePressedRecently === true &&\n            props.wordIncorrect === true\n          }\n        >\n        {`\\u2007`}{/* A good looking whitespace character. */}\n        </Key>\n      </Row>\n    </StyledKeyboard>\n  );\n}\n\nexport default Keyboard;","/**\n * TYPE TEST MAIN COMPONENT\n */\n\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport g from '../../globals.js';\nimport Input from './input.js';\nimport TestTimer from './test-countdown.js';\nimport Text from './text.js';\nimport Keyboard from './onscreen-keyboard.js';\n\nconst StyledTypeTest = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: ${props => props.theme.primary};\n  font-size: 1.5rem;\n`\n\nconst TypeTest = (props) => {  \n\n  // Time left printed on screen\n  const [timeLeft, setTimeLeft] = useState(props.testLength);\n\n  /**\n   * Keep track of currentWord.\n   * Input is compared with currentWord to progress in test.\n   */\n  const [currentWordInd, setCurrentWordInd] = useState(0);\n\n  const increaseCurrentWordInd = () => {\n    setCurrentWordInd(currentWordInd => currentWordInd + 1);\n  }\n\n  /**\n   * Subtract from currentWord's index.\n   * Called when word array is updated (old words shifted, new words pushed).\n   */\n  const updateCurrentWordInd = (count) => {\n    setCurrentWordInd(currentWordInd => currentWordInd - count);\n  }\n\n  const [caretPosition, setCaretPosition] = useState(0);\n\n  // Value of test's hidden text-input.\n  const [inputValue, setInputValue] = useState('');\n\n  // Used to flash highlight incorrect letters when word is checked.\n  const [wordIncorrect, setWordIncorrect] = useState(false);\n\n  // Keep track of correctly input words for calculating score.\n  const [correctWordsCount, setCorrectWordsCount] = useState(0);\n\n  /**\n   * Quickly flash a prop.\n   * Used for onscreen keyboard highlighting and to reset caret animation.\n   * */\n  const [typedRecently, setTypedRecently] = useState(false);\n\n  const updateTypedRecently = () => {\n    setTypedRecently(true);\n    setTimeout(() => {\n      setTypedRecently(false);\n    }, 0);\n  }\n\n  const [lastKey, setLastKey] = useState('');\n\n  const [spacePressedRecently, setSpacePressedRecently] = useState(false);\n\n  const flashSpacePressedRecently = () => {\n    setSpacePressedRecently(true);\n    setTimeout(() => {\n      setSpacePressedRecently(false);\n    }, g.KEYBOARD_HIGHLIGHT_DURATION);\n  }\n\n  /**\n   * Handle shift keys:\n   * Keep track of whether shift keys are currently or have recently been pressed.\n   * Used for onscreen keyboard highlighting.\n   */\n  const [leftShiftPressed, setLeftShiftPressed] = useState(false);\n  const [rightShiftPressed, setRightShiftPressed] = useState(false);\n\n  const [shiftPressedRecently, setShiftPressedRecently] = useState(false);\n\n  useEffect(() => {\n    if (!leftShiftPressed && !rightShiftPressed) {\n      setShiftPressedRecently(true);\n      setTimeout(() => {\n        setShiftPressedRecently(false);\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }, [leftShiftPressed, rightShiftPressed]);\n\n  // Compare array word with str from text-input\n  const checkFullWord = () => {\n    return props.testWords[currentWordInd].join('') === inputValue;\n  }\n\n  /**\n   * End test when timer expires or escape is pressed.\n   * Stops test, clears input, resets currentWord and currentRow,\n   * loads a new set of rows of words and rewinds caret.\n   */  \n  const endTest = () => {\n    props.setPlaying(false);\n    setInputValue('');\n    setCurrentWordInd(0);\n    props.setTestWords(props.loadWords());\n    setTimeLeft(props.testLength);\n  }\n\n  const handleSpace = () => {\n    // Check if input matches currentWord.\n    if (checkFullWord()) {\n      increaseCurrentWordInd();\n      setInputValue('');\n      setCorrectWordsCount((correctWordsCount) => (correctWordsCount + 1));\n    } else {\n      setWordIncorrect(true);\n      setCaretPosition(inputValue.length);\n      // PROBLEM: WILL THROW ERROR IF TEST ENDS DURING TIMEOUT. I THINK.\n      setTimeout(() => {\n        setWordIncorrect(false);\n      }, g.KEYBOARD_HIGHLIGHT_DURATION);\n    }\n  }\n\n  /**\n   * Update which word index is current.\n   * Shift words from array, then add some new words to replace them,\n   */\n  const [wordShiftCount, setWordShiftCount] = useState(0);\n\n  useEffect(() => {\n    if (wordShiftCount > 0) {\n      updateCurrentWordInd(wordShiftCount);\n      props.shiftWords(wordShiftCount);\n      props.addWords(wordShiftCount);\n      setWordShiftCount(0);\n    }\n  }, [wordShiftCount]);\n\n  // Timer for test duration countdown.\n  useEffect(() => {\n    let timerInterval;\n\n    if (props.playing && props.documentIsFocused && !props.controlPanelOpen) {\n      /**\n       * Runs a clock which decreases timeLeft by 1 every second.\n       * Timer clears if document loses focus. Restarts when focus is regained.\n       * BAD SOLUTION:\n       * Drifts - These \"seconds\" are slightly longer than normal seconds, about ~1s over 30s\n       * Inaccurate / bad because it gives a < 1s leeway when regaining focus.\n       * FIX A BETTER TIMER AND TIME HANDLING STRATEGY\n       */\n      timerInterval = setInterval(() => {\n        setTimeLeft((timeLeft) => (timeLeft - 1));\n      }, 1000);\n    };\n\n    return () => {\n      clearInterval(timerInterval);\n    }\n  }, [props.playing, props.documentIsFocused, timeLeft, props.controlPanelOpen]);\n\n  // End test when timer reaches zero.\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      props.calcTestScore(correctWordsCount);\n      endTest();\n      props.setTestConcluded(true);\n    }\n  }, [props.calcTestScore, props.setTestConcluded, endTest, timeLeft, correctWordsCount]);\n\n  // Re-render when test-time-controls button is clicked\n  useEffect(() => {\n    if (!props.playing) setTimeLeft(props.testLength);\n  }, [props.testLength]);\n\n  return(\n    <StyledTypeTest focused={props.documentIsFocused}>\n      <TestTimer\n        playing={props.playing}\n        timeLeft={timeLeft}\n        documentIsFocused={props.documentIsFocused}\n        controlPanelOpen={props.controlPanelOpen}\n      />\n      <Text\n        testWords={props.testWords}\n        focused={props.documentIsFocused}\n        currentWord={props.testWords[currentWordInd]}\n        currentWordInd={currentWordInd}\n        setWordShiftCount={setWordShiftCount}\n        playing={props.playing}\n        inputValue={inputValue}\n        caretPosition={caretPosition}\n        typedRecently={typedRecently}\n        updateTypedRecently={updateTypedRecently}\n        wordIncorrect={wordIncorrect}\n        controlPanelOpen={props.controlPanelOpen}\n        />\n      <Input\n        currentWord={props.testWords[currentWordInd]}\n        playing={props.playing}\n        setPlaying={props.setPlaying}\n        focused={props.documentIsFocused}\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n        handleSpace={handleSpace}\n        endTest={endTest}\n        caretPosition={caretPosition}\n        setCaretPosition={setCaretPosition}\n        updateTypedRecently={updateTypedRecently}\n        flashSpacePressedRecently={flashSpacePressedRecently}\n        setLastKey={setLastKey}\n        setShiftPressedRecently={setShiftPressedRecently}\n        setLeftShiftPressed={setLeftShiftPressed}\n        setRightShiftPressed={setRightShiftPressed}\n        controlPanelOpen={props.controlPanelOpen}\n      />\n      <Keyboard\n        playing={props.playing}\n        keyboardVisible={props.keyboardVisible}\n        currentLayout={props.currentLayout}\n        correctKey={props.testWords[currentWordInd][inputValue.length - 1]}\n        nextKey={props.testWords[currentWordInd][inputValue.length] ? props.testWords[currentWordInd][inputValue.length] : ' '}\n        spacePressedRecently={spacePressedRecently}\n        wordIncorrect={wordIncorrect}\n        shiftPressedRecently={shiftPressedRecently}\n        leftShiftPressed={leftShiftPressed}\n        rightShiftPressed={rightShiftPressed}\n        lastKey={lastKey}\n        typedRecently={typedRecently}\n        endOfWord={inputValue.length === props.testWords[currentWordInd].length}\n        inputLength={inputValue.length}\n        currentWordLength={props.testWords[currentWordInd].length}\n      />\n    </StyledTypeTest>\n  );\n}\n\nexport default TypeTest;\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst StyledScoreScreen = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: ${props => props.theme.primary};\n  font-size: 1.5rem;\n  font-size: 2.5rem;\n  text-align: center;\n\n  /* TODO: Clean up this span nonsense. Redesign this whole page while you're at it. */\n\n  & span {\n    display: inline-block;\n  }\n  & span + span {\n    font-size: 2rem;\n    margin-top: 1.5rem;\n    & > span {\n      color: ${props => props.highestScore === props.testScore ? props.theme.highlight : props.theme.primary};\n    }\n  }\n  & span + span + span {\n    font-size: 1.5rem;\n    margin-top: 1.5rem;\n  }\n`\n\nconst ScoreScreen = (props) => {\n\n  useEffect(() => {\n    const handleKeypress = (e) => {\n      if (props.testConcluded && !props.controlPanelOpen) {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          props.setTestConcluded(!props.testConcluded);\n        }\n      }\n    }\n    window.addEventListener('keydown', handleKeypress);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeypress);\n    };\n  }, [props, props.setTestConcluded, props.testConcluded]);\n\n  return (\n    <StyledScoreScreen\n      testScore={props.testScore}\n      highestScore={props.highestScore}\n    >\n      <span>{props.testScore} WPM!</span>\n      <span>Best result: <span>{props.highestScore}</span></span>\n      {props.highestScore === props.testScore ?\n        <span>New best result!</span>\n        :\n        <></>\n      }\n    </StyledScoreScreen>\n  )\n}\n\nexport default ScoreScreen;","/**\n * TYPE TEST SCREEN HANDLER\n * Wrapper component for TYPE TEST. Handles rendering of the test, score screen as well as the header.\n */\n\nimport React, {useState, useEffect, useCallback} from 'react';\nimport styled from 'styled-components';\nimport g, {LAYOUTS} from '../../globals.js';\nimport words from '../../assets/game/words.js';\nimport Header from '../ui/header.js';\nimport TypeTest from './type-test.js';\nimport ScoreScreen from './score-screen.js';\n\nconst TypeTestWrapper = styled.div`\n\n  & > div {\n    margin: 0 auto;\n    padding: 1.5rem;\n  }\n\n  @media ${g.medium} {\n    & > div {\n      width: min(80vw, 900px);\n    }\n  }\n\n  @media ${g.large} {\n    & > div {\n      width: 900px;\n      padding-top: 2.5rem;\n    }\n  }\n`\n\nconst TypeTestHandler = (props) => {\n\n  const [playing, setPlaying] = useState(false);\n\n  const [controlPanelOpen, setControlPanelOpen] = useState(false);\n\n  /**\n   * Keep track of whether document is focused.\n   * Used to blur text and pause test, if focus is lost.\n   */\n  const [documentIsFocused, setDocumentIsFocused] = useState(document.hasFocus());\n\n  const handleBlur = useCallback(() => {\n    setDocumentIsFocused(false);\n  },[]);\n\n  const handleFocus = useCallback(() => {\n    setDocumentIsFocused(true);\n  },[]);\n\n  const [currentLayout, setCurrentLayout] = useState(g.KEYBOARD_DEFAULT_LAYOUT);\n\n  const handleKeyDown = useCallback((event) => {\n    switch(event.key) {\n      case 'Escape':\n        setControlPanelOpen(false);\n        break;\n      case LAYOUTS[currentLayout].CONTROL_PANEL_HOTKEY:\n        setControlPanelOpen(!controlPanelOpen);\n        break;\n      case 'Tab':\n        // Enable focus highlighting.\n        document.body.classList.remove('no-outline');\n        break;\n      default:\n        break;\n    };\n  },[currentLayout, controlPanelOpen]);\n\n  useEffect(() => {\n    window.addEventListener('blur', handleBlur);\n    window.addEventListener('focus', handleFocus);\n    document.body.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('blur', handleBlur);\n      window.removeEventListener('focus', handleFocus);\n      document.body.removeEventListener('keydown', handleKeyDown);\n    }\n  }, [handleKeyDown, handleBlur, handleFocus]);\n\n  // Stores selected test length (in seconds).\n  const [testLength, setTestLength] = useState(g.TEST_LENGTH_DEFAULT);\n\n  // Determines whether type test or score screen is displayed.\n  const [testConcluded, setTestConcluded] = useState(false);\n\n  const [keyboardVisible, setKeyboardVisible] = useState(g.KEYBOARD_DEFAULT_VISIBILITY);\n\n  const getWord = (words) => {\n    let word = '';\n    do {\n      // Retrieve a random word from static asset array of words.\n      word = words[Math.floor(Math.random() * words.length)];\n    } while ( // Make sure it is not already in current testWords.\n      Array.from(props.testWords.map((testWord) => testWord.join(''))).includes(word)\n    );\n    // Return array of letters.\n    return word.split('');\n  }\n\n  // Remove words from the front of testWords array.\n  const shiftWords = (count) => {\n    props.setTestWords(testWords => testWords.slice(count));\n  }\n\n  // Add some new words to the end of testWords array.\n  const addWords = (count) => {\n    let newWords = [];\n    for (let i = 0; i < count; i++) {\n      newWords.push(getWord(words));\n    }\n    props.setTestWords(testWords => testWords.concat(newWords));\n  }\n\n  const [highestScore, setHighestScore] = useState(() => {\n    // Check if there is a cookie with a key which matches COOKIE_NAME.\n    if (document.cookie.split(';').some((item) => item.trim().startsWith(g.SCORE_COOKIE_NAME))) {\n      return (\n        // Return its value.\n        document.cookie.split(';').find(row => row.startsWith(g.SCORE_COOKIE_NAME)).split('=')[1]\n      );\n    } else {\n      // If there is no matching cookie, set highestScore to 0.\n      return 0;\n    }\n  });\n\n  const [testScore, setTestScore] = useState(0);\n\n  function calcTestScore (correctWordCount) {\n    // Calculate words per minute.\n    let wpm = correctWordCount * (60 / testLength); // https://www.speedtypingonline.com/typing-equations DO SOMETHING LIKE THIS INSTEAD\n    setTestScore(wpm);\n  }\n\n  useEffect(() => {\n    if (testConcluded === true && testScore > highestScore) {\n      setHighestScore(testScore);\n    }\n  }, [testConcluded, testScore, highestScore, setHighestScore]);\n\n  // Highest score cookies.\n  useEffect(() => {\n    if (highestScore > 0) {\n      document.cookie = `${g.SCORE_COOKIE_NAME}=${highestScore};max-age=${g.COOKIE_MAX_AGE}`;\n      document.cookie = `${g.TIMESTAMP_COOKIE_NAME}=${Date.now()};max-age=${g.COOKIE_MAX_AGE}`;\n    }\n  }, [highestScore]);\n\n  return (\n    <TypeTestWrapper>\n      <Header\n        controlPanelOpen={controlPanelOpen}\n        setControlPanelOpen={setControlPanelOpen}\n        currentTheme={props.currentTheme}\n        setTheme={props.setTheme}\n        testLength={testLength}\n        setTestLength={setTestLength}\n        currentLayout={currentLayout}\n        setCurrentLayout={setCurrentLayout}\n        keyboardVisible={keyboardVisible}\n        setKeyboardVisible={setKeyboardVisible}\n        playing={playing}\n        documentIsFocused={documentIsFocused}\n        testConcluded={testConcluded}\n      />\n      {testConcluded ?\n        /* Render score screen if test has concluded. */\n        <ScoreScreen\n        testScore={testScore}\n        setTestConcluded={setTestConcluded}\n        testConcluded={testConcluded}\n        highestScore={highestScore}\n        controlPanelOpen={controlPanelOpen}\n        />\n        : /* Otherwise render type test. */\n        <TypeTest\n          playing={playing}\n          setPlaying={setPlaying}\n          calcTestScore={calcTestScore}\n          testLength={testLength}\n          testConcluded={testConcluded}\n          setTestConcluded={setTestConcluded}\n          documentIsFocused={documentIsFocused}\n          testWords={props.testWords}\n          setTestWords={props.setTestWords}\n          loadWords={props.loadWords}\n          shiftWords={shiftWords}\n          addWords={addWords}\n          controlPanelOpen={controlPanelOpen}\n          keyboardVisible={keyboardVisible}\n          currentLayout={currentLayout}\n        />\n      }\n    </TypeTestWrapper>\n  ); \n}\n\nexport default TypeTestHandler;","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport g, {themeSettings} from '../../globals.js';\nimport words from '../../assets/game/words.js';\nimport themes from '../../themes.js';\nimport {ThemeProvider} from 'styled-components';\nimport TypeTestHandler from '../game/type-test-handler.js';\n\n/**\n * TODO:\n * Store control panel's settings somewhere. Probably in a cookie.\n * Make header responsive.\n * More theming.\n * Keyboard layout selector.\n * Re-think auto-focusing (would be nice to be able to navigate control panel with keyboard).\n * Allow next word even if current incomplete, allow input longer than current word.\n * Overhaul test score calculation.\n * Find new approach for test time countdown.\n * Name & logo.\n * Control panel-like \"help panel\", teaching hotkeys (and maybe test-instructions?)\n * Footer?\n * testWords in different languages?\n * Context to get rid of some prop drilling?\n */\n\nconst Main = styled.main`\n\theight: 100%;\n\twidth: 100%;\n\tposition: fixed;\n\tbackground-color: ${props => props.theme.backgroundPrimary};\n\tfont-family: var(--font-main);\n`\n\nconst App = () => {\n  // Theme passed to ThemeProvider, wrapping entire app.\n  const [currentTheme, setCurrentTheme] = useState(themes[themeSettings.DEFAULT_THEME]);\n  const setTheme = (theme) => {\n    setCurrentTheme(themes[theme]);\n  }\n\n  // Disable focus highlighting when using mouse.\n  useEffect(() => {\n    const handleMouseDown = () => {\n      document.body.classList.add('no-outline');\n    }\n\n\t\tdocument.body.addEventListener('mousedown', handleMouseDown);\n    return () => {\n      document.body.removeEventListener('mousedown', handleMouseDown);\n    }\n  }, []);\n\n  // testWords related stuff awkwardly here instead of in type-test-handler.js to prevent a couple re-renders...\n  // Load an array of unique words.\n  const loadWords = () => {\n    let usedWords = [];\n    let wordArr = [];\n\n    while (wordArr.length < g.TEST_WORD_COUNT) {\n      let word = words[Math.floor(Math.random() * words.length)];\n      if (!usedWords.includes(word)) {\n        usedWords.push(word);\n        wordArr.push(word.split(''));\n      }\n    }\n    return wordArr;\n  }\n\n  const [testWords, setTestWords] = useState(loadWords());\n\n\treturn(\n\t\t<>\n      <ThemeProvider theme={currentTheme}>\n        <Main>\n          <TypeTestHandler\n            currentTheme={currentTheme}\n            setTheme={setTheme}\n            testWords={testWords}\n            setTestWords={setTestWords}\n            loadWords={loadWords}\n          />\n        </Main>\n      </ThemeProvider>\n\t\t</>\n\t);\n} \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app.js';\nimport {GlobalStyle} from './globals.js';\nimport reportWebVitals from './reportWebVitals';\nimport '../src/assets/fonts/fonts.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}